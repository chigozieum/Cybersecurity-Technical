Comprehensive Guide to Linux System Observability: Mastering the "Big 4" Resources in Enterprise Environments
Introduction to System Observability
In enterprise Linux environments, effective system monitoring is crucial for maintaining optimal performance, preventing outages, and quickly resolving issues when they arise. This comprehensive guide focuses on the "Big 4" resources that every Linux engineer must monitor: CPU, Memory, Disk, and Network. We'll explore a systematic approach to observability through three critical dimensions: utilization, saturation, and errors.

For beginners entering the enterprise Linux space, understanding these monitoring concepts and tools will provide a solid foundation for effective system administration. This guide will walk you through practical commands, explain their output, and provide real-world scenarios where these tools prove invaluable.

Table of Contents
Understanding the Observability Framework
Setting Up Your Monitoring Environment
CPU Monitoring
Memory Monitoring
Disk Monitoring
Network Monitoring
Integrated Monitoring Approaches
Automating Monitoring Tasks
Implementing Alerting Systems
Building Custom Dashboards
Enterprise-Scale Considerations
Troubleshooting Common Issues
Best Practices
Advanced Topics
Conclusion
Understanding the Observability Framework
The "Big 4" resources (CPU, Memory, Disk, and Network) form the foundation of system performance. For each resource, we examine three critical dimensions:

Utilization: How much of the resource is being used
Saturation: Whether the resource is overloaded, causing queuing or delays
Errors: Problems occurring with the resource
This USE (Utilization, Saturation, Errors) methodology, developed by performance expert Brendan Gregg, provides a systematic approach to identifying performance bottlenecks.

Setting Up Your Monitoring Environment
Before diving into specific monitoring tools, let's ensure your environment is properly configured.

Installing Essential Monitoring Packages
# On Debian/Ubuntu systems
sudo apt update
sudo apt install sysstat procps net-tools iproute2 smartmontools dstat htop atop iotop iftop

# On RHEL/CentOS systems
sudo yum install epel-release
sudo yum update
sudo yum install sysstat procps-ng net-tools iproute smartmontools dstat htop atop iotop iftop
Enabling the sysstat Service
The sysstat package provides essential tools like sar, iostat, and mpstat. To ensure it collects data regularly:

# Enable and start the sysstat service
sudo systemctl enable sysstat
sudo systemctl start sysstat

# Verify it's running
sudo systemctl status sysstat
Configuring Collection Intervals
Edit the sysstat configuration to adjust data collection frequency:

# Edit the sysstat configuration file
sudo vi /etc/sysstat/sysstat

# Set collection interval (in seconds)
# Find and modify the INTERVAL parameter
INTERVAL=300  # 5-minute intervals

# Save and restart the service
sudo systemctl restart sysstat
CPU Monitoring
CPU Utilization
CPU utilization tells you how busy your processors are. High utilization isn't necessarily bad, but sustained high utilization can indicate the need for optimization or additional resources.

Using mpstat
The mpstat command provides detailed CPU statistics:

# Display CPU statistics for all CPUs
mpstat -P ALL 1

# Sample output:
# Linux 5.4.0-104-generic (hostname)    05/05/2023    _x86_64_    (8 CPU)
# 
# 01:23:45 PM  CPU    %usr   %nice    %sys %iowait    %irq   %soft  %steal  %guest  %gnice   %idle
# 01:23:46 PM  all   15.63    0.00    5.25    0.13    0.00    0.13    0.00    0.00    0.00   78.87
# 01:23:46 PM    0   18.00    0.00    7.00    0.00    0.00    0.00    0.00    0.00    0.00   75.00
# ...
Key metrics to observe:

%usr: User-level processing
%sys: System-level (kernel) processing
%iowait: Time waiting for I/O operations
%idle: CPU idle time
Using pidstat
To identify which processes are consuming CPU resources:

# Display CPU statistics for processes, refreshing every 2 seconds
pidstat 2

# Monitor a specific process
pidstat -p <PID> 2

# Show top CPU-consuming processes with thread details
pidstat -t -p ALL 1 | sort -nr -k8
CPU Saturation
CPU saturation occurs when processes are waiting for CPU time. This is measured by the run queue length and load average.

Using vmstat
# Display virtual memory statistics, refreshing every 2 seconds
vmstat 2

# Sample output:
# procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----
#  r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st
#  2  0      0 7409340 491260 7176292    0    0     0     1    1    2  1  1 98  0  0
#  5  0      0 7409156 491260 7176292    0    0     0    26 1149  994  2  1 97  0  0
The r column shows the run queue length - the number of processes waiting for CPU time. Values consistently above the number of CPU cores indicate saturation.

Using top or uptime for Load Average
# Display system load averages
uptime

# Sample output:
# 13:45:02 up 15 days,  4:34,  3 users,  load average: 1.25, 1.15, 0.99
Load averages represent the average number of processes that are either running or waiting for resources over 1, 5, and 15-minute intervals. As a rule of thumb, sustained load averages higher than the number of CPU cores indicate saturation.

CPU Errors
CPU errors can be hardware-related or manifest as application crashes.

# Check system logs for CPU-related errors
sudo journalctl | grep -i "cpu\|core\|mce"

# Check for hardware errors in the kernel ring buffer
sudo dmesg | grep -i "cpu\|core\|mce"

# Monitor Machine Check Exceptions (hardware errors)
sudo mcelog --daemon --logfile /var/log/mcelog
For more detailed CPU error analysis:

# Install and use lm-sensors for CPU temperature monitoring
sudo apt install lm-sensors
sudo sensors-detect  # Configure sensor detection
sensors  # Display temperatures and other sensor data
Memory Monitoring
Memory Utilization
Memory utilization shows how much RAM is being used by applications, the kernel, and for caching.

Using free
# Display memory usage in human-readable format
free -h

# Sample output:
#               total        used        free      shared  buff/cache   available
# Mem:           31Gi        15Gi       3.5Gi       1.0Gi        13Gi        15Gi
# Swap:         2.0Gi          0B       2.0Gi
Key metrics:

used: Memory used by applications and the kernel
free: Completely unused memory
buff/cache: Memory used for buffers and cache (can be reclaimed if needed)
available: Estimate of memory available for new applications without swapping
Using sar for Memory Utilization Trends
# Display memory utilization every 2 seconds for 10 samples
sar -r 2 10

# View historical memory usage (from sysstat logs)
sar -r -f /var/log/sysstat/sa$(date +%d)

# Check for specific memory usage patterns like "%memused"
sar -r | grep "%memused"
Using top for Process Memory Usage
# Start top
top

# Press Shift+M to sort by memory usage
Memory Saturation
Memory saturation occurs when the system starts swapping or when the OOM (Out of Memory) killer activates.

Monitoring Swap Activity
# Monitor swap usage over time
sar -S 1

# Check if swapping is occurring
vmstat 1 | awk '{print $7 " " $8}'  # si and so columns show swap in/out

# Detailed swap information per process
for file in /proc/*/status; do awk '/VmSwap|Name/{printf $2 " " $3}END{ print ""}' $file 2>/dev/null; done | sort -k 2 -nr | head -20
Checking for OOM Killer Activity
# Search system logs for OOM killer messages
sudo journalctl | grep -i "out of memory"
sudo dmesg | grep -i "oom"

# Monitor kernel OOM messages in real-time
sudo tail -f /var/log/kern.log | grep -i "oom"
Memory Errors
Memory errors can include hardware failures or application memory leaks.

# Check system logs for memory-related errors
sudo journalctl | grep -i "memory\|ram\|dimm"

# Check for memory-related hardware errors
sudo dmesg | grep -i "memory\|ram\|dimm"

# Use memtest86+ for thorough memory testing (requires reboot)
sudo apt install memtest86+
# Reboot and select memtest86+ from the boot menu
Detecting Memory Leaks
# Install valgrind for memory leak detection
sudo apt install valgrind

# Run an application with valgrind
valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes --verbose /path/to/program
Disk Monitoring
Disk Utilization
Disk utilization shows how much of your storage space is being used and the I/O activity.

Using df for Disk Space
# Check disk space usage in human-readable format
df -h

# Check inodes usage (for many small files)
df -i

# Find largest directories
sudo du -h --max-depth=1 /path/to/directory | sort -hr
Using iostat for Disk I/O
# Display disk I/O statistics every 2 seconds
iostat -xz 2

# Sample output:
# Device            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util
# sda              0.01    1.21      0.29     33.02     0.00     0.76   0.00  38.47    0.26    2.99   0.00    24.14    27.36   0.11   0.01
# sdb              0.01    0.00      0.29      0.00     0.00     0.00   0.00   0.00    0.31    0.00   0.00    24.14     0.00   0.27   0.00
Key metrics:

r/s, w/s: Reads and writes per second
rkB/s, wkB/s: Read and write kilobytes per second
%util: Percentage of CPU time during which I/O requests were issued
await: Average time for I/O requests (in milliseconds)
Using sar for Disk Utilization Trends
# Display block device statistics every 2 seconds for 10 samples
sar -d 2 10

# View historical disk usage
sar -d -f /var/log/sysstat/sa$(date +%d)
Disk Saturation
Disk saturation occurs when I/O operations are queued, causing delays.

# Monitor disk saturation with iostat
iostat -xz 1 | grep -v "loop"

# Look for high values in the aqu-sz (average queue size) column
Using iotop for Process I/O
# Install iotop if not already installed
sudo apt install iotop

# Monitor disk I/O by process
sudo iotop

# Show only processes doing I/O
sudo iotop -o
Disk Errors
Disk errors can indicate hardware failures or filesystem corruption.

# Check system logs for disk errors
sudo journalctl | grep -i "error\|fail\|bad\|corrupt" | grep -i "disk\|sda\|sdb"

# Check the kernel ring buffer for disk errors
sudo dmesg | grep -i "error\|fail\|bad\|corrupt" | grep -i "disk\|sda\|sdb"
Using SMART Tools for Disk Health
# Install smartmontools if not already installed
sudo apt install smartmontools

# Check disk health
sudo smartctl -a /dev/sda

# Run a short self-test
sudo smartctl -t short /dev/sda

# Check test results
sudo smartctl -l selftest /dev/sda
Network Monitoring
Network Utilization
Network utilization shows how much of your network bandwidth is being used.

Using sar for Network Interface Statistics
# Display network statistics every 2 seconds
sar -n DEV 2

# Sample output:
# 01:23:45 PM     IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s
# 01:23:47 PM        lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00
# 01:23:47 PM      eth0    350.50    280.00     45.65     35.60      0.00      0.00      0.00
Key metrics:

rxpck/s, txpck/s: Received and transmitted packets per second
rxkB/s, txkB/s: Received and transmitted kilobytes per second
Using ip or ifconfig for Interface Status
# Display network interface information
ip -s link

# Alternative using ifconfig
ifconfig

# Monitor network traffic in real-time
watch -n 1 "ifconfig eth0 | grep bytes"
Using nethogs for Per-Process Network Usage
# Install nethogs if not already installed
sudo apt install nethogs

# Monitor network traffic by process
sudo nethogs
Network Saturation
Network saturation occurs when the network interface is overwhelmed, leading to dropped packets or retransmissions.

# Check for interface overruns and dropped packets
ifconfig eth0 | grep -E "dropped|overruns"

# Monitor network errors and drops
netstat -i

# Sample output:
# Kernel Interface table
# Iface      MTU    RX-OK RX-ERR RX-DRP RX-OVR    TX-OK TX-ERR TX-DRP TX-OVR Flg
# eth0      1500  3845555      0      0      0  2945555      0      0      0 BMRU
Using netstat for Connection States
# Check TCP connection states
netstat -ant | awk '{print $6}' | sort | uniq -c | sort -n

# Monitor TCP retransmissions
netstat -s | grep -i retrans
Network Errors
Network errors can include packet drops, collisions, or interface failures.

# Check for network errors
netstat -i

# Monitor network errors in real-time
watch -n 1 "netstat -i"

# Check for specific TCP/IP errors
netstat -s | grep -i "error\|drop\|timeout\|fail\|invalid"
Using tcpdump for Packet Analysis
# Install tcpdump if not already installed
sudo apt install tcpdump

# Capture packets on a specific interface
sudo tcpdump -i eth0 -n

# Capture packets for a specific host
sudo tcpdump -i eth0 host 192.168.1.100

# Capture packets for a specific port
sudo tcpdump -i eth0 port 80
Integrated Monitoring Approaches
While individual tools provide specific insights, integrated monitoring approaches offer a more comprehensive view.

Using htop for System Overview
# Install htop if not already installed
sudo apt install htop

# Run htop
htop
htop provides an interactive, real-time view of processes, CPU, and memory usage. Press F2 for setup options to customize the display.

Using atop for System Activity Monitoring
# Install atop if not already installed
sudo apt install atop

# Run atop
atop

# View historical data (if atop service is running)
atop -r /var/log/atop/atop_20230505
atop records system and process activity for later analysis, which is invaluable for troubleshooting intermittent issues.

Using dstat for Combined Resource Statistics
# Install dstat if not already installed
sudo apt install dstat

# Run dstat with combined statistics
dstat -cdnmgs --top-cpu --top-mem

# Custom combination of statistics
dstat -c -d -n -m -g -s 5
dstat combines information from various system resources into a single view, making it easier to spot correlations between different metrics.

Automating Monitoring Tasks
Automation is essential for enterprise-scale monitoring. Here's how to set up basic automated monitoring.

Creating Monitoring Scripts
Create a basic monitoring script:

#!/bin/bash
# File: system_monitor.sh

LOG_FILE="/var/log/system_monitor.log"
DATE=$(date '+%Y-%m-%d %H:%M:%S')

echo "=== System Status at $DATE ===" >> $LOG_FILE

# CPU Load
echo "CPU Load:" >> $LOG_FILE
uptime | awk '{print $10 $11 $12}' >> $LOG_FILE

# Memory Usage
echo "Memory Usage:" >> $LOG_FILE
free -h | grep "Mem:" >> $LOG_FILE

# Disk Usage
echo "Disk Usage:" >> $LOG_FILE
df -h / | grep -v "Filesystem" >> $LOG_FILE

# Network Connections
echo "Network Connections:" >> $LOG_FILE
netstat -ant | wc -l >> $LOG_FILE

# Check for high CPU processes
echo "Top 5 CPU-consuming processes:" >> $LOG_FILE
ps aux --sort=-%cpu | head -6 >> $LOG_FILE

# Check for high memory processes
echo "Top 5 memory-consuming processes:" >> $LOG_FILE
ps aux --sort=-%mem | head -6 >> $LOG_FILE

echo "" >> $LOG_FILE
Make the script executable and set up a cron job:

# Make the script executable
chmod +x system_monitor.sh

# Edit crontab
crontab -e

# Add a line to run the script every 15 minutes
*/15 * * * * /path/to/system_monitor.sh
Setting Up Threshold-Based Alerts
Create a script that sends alerts when thresholds are exceeded:

#!/bin/bash
# File: threshold_alert.sh

# Email settings
RECIPIENT="admin@example.com"
SUBJECT="System Alert"

# Thresholds
CPU_THRESHOLD=90
MEM_THRESHOLD=90
DISK_THRESHOLD=90

# Get current values
CPU_USAGE=$(top -bn1 | grep "Cpu(s)" | awk '{print $2 + $4}')
MEM_USAGE=$(free | grep Mem | awk '{print $3/$2 * 100.0}')
DISK_USAGE=$(df / | tail -1 | awk '{print $5}' | tr -d '%')

# Initialize message
MESSAGE=""

# Check CPU
if (( $(echo "$CPU_USAGE > $CPU_THRESHOLD" | bc -l) )); then
    MESSAGE+="CPU usage is high: ${CPU_USAGE}%\n"
fi

# Check Memory
if (( $(echo "$MEM_USAGE > $MEM_THRESHOLD" | bc -l) )); then
    MESSAGE+="Memory usage is high: ${MEM_USAGE}%\n"
fi

# Check Disk
if [ "$DISK_USAGE" -gt "$DISK_THRESHOLD" ]; then
    MESSAGE+="Disk usage is high: ${DISK_USAGE}%\n"
fi

# Send alert if any thresholds exceeded
if [ ! -z "$MESSAGE" ]; then
    echo -e "$MESSAGE" | mail -s "$SUBJECT" "$RECIPIENT"
fi
Make the script executable and set up a cron job:

# Make the script executable
chmod +x threshold_alert.sh

# Edit crontab
crontab -e

# Add a line to run the script every 5 minutes
*/5 * * * * /path/to/threshold_alert.sh
Implementing Alerting Systems
For enterprise environments, more sophisticated alerting systems are necessary.

Setting Up Prometheus and Alertmanager
Prometheus is a powerful monitoring system with an integrated alert manager:

# Create directories for Prometheus
sudo mkdir -p /etc/prometheus /var/lib/prometheus

# Download Prometheus
wget https://github.com/prometheus/prometheus/releases/download/v2.37.0/prometheus-2.37.0.linux-amd64.tar.gz
tar xvfz prometheus-*.tar.gz
cd prometheus-*

# Copy binaries
sudo cp prometheus promtool /usr/local/bin/
sudo cp -r consoles/ console_libraries/ /etc/prometheus/

# Create a Prometheus configuration file
sudo tee /etc/prometheus/prometheus.yml > /dev/null <<EOF
global:
  scrape_interval: 15s

scrape_configs:
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
  
  - job_name: 'node'
    static_configs:
      - targets: ['localhost:9100']
EOF

# Create a systemd service file
sudo tee /etc/systemd/system/prometheus.service > /dev/null <<EOF
[Unit]
Description=Prometheus
Wants=network-online.target
After=network-online.target

[Service]
User=prometheus
Group=prometheus
Type=simple
ExecStart=/usr/local/bin/prometheus \
    --config.file /etc/prometheus/prometheus.yml \
    --storage.tsdb.path /var/lib/prometheus/ \
    --web.console.templates=/etc/prometheus/consoles \
    --web.console.libraries=/etc/prometheus/console_libraries

[Install]
WantedBy=multi-user.target
EOF

# Create prometheus user
sudo useradd -rs /bin/false prometheus

# Set permissions
sudo chown -R prometheus:prometheus /etc/prometheus /var/lib/prometheus

# Enable and start the service
sudo systemctl enable prometheus
sudo systemctl start prometheus
Installing Node Exporter for System Metrics
Node Exporter collects system metrics for Prometheus:

# Download Node Exporter
wget https://github.com/prometheus/node_exporter/releases/download/v1.3.1/node_exporter-1.3.1.linux-amd64.tar.gz
tar xvfz node_exporter-*.tar.gz
cd node_exporter-*

# Copy binary
sudo cp node_exporter /usr/local/bin/

# Create a systemd service file
sudo tee /etc/systemd/system/node_exporter.service > /dev/null <<EOF
[Unit]
Description=Node Exporter
Wants=network-online.target
After=network-online.target

[Service]
User=node_exporter
Group=node_exporter
Type=simple
ExecStart=/usr/local/bin/node_exporter

[Install]
WantedBy=multi-user.target
EOF

# Create node_exporter user
sudo useradd -rs /bin/false node_exporter

# Enable and start the service
sudo systemctl enable node_exporter
sudo systemctl start node_exporter
Configuring Alertmanager
Set up Alertmanager to handle alerts from Prometheus:

# Download Alertmanager
wget https://github.com/prometheus/alertmanager/releases/download/v0.24.0/alertmanager-0.24.0.linux-amd64.tar.gz
tar xvfz alertmanager-*.tar.gz
cd alertmanager-*

# Copy binaries
sudo cp alertmanager amtool /usr/local/bin/
sudo mkdir -p /etc/alertmanager

# Create a configuration file
sudo tee /etc/alertmanager/alertmanager.yml > /dev/null <<EOF
global:
  smtp_smarthost: 'smtp.example.com:587'
  smtp_from: 'alertmanager@example.com'
  smtp_auth_username: 'alertmanager'
  smtp_auth_password: 'password'

route:
  group_by: ['alertname', 'instance', 'severity']
  group_wait: 30s
  group_interval: 5m
  repeat_interval: 3h
  receiver: 'email'

receivers:
- name: 'email'
  email_configs:
  - to: 'admin@example.com'
EOF

# Create a systemd service file
sudo tee /etc/systemd/system/alertmanager.service > /dev/null <<EOF
[Unit]
Description=Alertmanager
Wants=network-online.target
After=network-online.target

[Service]
User=alertmanager
Group=alertmanager
Type=simple
ExecStart=/usr/local/bin/alertmanager \
    --config.file=/etc/alertmanager/alertmanager.yml \
    --storage.path=/var/lib/alertmanager

[Install]
WantedBy=multi-user.target
EOF

# Create alertmanager user and directory
sudo useradd -rs /bin/false alertmanager
sudo mkdir -p /var/lib/alertmanager
sudo chown alertmanager:alertmanager /var/lib/alertmanager /etc/alertmanager/alertmanager.yml

# Enable and start the service
sudo systemctl enable alertmanager
sudo systemctl start alertmanager
Configuring Prometheus Alert Rules
Create alert rules for Prometheus:

# Create an alert rules file
sudo tee /etc/prometheus/alert.rules.yml > /dev/null <<EOF
groups:
- name: example
  rules:
  - alert: HighCPULoad
    expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: "High CPU load (instance {{ \$labels.instance }})"
      description: "CPU load is > 80%\n  VALUE = {{ \$value }}\n  LABELS: {{ \$labels }}"
  
  - alert: HighMemoryLoad
    expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100 > 80
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: "High memory load (instance {{ \$labels.instance }})"
      description: "Memory load is > 80%\n  VALUE = {{ \$value }}\n  LABELS: {{ \$labels }}"
  
  - alert: HighDiskUsage
    expr: (node_filesystem_size_bytes{fstype!="tmpfs"} - node_filesystem_free_bytes{fstype!="tmpfs"}) / node_filesystem_size_bytes{fstype!="tmpfs"} * 100 > 80
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: "High disk usage (instance {{ \$labels.instance }})"
      description: "Disk usage is > 80%\n  VALUE = {{ \$value }}\n  LABELS: {{ \$labels }}"
EOF

# Update Prometheus configuration to include alert rules
sudo tee /etc/prometheus/prometheus.yml > /dev/null <<EOF
global:
  scrape_interval: 15s

rule_files:
  - "alert.rules.yml"

alerting:
  alertmanagers:
  - static_configs:
    - targets:
      - localhost:9093

scrape_configs:
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
  
  - job_name: 'node'
    static_configs:
      - targets: ['localhost:9100']
EOF

# Restart Prometheus to apply changes
sudo systemctl restart prometheus
Building Custom Dashboards
Visualizing monitoring data is crucial for effective observability.

Installing and Configuring Grafana
Grafana provides powerful visualization capabilities:

# Add Grafana APT repository
sudo apt-get install -y apt-transport-https software-properties-common
sudo add-apt-repository "deb https://packages.grafana.com/oss/deb stable main"
wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -
sudo apt-get update

# Install Grafana
sudo apt-get install grafana

# Enable and start Grafana
sudo systemctl enable grafana-server
sudo systemctl start grafana-server
Access Grafana at http://your-server-ip:3000 (default credentials: admin/admin)

Creating a Basic System Dashboard
Log in to Grafana
Add Prometheus as a data source:

Go to Configuration > Data Sources > Add data source
Select Prometheus
Set URL to http://localhost:9090
Click "Save & Test"
Import a dashboard:

Go to Create > Import
Enter dashboard ID 1860 (Node Exporter Full)
Select your Prometheus data source
Click "Import"
Creating Custom Dashboard Panels
To create a custom dashboard:

Click "Create" > "Dashboard"
Click "Add new panel"
For CPU usage, use the query:

100 - (avg by (instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100)
For memory usage, use:

(node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100
For disk usage, use:

(node_filesystem_size_bytes{mountpoint="/"} - node_filesystem_free_bytes{mountpoint="/"}) / node_filesystem_size_bytes{mountpoint="/"} * 100
For network traffic, use:

rate(node_network_receive_bytes_total{device!="lo"}[5m])
and

rate(node_network_transmit_bytes_total{device!="lo"}[5m])
Enterprise-Scale Considerations
For large enterprise environments, additional considerations are necessary.

Centralized Logging with ELK Stack
Set up Elasticsearch, Logstash, and Kibana for centralized logging:

# Install Java
sudo apt update
sudo apt install openjdk-11-jdk

# Add Elasticsearch repository
wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
sudo sh -c 'echo "deb https://artifacts.elastic.co/packages/7.x/apt stable main" > /etc/apt/sources.list.d/elastic-7.x.list'
sudo apt update

# Install Elasticsearch
sudo apt install elasticsearch

# Configure Elasticsearch
sudo nano /etc/elasticsearch/elasticsearch.yml
# Set network.host: localhost
# Set cluster.name: monitoring-cluster
# Set node.name: monitoring-node

# Start and enable Elasticsearch
sudo systemctl start elasticsearch
sudo systemctl enable elasticsearch

# Install Kibana
sudo apt install kibana

# Configure Kibana
sudo nano /etc/kibana/kibana.yml
# Set server.port: 5601
# Set server.host: "0.0.0.0"
# Set elasticsearch.hosts: ["http://localhost:9200"]

# Start and enable Kibana
sudo systemctl start kibana
sudo systemctl enable kibana

# Install Logstash
sudo apt install logstash

# Create a basic Logstash configuration
sudo tee /etc/logstash/conf.d/01-syslog-input.conf > /dev/null <<EOF
input {
  syslog {
    port => 5514
    type => "syslog"
  }
}
EOF

sudo tee /etc/logstash/conf.d/30-elasticsearch-output.conf > /dev/null <<EOF
output {
  elasticsearch {
    hosts => ["localhost:9200"]
    index => "logstash-%{+YYYY.MM.dd}"
  }
}
EOF

# Start and enable Logstash
sudo systemctl start logstash
sudo systemctl enable logstash
Configuring rsyslog to Forward Logs
Configure servers to forward logs to the central logging server:

# Edit rsyslog configuration
sudo nano /etc/rsyslog.conf

# Add the following line to forward logs
# Replace logserver.example.com with your log server's address
*.* @logserver.example.com:5514

# Restart rsyslog
sudo systemctl restart rsyslog
Implementing High Availability for Monitoring
For critical environments, set up high availability for monitoring systems:

# Install HAProxy for load balancing
sudo apt install haproxy

# Configure HAProxy
sudo tee /etc/haproxy/haproxy.cfg > /dev/null <<EOF
global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000

frontend prometheus_front
    bind *:9090
    default_backend prometheus_back

backend prometheus_back
    balance roundrobin
    server prom1 prometheus1.example.com:9090 check
    server prom2 prometheus2.example.com:9090 check
EOF

# Restart HAProxy
sudo systemctl restart haproxy
Troubleshooting Common Issues
High CPU Usage
When troubleshooting high CPU usage:

# Identify CPU-intensive processes
top -c

# Check for specific process CPU usage
pidstat -p <PID> 1

# Check for system vs user CPU usage
mpstat -P ALL 1

# Check for processes in uninterruptible sleep (I/O wait)
ps aux | awk '$8 ~ /D/'
Memory Leaks
To identify and troubleshoot memory leaks:

# Monitor memory usage over time
watch -n 10 'free -m'

# Check process memory growth
ps -o pid,user,%mem,command ax | sort -b -k3 -r | head -10

# Use pmap to examine process memory maps
pmap -x <PID>

# Check for memory fragmentation
cat /proc/buddyinfo

# Use smem for detailed memory reporting
sudo apt install smem
smem -t -k
Disk I/O Bottlenecks
For disk I/O issues:

# Identify processes causing high I/O
iotop -o

# Check disk I/O statistics
iostat -xz 1

# Check for specific file I/O
sudo apt install iosnoop  # On Ubuntu systems with perf tools
sudo iosnoop -t

# Check for filesystem issues
sudo fsck -N /dev/sda1  # Check without repairing
Network Connectivity Issues
For network troubleshooting:

# Check network connectivity
ping -c 4 8.8.8.8

# Trace network path
traceroute google.com

# Check for network interface errors
ip -s link show eth0

# Monitor network connections
ss -tuln

# Capture network traffic
sudo tcpdump -i eth0 -n port 80
Best Practices
Regular Maintenance Tasks
Implement these regular maintenance tasks:

# Create a maintenance script
sudo tee /usr/local/bin/system-maintenance.sh > /dev/null <<EOF
#!/bin/bash

# Update package lists
apt update

# Check for security updates
apt list --upgradable | grep -i security

# Check disk usage
df -h

# Check for large files
find / -type f -size +100M -exec ls -lh {} \; 2>/dev/null | sort -k5 -hr | head -10

# Check for old logs
find /var/log -type f -name "*.gz" -mtime +30 -exec ls -lh {} \;

# Check for failed services
systemctl --failed

# Check for high CPU processes
ps aux --sort=-%cpu | head -10

# Check for high memory processes
ps aux --sort=-%mem | head -10
EOF

# Make the script executable
sudo chmod +x /usr/local/bin/system-maintenance.sh

# Schedule weekly maintenance
echo "0 2 * * 0 root /usr/local/bin/system-maintenance.sh > /var/log/system-maintenance.log 2>&1" | sudo tee -a /etc/crontab
Security Considerations
Implement security best practices for monitoring systems:

# Secure Prometheus with basic authentication
sudo apt install apache2-utils
sudo htpasswd -c /etc/prometheus/.htpasswd admin

# Update Prometheus configuration
sudo tee /etc/prometheus/web.yml > /dev/null <<EOF
basic_auth_users:
  admin: <hashed-password>
EOF

# Update Prometheus service to use the web config
sudo sed -i 's/ExecStart=.*/ExecStart=\/usr\/local\/bin\/prometheus \\
    --config.file \/etc\/prometheus\/prometheus.yml \\
    --storage.tsdb.path \/var\/lib\/prometheus\/ \\
    --web.console.templates=\/etc\/prometheus\/consoles \\
    --web.console.libraries=\/etc\/prometheus\/console_libraries \\
    --web.config.file=\/etc\/prometheus\/web.yml/' /etc/systemd/system/prometheus.service

# Reload systemd and restart Prometheus
sudo systemctl daemon-reload
sudo systemctl restart prometheus
Documentation and Knowledge Sharing
Create comprehensive documentation for your monitoring setup:

# Create a documentation directory
sudo mkdir -p /opt/documentation/monitoring

# Create a basic documentation file
sudo tee /opt/documentation/monitoring/README.md > /dev/null <<EOF
# System Monitoring Documentation

## Overview
This document describes the monitoring setup for our enterprise Linux environment.

## Components
- Prometheus: Metrics collection and storage
- Node Exporter: System metrics exporter
- Alertmanager: Alert handling and notifications
- Grafana: Visualization and dashboards
- ELK Stack: Log collection and analysis

## Common Tasks
### Checking Prometheus Status
\`\`\`
systemctl status prometheus
\`\`\`

### Viewing Alerts
Access the Prometheus UI at http://localhost:9090/alerts

### Checking Logs
\`\`\`
journalctl -u prometheus
journalctl -u node_exporter
journalctl -u alertmanager
\`\`\`

## Troubleshooting
### Prometheus Not Starting
Check the configuration:
\`\`\`
promtool check config /etc/prometheus/prometheus.yml
\`\`\`

### Missing Metrics
Check if Node Exporter is running:
\`\`\`
systemctl status node_exporter
curl http://localhost:9100/metrics
\`\`\`
EOF
Advanced Topics
Container Monitoring
For monitoring containerized environments:

# Install cAdvisor for container monitoring
sudo docker run \
  --volume=/:/rootfs:ro \
  --volume=/var/run:/var/run:ro \
  --volume=/sys:/sys:ro \
  --volume=/var/lib/docker/:/var/lib/docker:ro \
  --volume=/dev/disk/:/dev/disk:ro \
  --publish=8080:8080 \
  --detach=true \
  --name=cadvisor \
  gcr.io/cadvisor/cadvisor:latest

# Add cAdvisor to Prometheus configuration
sudo tee -a /etc/prometheus/prometheus.yml > /dev/null <<EOF

  - job_name: 'cadvisor'
    static_configs:
      - targets: ['localhost:8080']
EOF

# Restart Prometheus
sudo systemctl restart prometheus
Custom Exporters
Create a custom exporter for application-specific metrics:

# Install required packages
sudo apt install python3-pip
pip3 install prometheus_client

# Create a basic custom exporter
cat > custom_exporter.py <<EOF
#!/usr/bin/env python3

from prometheus_client import start_http_server, Gauge
import random
import time
import subprocess

# Create metrics
cpu_temp = Gauge('cpu_temperature', 'CPU temperature in degrees Celsius')
app_users = Gauge('application_active_users', 'Number of active users in the application')

def get_cpu_temperature():
    # This is a simplified example - adjust for your actual hardware
    try:
        temp = subprocess.check_output(['cat', '/sys/class/thermal/thermal_zone0/temp'])
        return float(temp) / 1000.0
    except:
        return 0

def get_active_users():
    # Replace this with actual logic to get user count from your application
    return random.randint(10, 100)

if __name__ == '__main__':
    # Start up the server to expose the metrics
    start_http_server(8000)
    # Generate some metrics
    while True:
        cpu_temp.set(get_cpu_temperature())
        app_users.set(get_active_users())
        time.sleep(15)
EOF

# Make the script executable
chmod +x custom_exporter.py

# Create a systemd service for the exporter
sudo tee /etc/systemd/system/custom-exporter.service > /dev/null <<EOF
[Unit]
Description=Custom Prometheus Exporter
After=network.target

[Service]
User=prometheus
ExecStart=/usr/bin/python3 /path/to/custom_exporter.py
Restart=always

[Install]
WantedBy=multi-user.target
EOF

# Enable and start the service
sudo systemctl enable custom-exporter
sudo systemctl start custom-exporter

# Add the custom exporter to Prometheus
sudo tee -a /etc/prometheus/prometheus.yml > /dev/null <<EOF

  - job_name: 'custom'
    static_configs:
      - targets: ['localhost:8000']
EOF

# Restart Prometheus
sudo systemctl restart prometheus
Distributed Tracing
Implement distributed tracing for complex applications:

# Install Jaeger for distributed tracing
docker run -d --name jaeger \
  -e COLLECTOR_ZIPKIN_HOST_PORT=:9411 \
  -p 5775:5775/udp \
  -p 6831:6831/udp \
  -p 6832:6832/udp \
  -p 5778:5778 \
  -p 16686:16686 \
  -p 14268:14268 \
  -p 14250:14250 \
  -p 9411:9411 \
  jaegertracing/all-in-one:latest

# Access the Jaeger UI at http://localhost:16686
Conclusion
Effective system observability is crucial for maintaining reliable enterprise Linux environments. By systematically monitoring the "Big 4" resources—CPU, Memory, Disk, and Network—across the dimensions of utilization, saturation, and errors, you can proactively identify and resolve issues before they impact users.

This guide has covered:

Essential monitoring tools for each resource
Setting up automated monitoring and alerting
Implementing enterprise-scale monitoring solutions
Troubleshooting common issues
Best practices for maintaining your monitoring infrastructure
Remember that observability is not just about collecting data but about gaining actionable insights. Regularly review your monitoring setup to ensure it continues to meet your organization's needs as your infrastructure evolves.

By following the practices outlined in this guide, you'll be well-equipped to maintain high-performance, reliable Linux systems in your enterprise environment.












======================






















v2






















======================





























                             Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100 23.2M  100 23.2M    0     0  18.4M      0  0:00:01  0:00:01 --:--:-- 18.4M
controlplane:/opt/promtail$ unzip promtail-linux-amd64.zip 
Archive:  promtail-linux-amd64.zip
replace promtail-linux-amd64? [y]es, [n]o, [A]ll, [N]one, [r]ename: y
  inflating: promtail-linux-amd64    
controlplane:/opt/promtail$ cp /answers/promtail-local-config.yaml /opt/promtail
controlplane:/opt/promtail$ cat /opt/promtail/promtail-local-config.yaml
server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://127.0.0.1:3100/loki/api/v1/push

scrape_configs:
- job_name: syslog
  static_configs:
  - targets:
      - localhost
    labels:
      job: syslog
      __path__: /var/log/syslog

- job_name: auth
  static_configs:
  - targets:
      - localhost
    labels:
      job: auth
      __path__: /var/log/auth.log
controlplane:/opt/promtail$ cp /answers/promtail.service /etc/systemd/system/promtail.service
controlplane:/opt/promtail$ cat /etc/systemd/system/promtail.service
[Unit]
Description=Promtail Service Startup
Wants=network-online.target
After=network-online.target

[Service]
ExecStart=/opt/promtail/promtail-linux-amd64 -config.file=/opt/promtail/promtail-local-config.yaml

[Install]
WantedBy=default.targetcontrolplane:/opt/promtail$ systemctl daemon-reload
controlplane:/opt/promtail$ systemctl enable promtail.service --now
controlplane:/opt/promtail$ systemctl status promtail.service --no-pager
● promtail.service - Promtail Service Startup
     Loaded: loaded (/etc/systemd/system/promtail.service; enabled; preset: enabled)
     Active: active (running) since Thu 2025-05-08 00:33:33 UTC; 5min ago
   Main PID: 26439 (promtail-linux-)
      Tasks: 8 (limit: 2320)
     Memory: 33.3M (peak: 61.3M)
        CPU: 1.711s
     CGroup: /system.slice/promtail.service
             └─26439 /opt/promtail/promtail-linux-amd64 -config.file=/opt/promtail/promtail-local-confi…

May 08 00:33:33 controlplane promtail-linux-amd64[26439]: level=info ts=2025-05-08T00:33:33.7463744…ogs]
May 08 00:33:37 controlplane promtail-linux-amd64[26439]: level=info ts=2025-05-08T00:33:36.9318244…=-2"
May 08 00:33:38 controlplane promtail-linux-amd64[26439]: level=info ts=2025-05-08T00:33:38.7376172…\"}"
May 08 00:33:38 controlplane promtail-linux-amd64[26439]: level=info ts=2025-05-08T00:33:38.7376685…\"}"
May 08 00:33:38 controlplane promtail-linux-amd64[26439]: level=info ts=2025-05-08T00:33:38.7377199…/log
May 08 00:33:38 controlplane promtail-linux-amd64[26439]: level=info ts=2025-05-08T00:33:38.7378631…/log
May 08 00:33:38 controlplane promtail-linux-amd64[26439]: ts=2025-05-08T00:33:38.738005717Z caller=…:0}"
May 08 00:33:38 controlplane promtail-linux-amd64[26439]: level=info ts=2025-05-08T00:33:38.7380342….log
May 08 00:33:38 controlplane promtail-linux-amd64[26439]: ts=2025-05-08T00:33:38.738078129Z caller=…:0}"
May 08 00:33:38 controlplane promtail-linux-amd64[26439]: level=info ts=2025-05-08T00:33:38.7381061…slog
Hint: Some lines were ellipsized, use -l to show in full.
controlplane:/opt/promtail$ ps -ef | grep [p]romtail
root       26439       1  0 00:33 ?        00:00:01 /opt/promtail/promtail-linux-amd64 -config.file=/opt/promtail/promtail-local-config.yaml
controlplane:/opt/promtail$ history
    1  exit
    2  halt
    3  cd /opt/promtail
    4  vi promtail-local-config.yaml 
    5  systemctl restart promtail
    6  history
    7  clear
    8  apt install -y apt-transport-https
    9  apt install -y software-properties-common wget
   10  sudo wget -q -O /usr/share/keyrings/grafana.key https://apt.grafana.com/gpg.key
   11  echo "deb [signed-by=/usr/share/keyrings/grafana.key] https://apt.grafana.com stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list
   12  apt update
   13  # Install the latest Enterprise release:
   14  apt install -y grafana-enterprise
   15  systemctl daemon-reload
   16  systemctl start grafana-server
   17  systemctl status grafana-server --no-pager
   18  ss -ntulp | grep grafana
   19  ss -ntulp | grep 3000
   20  mkdir /opt/loki
   21  curl -O -L "https://github.com/grafana/loki/releases/download/v2.9.7/loki-linux-amd64.zip"
   22  unzip "loki-linux-amd64.zip"
   23  chmod a+x "loki-linux-amd64"
   24  cp /answers/loki-local-config.yaml /opt/loki
   25  cp /answers/loki.service /etc/systemd/system/loki.service
   26  systemctl daemon-reload
   27  cat /opt/loki/loki-local-config.yaml
   28  cat /etc/systemd/system/loki.service
   29  systemctl enable loki.service --now
   30  systemctl status loki.service --no-pager
   31  ss -ntulp | grep 3100
   32  history
   33  mkdir /opt/promtail
   34  cd /opt/promtail
   35  curl -O -L "https://github.com/grafana/loki/releases/download/v2.7.1/promtail-linux-amd64.zip"
   36  unzip promtail-linux-amd64.zip 
   37  cp /answers/promtail-local-config.yaml /opt/promtail
   38  cat /opt/promtail/promtail-local-config.yaml
   39  cp /answers/promtail.service /etc/systemd/system/promtail.service
   40  cat /etc/systemd/system/promtail.service
   41  systemctl daemon-reload
   42  systemctl enable promtail.service --now
   43  systemctl status promtail.service --no-pager
   44  ps -ef | grep [p]romtail
   45  history
controlplane:/opt/promtail$ hisoty
hisoty: command not found
controlplane:/opt/promtail$ history
    1  exit
    2  halt
    3  cd /opt/promtail
    4  vi promtail-local-config.yaml 
    5  systemctl restart promtail
    6  history
    7  clear
    8  apt install -y apt-transport-https
    9  apt install -y software-properties-common wget
   10  sudo wget -q -O /usr/share/keyrings/grafana.key https://apt.grafana.com/gpg.key
   11  echo "deb [signed-by=/usr/share/keyrings/grafana.key] https://apt.grafana.com stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list
   12  apt update
   13  # Install the latest Enterprise release:
   14  apt install -y grafana-enterprise
   15  systemctl daemon-reload
   16  systemctl start grafana-server
   17  systemctl status grafana-server --no-pager
   18  ss -ntulp | grep grafana
   19  ss -ntulp | grep 3000
   20  mkdir /opt/loki
   21  curl -O -L "https://github.com/grafana/loki/releases/download/v2.9.7/loki-linux-amd64.zip"
   22  unzip "loki-linux-amd64.zip"
   23  chmod a+x "loki-linux-amd64"
   24  cp /answers/loki-local-config.yaml /opt/loki
   25  cp /answers/loki.service /etc/systemd/system/loki.service
   26  systemctl daemon-reload
   27  cat /opt/loki/loki-local-config.yaml
   28  cat /etc/systemd/system/loki.service
   29  systemctl enable loki.service --now
   30  systemctl status loki.service --no-pager
   31  ss -ntulp | grep 3100
   32  history
   33  mkdir /opt/promtail
   34  cd /opt/promtail
   35  curl -O -L "https://github.com/grafana/loki/releases/download/v2.7.1/promtail-linux-amd64.zip"
   36  unzip promtail-linux-amd64.zip 
   37  cp /answers/promtail-local-config.yaml /opt/promtail
   38  cat /opt/promtail/promtail-local-config.yaml
   39  cp /answers/promtail.service /etc/systemd/system/promtail.service
   40  cat /etc/systemd/system/promtail.service
   41  systemctl daemon-reload
   42  systemctl enable promtail.service --now
   43  systemctl status promtail.service --no-pager
   44  ps -ef | grep [p]romtail
   45  history
   46  hisoty
   47  history







   =============

















  ====




  ading state information... Done
grafana-enterprise is already the newest version (12.0.0).
0 upgraded, 0 newly installed, 0 to remove and 148 not upgraded.
controlplane:/opt/promtail$ systemctl daemon-reload
controlplane:/opt/promtail$ systemctl start grafana-server
controlplane:/opt/promtail$ systemctl status grafana-server --no-pager
● grafana-server.service - Grafana instance
     Loaded: loaded (/usr/lib/systemd/system/grafana-server.service; disabled; preset: enabled)
     Active: active (running) since Thu 2025-05-08 00:20:31 UTC; 15min ago
       Docs: http://docs.grafana.org
   Main PID: 19482 (grafana)
      Tasks: 21 (limit: 2320)
     Memory: 155.0M (peak: 345.4M)
        CPU: 9.978s
     CGroup: /system.slice/grafana-server.service
             └─19482 /usr/share/grafana/bin/grafana server --config=/etc/grafana/grafana.ini --pidfile=…

May 08 00:34:07 controlplane grafana[19482]: logger=tsdb.loki endpoint=queryData pluginId=loki dsName=l…
May 08 00:34:07 controlplane grafana[19482]: logger=tsdb.loki endpoint=queryData pluginId=loki ds…sponse
May 08 00:34:07 controlplane grafana[19482]: logger=tsdb.loki endpoint=queryData pluginId=loki dsName=l…
May 08 00:34:07 controlplane grafana[19482]: logger=tsdb.loki endpoint=queryData pluginId=loki ds…sponse
May 08 00:34:29 controlplane grafana[19482]: logger=tsdb.loki endpoint=queryData pluginId=loki ds…=false
May 08 00:34:29 controlplane grafana[19482]: logger=tsdb.loki endpoint=queryData pluginId=loki ds…=false
May 08 00:34:29 controlplane grafana[19482]: logger=tsdb.loki endpoint=queryData pluginId=loki dsName=l…
May 08 00:34:29 controlplane grafana[19482]: logger=tsdb.loki endpoint=queryData pluginId=loki ds…sponse
May 08 00:34:29 controlplane grafana[19482]: logger=tsdb.loki endpoint=queryData pluginId=loki dsName=l…
May 08 00:34:29 controlplane grafana[19482]: logger=tsdb.loki endpoint=queryData pluginId=loki ds…sponse
Hint: Some lines were ellipsized, use -l to show in full.
controlplane:/opt/promtail$ systemctl status grafana-server --no-pager
● grafana-server.service - Grafana instance
     Loaded: loaded (/usr/lib/systemd/system/grafana-server.service; disabled; preset: enabled)
     Active: active (running) since Thu 2025-05-08 00:20:31 UTC; 15min ago
       Docs: http://docs.grafana.org
   Main PID: 19482 (grafana)
      Tasks: 21 (limit: 2320)
     Memory: 155.0M (peak: 345.4M)
        CPU: 9.981s
     CGroup: /system.slice/grafana-server.service
             └─19482 /usr/share/grafana/bin/grafana server --config=/etc/grafana/grafana.ini --pidfile=…

May 08 00:34:07 controlplane grafana[19482]: logger=tsdb.loki endpoint=queryData pluginId=loki dsName=l…
May 08 00:34:07 controlplane grafana[19482]: logger=tsdb.loki endpoint=queryData pluginId=loki ds…sponse
May 08 00:34:07 controlplane grafana[19482]: logger=tsdb.loki endpoint=queryData pluginId=loki dsName=l…
May 08 00:34:07 controlplane grafana[19482]: logger=tsdb.loki endpoint=queryData pluginId=loki ds…sponse
May 08 00:34:29 controlplane grafana[19482]: logger=tsdb.loki endpoint=queryData pluginId=loki ds…=false
May 08 00:34:29 controlplane grafana[19482]: logger=tsdb.loki endpoint=queryData pluginId=loki ds…=false
May 08 00:34:29 controlplane grafana[19482]: logger=tsdb.loki endpoint=queryData pluginId=loki dsName=l…
May 08 00:34:29 controlplane grafana[19482]: logger=tsdb.loki endpoint=queryData pluginId=loki ds…sponse
May 08 00:34:29 controlplane grafana[19482]: logger=tsdb.loki endpoint=queryData pluginId=loki dsName=l…
May 08 00:34:29 controlplane grafana[19482]: logger=tsdb.loki endpoint=queryData pluginId=loki ds…sponse
Hint: Some lines were ellipsized, use -l to show in full.
controlplane:/opt/promtail$ ss -ntulp | grep grafana
tcp   LISTEN 0      4096                                    *:3000             *:*    users:(("grafana",pid=19482,fd=11))                    
controlplane:/opt/promtail$ ss -ntulp | grep 3000
tcp   LISTEN 0      4096                                    *:3000             *:*    users:(("grafana",pid=19482,fd=11))                    
controlplane:/opt/promtail$ mkdir /opt/loki
mkdir: cannot create directory '/opt/loki': File exists
controlplane:/opt/promtail$ curl -O -L "https://github.com/grafana/loki/releases/download/v2.9.7/loki-linux-amd64.zip"
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100 19.5M  100 19.5M    0     0  17.0M      0  0:00:01  0:00:01 --:--:-- 31.1M
controlplane:/opt/promtail$ unzip "loki-linux-amd64.zip"
Archive:  loki-linux-amd64.zip
  inflating: loki-linux-amd64        
controlplane:/opt/promtail$ chmod a+x "loki-linux-amd64"
controlplane:/opt/promtail$ 
controlplane:/opt/promtail$ cp /answers/loki-local-config.yaml /opt/loki
controlplane:/opt/promtail$ cp /answers/loki.service /etc/systemd/system/loki.service
controlplane:/opt/promtail$ systemctl daemon-reload
controlplane:/opt/promtail$ cat /opt/loki/loki-local-config.yaml
auth_enabled: false

server:
  http_listen_port: 3100
  grpc_listen_port: 9096
  log_level: debug
  grpc_server_max_concurrent_streams: 1000

common:
  instance_addr: 127.0.0.1
  path_prefix: /tmp/loki
  storage:
    filesystem:
      chunks_directory: /tmp/loki/chunks
      rules_directory: /tmp/loki/rules
  replication_factor: 1
  ring:
    kvstore:
      store: inmemory

#ingester_rf1:
#  enabled: false

query_range:
  results_cache:
    cache:
      embedded_cache:
        enabled: true
        max_size_mb: 100

schema_config:
  configs:
    - from: 2020-10-24
      store: tsdb
      object_store: filesystem
      schema: v13
      index:
        prefix: index_
        period: 24h

#pattern_ingester:
#  enabled: true
#  metric_aggregation:
#    enabled: true
#    log_push_observations: true

#ruler:
#  alertmanager_url: http://localhost:9093

#frontend:
#  encoding: protobuf

# By default, Loki will send anonymous, but uniquely-identifiable usage and configuration
# analytics to Grafana Labs. These statistics are sent to https://stats.grafana.org/
#
# Statistics help us better understand how Loki is used, and they show us performance
# levels for most users. This helps us prioritize features and documentation.
# For more information on what's sent, look at
# https://github.com/grafana/loki/blob/main/pkg/analytics/stats.go
# Refer to the buildReport method to see what goes into a report.
##
# If you would like to disable reporting, uncomment the following lines:
analytics:
  reporting_enabled: falsecontrolplane:/opt/promtail$ cat /etc/systemd/system/loki.service
[Unit]
Description=Loki Startup
Wants=network-online.target
After=network-online.target

[Service]
ExecStart=/opt/loki/loki-linux-amd64 -config.file=/opt/loki/loki-local-config.yaml

[Install]
WantedBy=default.targetcontrolplane:/opt/promtail$ systemctl enable loki.service --now
controlplane:/opt/promtail$ systemctl status loki.service --no-pager
● loki.service - Loki Startup
     Loaded: loaded (/etc/systemd/system/loki.service; enabled; preset: enabled)
     Active: active (running) since Thu 2025-05-08 00:21:11 UTC; 16min ago
   Main PID: 19981 (loki-linux-amd6)
      Tasks: 7 (limit: 2320)
     Memory: 56.3M (peak: 68.4M)
        CPU: 3.488s
     CGroup: /system.slice/loki.service
             └─19981 /opt/loki/loki-linux-amd64 -config.file=/opt/loki/loki-local-config.yaml

May 08 00:37:57 controlplane loki-linux-amd64[19981]: level=debug ts=2025-05-08T00:37:57.317088973Z cal…
May 08 00:37:58 controlplane loki-linux-amd64[19981]: level=debug ts=2025-05-08T00:37:58.338056191…/ring
May 08 00:37:58 controlplane loki-linux-amd64[19981]: level=debug ts=2025-05-08T00:37:58.338101289…x=274
May 08 00:37:58 controlplane loki-linux-amd64[19981]: level=debug ts=2025-05-08T00:37:58.338111951…duler
May 08 00:37:58 controlplane loki-linux-amd64[19981]: level=debug ts=2025-05-08T00:37:58.338118201…x=273
May 08 00:37:58 controlplane loki-linux-amd64[19981]: level=debug ts=2025-05-08T00:37:58.338123213…actor
May 08 00:37:58 controlplane loki-linux-amd64[19981]: level=debug ts=2025-05-08T00:37:58.338128572…x=276
May 08 00:37:58 controlplane loki-linux-amd64[19981]: level=debug ts=2025-05-08T00:37:58.338132876…butor
May 08 00:37:58 controlplane loki-linux-amd64[19981]: level=debug ts=2025-05-08T00:37:58.338148471…x=275
May 08 00:37:58 controlplane loki-linux-amd64[19981]: level=debug ts=2025-05-08T00:37:58.416862029Z cal…
Hint: Some lines were ellipsized, use -l to show in full.
controlplane:/opt/promtail$ ss -ntulp | grep 3100
tcp   LISTEN 0      4096                                    *:3100             *:*    users:(("loki-linux-amd6",pid=19981,fd=8))             
controlplane:/opt/promtail$ history
    1  exit
    2  halt
    3  cd /opt/promtail
    4  vi promtail-local-config.yaml 
    5  systemctl restart promtail
    6  history
    7  clear
    8  apt install -y apt-transport-https
    9  apt install -y software-properties-common wget
   10  sudo wget -q -O /usr/share/keyrings/grafana.key https://apt.grafana.com/gpg.key
   11  echo "deb [signed-by=/usr/share/keyrings/grafana.key] https://apt.grafana.com stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list
   12  apt update
   13  # Install the latest Enterprise release:
   14  apt install -y grafana-enterprise
   15  systemctl daemon-reload
   16  systemctl start grafana-server
   17  systemctl status grafana-server --no-pager
   18  ss -ntulp | grep grafana
   19  ss -ntulp | grep 3000
   20  mkdir /opt/loki
   21  curl -O -L "https://github.com/grafana/loki/releases/download/v2.9.7/loki-linux-amd64.zip"
   22  unzip "loki-linux-amd64.zip"
   23  chmod a+x "loki-linux-amd64"
   24  cp /answers/loki-local-config.yaml /opt/loki
   25  cp /answers/loki.service /etc/systemd/system/loki.service
   26  systemctl daemon-reload
   27  cat /opt/loki/loki-local-config.yaml
   28  cat /etc/systemd/system/loki.service
   29  systemctl enable loki.service --now
   30  systemctl status loki.service --no-pager
   31  ss -ntulp | grep 3100
   32  history
controlplane:/opt/promtail$ mkdir /opt/promtail
mkdir: cannot create directory '/opt/promtail': File exists
controlplane:/opt/promtail$ cd /opt/promtail
controlplane:/opt/promtail$ curl -O -L "https://github.com/grafana/loki/releases/download/v2.7.1/promtail-linux-amd64.zip"
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100 23.2M  100 23.2M    0     0  18.4M      0  0:00:01  0:00:01 --:--:-- 18.4M
controlplane:/opt/promtail$ unzip promtail-linux-amd64.zip 
Archive:  promtail-linux-amd64.zip
replace promtail-linux-amd64? [y]es, [n]o, [A]ll, [N]one, [r]ename: y
  inflating: promtail-linux-amd64    
controlplane:/opt/promtail$ cp /answers/promtail-local-config.yaml /opt/promtail
controlplane:/opt/promtail$ cat /opt/promtail/promtail-local-config.yaml
server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://127.0.0.1:3100/loki/api/v1/push

scrape_configs:
- job_name: syslog
  static_configs:
  - targets:
      - localhost
    labels:
      job: syslog
      __path__: /var/log/syslog

- job_name: auth
  static_configs:
  - targets:
      - localhost
    labels:
      job: auth
      __path__: /var/log/auth.log
controlplane:/opt/promtail$ cp /answers/promtail.service /etc/systemd/system/promtail.service
controlplane:/opt/promtail$ cat /etc/systemd/system/promtail.service
[Unit]
Description=Promtail Service Startup
Wants=network-online.target
After=network-online.target

[Service]
ExecStart=/opt/promtail/promtail-linux-amd64 -config.file=/opt/promtail/promtail-local-config.yaml

[Install]
WantedBy=default.targetcontrolplane:/opt/promtail$ systemctl daemon-reload
controlplane:/opt/promtail$ systemctl enable promtail.service --now
controlplane:/opt/promtail$ systemctl status promtail.service --no-pager
● promtail.service - Promtail Service Startup
     Loaded: loaded (/etc/systemd/system/promtail.service; enabled; preset: enabled)
     Active: active (running) since Thu 2025-05-08 00:33:33 UTC; 5min ago
   Main PID: 26439 (promtail-linux-)
      Tasks: 8 (limit: 2320)
     Memory: 33.3M (peak: 61.3M)
        CPU: 1.711s
     CGroup: /system.slice/promtail.service
             └─26439 /opt/promtail/promtail-linux-amd64 -config.file=/opt/promtail/promtail-local-confi…

May 08 00:33:33 controlplane promtail-linux-amd64[26439]: level=info ts=2025-05-08T00:33:33.7463744…ogs]
May 08 00:33:37 controlplane promtail-linux-amd64[26439]: level=info ts=2025-05-08T00:33:36.9318244…=-2"
May 08 00:33:38 controlplane promtail-linux-amd64[26439]: level=info ts=2025-05-08T00:33:38.7376172…\"}"
May 08 00:33:38 controlplane promtail-linux-amd64[26439]: level=info ts=2025-05-08T00:33:38.7376685…\"}"
May 08 00:33:38 controlplane promtail-linux-amd64[26439]: level=info ts=2025-05-08T00:33:38.7377199…/log
May 08 00:33:38 controlplane promtail-linux-amd64[26439]: level=info ts=2025-05-08T00:33:38.7378631…/log
May 08 00:33:38 controlplane promtail-linux-amd64[26439]: ts=2025-05-08T00:33:38.738005717Z caller=…:0}"
May 08 00:33:38 controlplane promtail-linux-amd64[26439]: level=info ts=2025-05-08T00:33:38.7380342….log
May 08 00:33:38 controlplane promtail-linux-amd64[26439]: ts=2025-05-08T00:33:38.738078129Z caller=…:0}"
May 08 00:33:38 controlplane promtail-linux-amd64[26439]: level=info ts=2025-05-08T00:33:38.7381061…slog
Hint: Some lines were ellipsized, use -l to show in full.
controlplane:/opt/promtail$ ps -ef | grep [p]romtail
root       26439       1  0 00:33 ?        00:00:01 /opt/promtail/promtail-linux-amd64 -config.file=/opt/promtail/promtail-local-config.yaml
controlplane:/opt/promtail$ history
    1  exit
    2  halt
    3  cd /opt/promtail
    4  vi promtail-local-config.yaml 
    5  systemctl restart promtail
    6  history
    7  clear
    8  apt install -y apt-transport-https
    9  apt install -y software-properties-common wget
   10  sudo wget -q -O /usr/share/keyrings/grafana.key https://apt.grafana.com/gpg.key
   11  echo "deb [signed-by=/usr/share/keyrings/grafana.key] https://apt.grafana.com stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list
   12  apt update
   13  # Install the latest Enterprise release:
   14  apt install -y grafana-enterprise
   15  systemctl daemon-reload
   16  systemctl start grafana-server
   17  systemctl status grafana-server --no-pager
   18  ss -ntulp | grep grafana
   19  ss -ntulp | grep 3000
   20  mkdir /opt/loki
   21  curl -O -L "https://github.com/grafana/loki/releases/download/v2.9.7/loki-linux-amd64.zip"
   22  unzip "loki-linux-amd64.zip"
   23  chmod a+x "loki-linux-amd64"
   24  cp /answers/loki-local-config.yaml /opt/loki
   25  cp /answers/loki.service /etc/systemd/system/loki.service
   26  systemctl daemon-reload
   27  cat /opt/loki/loki-local-config.yaml
   28  cat /etc/systemd/system/loki.service
   29  systemctl enable loki.service --now
   30  systemctl status loki.service --no-pager
   31  ss -ntulp | grep 3100
   32  history
   33  mkdir /opt/promtail
   34  cd /opt/promtail
   35  curl -O -L "https://github.com/grafana/loki/releases/download/v2.7.1/promtail-linux-amd64.zip"
   36  unzip promtail-linux-amd64.zip 
   37  cp /answers/promtail-local-config.yaml /opt/promtail
   38  cat /opt/promtail/promtail-local-config.yaml
   39  cp /answers/promtail.service /etc/systemd/system/promtail.service
   40  cat /etc/systemd/system/promtail.service
   41  systemctl daemon-reload
   42  systemctl enable promtail.service --now
   43  systemctl status promtail.service --no-pager
   44  ps -ef | grep [p]romtail
   45  history
controlplane:/opt/promtail$ hisoty
hisoty: command not found
controlplane:/opt/promtail$ history
    1  exit
    2  halt
    3  cd /opt/promtail
    4  vi promtail-local-config.yaml 
    5  systemctl restart promtail
    6  history
    7  clear
    8  apt install -y apt-transport-https
    9  apt install -y software-properties-common wget
   10  sudo wget -q -O /usr/share/keyrings/grafana.key https://apt.grafana.com/gpg.key
   11  echo "deb [signed-by=/usr/share/keyrings/grafana.key] https://apt.grafana.com stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list
   12  apt update
   13  # Install the latest Enterprise release:
   14  apt install -y grafana-enterprise
   15  systemctl daemon-reload
   16  systemctl start grafana-server
   17  systemctl status grafana-server --no-pager
   18  ss -ntulp | grep grafana
   19  ss -ntulp | grep 3000
   20  mkdir /opt/loki
   21  curl -O -L "https://github.com/grafana/loki/releases/download/v2.9.7/loki-linux-amd64.zip"
   22  unzip "loki-linux-amd64.zip"
   23  chmod a+x "loki-linux-amd64"
   24  cp /answers/loki-local-config.yaml /opt/loki
   25  cp /answers/loki.service /etc/systemd/system/loki.service
   26  systemctl daemon-reload
   27  cat /opt/loki/loki-local-config.yaml
   28  cat /etc/systemd/system/loki.service
   29  systemctl enable loki.service --now
   30  systemctl status loki.service --no-pager
   31  ss -ntulp | grep 3100
   32  history
   33  mkdir /opt/promtail
   34  cd /opt/promtail
   35  curl -O -L "https://github.com/grafana/loki/releases/download/v2.7.1/promtail-linux-amd64.zip"
   36  unzip promtail-linux-amd64.zip 
   37  cp /answers/promtail-local-config.yaml /opt/promtail
   38  cat /opt/promtail/promtail-local-config.yaml
   39  cp /answers/promtail.service /etc/systemd/system/promtail.service
   40  cat /etc/systemd/system/promtail.service
   41  systemctl daemon-reload
   42  systemctl enable promtail.service --now
   43  systemctl status promtail.service --no-pager
   44  ps -ef | grep [p]romtail
   45  history
   46  hisoty
   47  history
controlplane:/opt/promtail$ 
controlplane:/opt/promtail$ 
controlplane:/opt/promtail$ 
controlplane:/opt/promtail$ 
controlplane:/opt/promtail$ kubectl create ns kafka
Error from server (AlreadyExists): namespaces "kafka" already exists
controlplane:/opt/promtail$ kubectl get all -n kafka
NAME                                READY   STATUS    RESTARTS   AGE
pod/kafka-broker-77fdd88cf9-7g87s   1/1     Running   0          10m
pod/zookeeper-6868cb9466-9bnvk      1/1     Running   0          10m

NAME                        TYPE       CLUSTER-IP       EXTERNAL-IP   PORT(S)          AGE
service/kafka-service       NodePort   10.111.215.154   <none>        9092:31000/TCP   10m
service/zookeeper-service   NodePort   10.98.22.81      <none>        2181:30900/TCP   10m

NAME                           READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/kafka-broker   1/1     1            1           10m
deployment.apps/zookeeper      1/1     1            1           10m

NAME                                      DESIRED   CURRENT   READY   AGE
replicaset.apps/kafka-broker-77fdd88cf9   1         1         1       10m
replicaset.apps/zookeeper-6868cb9466      1         1         1       10m
controlplane:/opt/promtail$ kubectl create -f /answers/zookeeper.yaml
Error from server (Invalid): error when creating "/answers/zookeeper.yaml": Service "zookeeper-service" is invalid: spec.ports[0].nodePort: Invalid value: 30900: provided port is already allocated
Error from server (AlreadyExists): error when creating "/answers/zookeeper.yaml": deployments.apps "zookeeper" already exists
controlplane:/opt/promtail$ kubectl get all -n kafka
NAME                                READY   STATUS    RESTARTS   AGE
pod/kafka-broker-77fdd88cf9-7g87s   1/1     Running   0          10m
pod/zookeeper-6868cb9466-9bnvk      1/1     Running   0          11m

NAME                        TYPE       CLUSTER-IP       EXTERNAL-IP   PORT(S)          AGE
service/kafka-service       NodePort   10.111.215.154   <none>        9092:31000/TCP   10m
service/zookeeper-service   NodePort   10.98.22.81      <none>        2181:30900/TCP   11m

NAME                           READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/kafka-broker   1/1     1            1           10m
deployment.apps/zookeeper      1/1     1            1           11m

NAME                                      DESIRED   CURRENT   READY   AGE
replicaset.apps/kafka-broker-77fdd88cf9   1         1         1       10m
replicaset.apps/zookeeper-6868cb9466      1         1         1       11m
controlplane:/opt/promtail$ kubectl describe -n kafka svc zookeeper-service
Name:                     zookeeper-service
Namespace:                kafka
Labels:                   app=zookeeper-service
Annotations:              <none>
Selector:                 app=zookeeper
Type:                     NodePort
IP Family Policy:         SingleStack
IP Families:              IPv4
IP:                       10.98.22.81
IPs:                      10.98.22.81
Port:                     zookeeper-port  2181/TCP
TargetPort:               2181/TCP
NodePort:                 zookeeper-port  30900/TCP
Endpoints:                192.168.1.4:2181
Session Affinity:         None
External Traffic Policy:  Cluster
Internal Traffic Policy:  Cluster
Events:                   <none>
controlplane:/opt/promtail$ kubectl create -f /answers/kafka.yaml
Error from server (Invalid): error when creating "/answers/kafka.yaml": Service "kafka-service" is invalid: spec.ports[0].nodePort: Invalid value: 31000: provided port is already allocated
Error from server (AlreadyExists): error when creating "/answers/kafka.yaml": deployments.apps "kafka-broker" already exists
controlplane:/opt/promtail$ kubectl describe svc kafka-service -n kafka
Name:                     kafka-service
Namespace:                kafka
Labels:                   app=kafka-broker
Annotations:              <none>
Selector:                 app=kafka-broker
Type:                     NodePort
IP Family Policy:         SingleStack
IP Families:              IPv4
IP:                       10.111.215.154
IPs:                      10.111.215.154
Port:                     zookeeper-port  9092/TCP
TargetPort:               9092/TCP
NodePort:                 zookeeper-port  31000/TCP
Endpoints:                192.168.1.5:9092
Session Affinity:         None
External Traffic Policy:  Cluster
Internal Traffic Policy:  Cluster
Events:                   <none>
controlplane:/opt/promtail$ kubectl get pods -o wide -n kafka
NAME                            READY   STATUS    RESTARTS   AGE   IP            NODE     NOMINATED NODE   READINESS GATES
kafka-broker-77fdd88cf9-7g87s   1/1     Running   0          10m   192.168.1.5   node01   <none>           <none>
zookeeper-6868cb9466-9bnvk      1/1     Running   0          11m   192.168.1.4   node01   <none>           <none>
controlplane:/opt/promtail$ apt -y install kafkacat
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
kafkacat is already the newest version (1.7.1-3).
0 upgraded, 0 newly installed, 0 to remove and 148 not upgraded.
controlplane:/opt/promtail$ kubectl port-forward $(kubectl get pods -n kafka | grep kafka | awk '{print $1}') 9092 -n kafka &
[1] 32498
controlplane:/opt/promtail$ echo "127.0.0.1 localhost kafka-broker" >> /etc/hosts
controlplane:/opt/promtail$ Unable to listen on port 9092: Listeners failed to create with the following errors: [unable to create listener: Error listen tcp4 127.0.0.1:9092: bind: address already in use unable to create listener: Error listen tcp6 [::1]:9092: bind: address already in use]
error: unable to listen on any of the requested ports: [{9092 9092}]
scho "This is my message at $(date)" | kcat -P -b node01:31000 -t System_Logs
[1]+  Exit 1                  kubectl port-forward $(kubectl get pods -n kafka | grep kafka | awk '{print $1}') 9092 -n kafka
controlplane:/opt/promtail$ timeout 3 kcat -C -b node01:31000 -t System_Logs
This is my message at Thu May  8 00:31:46 UTC 2025
This is my message at 8 Thu May  8 00:32:02 UTC 2025
This is my message at 7 Thu May  8 00:32:05 UTC 2025
This is my message at 7 Thu May  8 00:32:08 UTC 2025
This is my message at 4 Thu May  8 00:32:11 UTC 2025
This is my message at 8 Thu May  8 00:32:14 UTC 2025
This is my message at 7 Thu May  8 00:32:17 UTC 2025
This is my message at 9 Thu May  8 00:41:00 UTC 2025
This is my message at 10 Thu May  8 00:41:03 UTC 2025
This is my message at 1 Thu May  8 00:41:06 UTC 2025
This is my message at 1 Thu May  8 00:41:09 UTC 2025
This is my message at 9 Thu May  8 00:41:12 UTC 2025
This is my message at 1 Thu May  8 00:41:15 UTC 2025
This is my message at 5 Thu May  8 00:41:18 UTC 2025
This is my message at 6 Thu May  8 00:41:21 UTC 2025
This is my message at 3 Thu May  8 00:41:24 UTC 2025
This is my message at 7 Thu May  8 00:41:27 UTC 2025
This is my message at 3 Thu May  8 00:41:30 UTC 2025
This is my message at 2 Thu May  8 00:41:34 UTC 2025
This is my message at 9 Thu May  8 00:41:37 UTC 2025
This is my message at 9 Thu May  8 00:41:40 UTC 2025
This is my message at 9 Thu May  8 00:41:43 UTC 2025
This is my message at 7 Thu May  8 00:41:46 UTC 2025
This is my message at 10 Thu May  8 00:41:49 UTC 2025
This is my message at 2 Thu May  8 00:41:52 UTC 2025
This is my message at 3 Thu May  8 00:41:55 UTC 2025
This is my message at Thu May  8 00:41:57 UTC 2025
This is my message at 1 Thu May  8 00:41:58 UTC 2025
% Reached end of topic System_Logs [0] at offset 200
This is my message at 6 Thu May  8 00:42:01 UTC 2025
% Reached end of topic System_Logs [0] at offset 201
controlplane:/opt/promtail$ ^C
controlplane:/opt/promtail$ history
    1  exit
    2  halt
    3  cd /opt/promtail
    4  vi promtail-local-config.yaml 
    5  systemctl restart promtail
    6  history
    7  clear
    8  apt install -y apt-transport-https
    9  apt install -y software-properties-common wget
   10  sudo wget -q -O /usr/share/keyrings/grafana.key https://apt.grafana.com/gpg.key
   11  echo "deb [signed-by=/usr/share/keyrings/grafana.key] https://apt.grafana.com stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list
   12  apt update
   13  # Install the latest Enterprise release:
   14  apt install -y grafana-enterprise
   15  systemctl daemon-reload
   16  systemctl start grafana-server
   17  systemctl status grafana-server --no-pager
   18  ss -ntulp | grep grafana
   19  ss -ntulp | grep 3000
   20  mkdir /opt/loki
   21  curl -O -L "https://github.com/grafana/loki/releases/download/v2.9.7/loki-linux-amd64.zip"
   22  unzip "loki-linux-amd64.zip"
   23  chmod a+x "loki-linux-amd64"
   24  cp /answers/loki-local-config.yaml /opt/loki
   25  cp /answers/loki.service /etc/systemd/system/loki.service
   26  systemctl daemon-reload
   27  cat /opt/loki/loki-local-config.yaml
   28  cat /etc/systemd/system/loki.service
   29  systemctl enable loki.service --now
   30  systemctl status loki.service --no-pager
   31  ss -ntulp | grep 3100
   32  history
   33  mkdir /opt/promtail
   34  cd /opt/promtail
   35  curl -O -L "https://github.com/grafana/loki/releases/download/v2.7.1/promtail-linux-amd64.zip"
   36  unzip promtail-linux-amd64.zip 
   37  cp /answers/promtail-local-config.yaml /opt/promtail
   38  cat /opt/promtail/promtail-local-config.yaml
   39  cp /answers/promtail.service /etc/systemd/system/promtail.service
   40  cat /etc/systemd/system/promtail.service
   41  systemctl daemon-reload
   42  systemctl enable promtail.service --now
   43  systemctl status promtail.service --no-pager
   44  ps -ef | grep [p]romtail
   45  history
   46  hisoty
   47  history
   48  kubectl create ns kafka
   49  kubectl get all -n kafka
   50  kubectl create -f /answers/zookeeper.yaml
   51  kubectl get all -n kafka
   52  kubectl describe -n kafka svc zookeeper-service
   53  kubectl create -f /answers/kafka.yaml
   54  kubectl describe svc kafka-service -n kafka
   55  kubectl get pods -o wide -n kafka
   56  apt -y install kafkacat
   57  kubectl port-forward $(kubectl get pods -n kafka | grep kafka | awk '{print $1}') 9092 -n kafka &
   58  echo "127.0.0.1 localhost kafka-broker" >> /etc/hosts
   59  echo "This is my message at $(date)" | kcat -P -b node01:31000 -t System_Logs
   60  timeout 3 kcat -C -b node01:31000 -t System_Logs
   61  history
controlplane:/opt/promtail$ while true; do random_number=$(( (RANDOM % 10) + 1 )); echo "This is my message at $random_number $(date)" | kcat -P -b node01:31000 -t System_Logs; sleep 3; done
^C
controlplane:/opt/promtail$ cd /opt/promtail
controlplane:/opt/promtail$ vi promtail-local-config.yaml 
controlplane:/opt/promtail$ cat  promtail-local-config.yaml 
server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://127.0.0.1:3100/loki/api/v1/push

scrape_configs:
- job_name: syslog
  static_configs:
  - targets:
      - localhost
    labels:
      job: syslog
      __path__: /var/log/syslog

- job_name: auth
  static_configs:
  - targets:
      - localhost
    labels:
      job: auth
      __path__: /var/log/auth.log
controlplane:/opt/promtail$ vi promtail-local-config.yaml 
controlplane:/opt/promtail$ cat  promtail-local-config.yaml 
server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://127.0.0.1:3100/loki/api/v1/push

scrape_configs:
- job_name: syslog
  static_configs:
  - targets:
      - localhost
    labels:
      job: syslog
      __path__: /var/log/syslog

- job_name: auth
  static_configs:
  - targets:
      - localhost
    labels:
      job: auth

      __path__: /var/log/auth.log



- job_name: kafka
  kafka:
    brokers:
    - node01:31000
    topics:
    - System_Logs
    labels:
      job: kafka
controlplane:/opt/promtail$ systemctl restart promtail
controlplane:/opt/promtail$ history
    1  exit
    2  halt
    3  cd /opt/promtail
    4  vi promtail-local-config.yaml 
    5  systemctl restart promtail
    6  history
    7  clear
    8  apt install -y apt-transport-https
    9  apt install -y software-properties-common wget
   10  sudo wget -q -O /usr/share/keyrings/grafana.key https://apt.grafana.com/gpg.key
   11  echo "deb [signed-by=/usr/share/keyrings/grafana.key] https://apt.grafana.com stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list
   12  apt update
   13  # Install the latest Enterprise release:
   14  apt install -y grafana-enterprise
   15  systemctl daemon-reload
   16  systemctl start grafana-server
   17  systemctl status grafana-server --no-pager
   18  ss -ntulp | grep grafana
   19  ss -ntulp | grep 3000
   20  mkdir /opt/loki
   21  curl -O -L "https://github.com/grafana/loki/releases/download/v2.9.7/loki-linux-amd64.zip"
   22  unzip "loki-linux-amd64.zip"
   23  chmod a+x "loki-linux-amd64"
   24  cp /answers/loki-local-config.yaml /opt/loki
   25  cp /answers/loki.service /etc/systemd/system/loki.service
   26  systemctl daemon-reload
   27  cat /opt/loki/loki-local-config.yaml
   28  cat /etc/systemd/system/loki.service
   29  systemctl enable loki.service --now
   30  systemctl status loki.service --no-pager
   31  ss -ntulp | grep 3100
   32  history
   33  mkdir /opt/promtail
   34  cd /opt/promtail
   35  curl -O -L "https://github.com/grafana/loki/releases/download/v2.7.1/promtail-linux-amd64.zip"
   36  unzip promtail-linux-amd64.zip 
   37  cp /answers/promtail-local-config.yaml /opt/promtail
   38  cat /opt/promtail/promtail-local-config.yaml
   39  cp /answers/promtail.service /etc/systemd/system/promtail.service
   40  cat /etc/systemd/system/promtail.service
   41  systemctl daemon-reload
   42  systemctl enable promtail.service --now
   43  systemctl status promtail.service --no-pager
   44  ps -ef | grep [p]romtail
   45  history
   46  hisoty
   47  history
   48  kubectl create ns kafka
   49  kubectl get all -n kafka
   50  kubectl create -f /answers/zookeeper.yaml
   51  kubectl get all -n kafka
   52  kubectl describe -n kafka svc zookeeper-service
   53  kubectl create -f /answers/kafka.yaml
   54  kubectl describe svc kafka-service -n kafka
   55  kubectl get pods -o wide -n kafka
   56  apt -y install kafkacat
   57  kubectl port-forward $(kubectl get pods -n kafka | grep kafka | awk '{print $1}') 9092 -n kafka &
   58  echo "127.0.0.1 localhost kafka-broker" >> /etc/hosts
   59  echo "This is my message at $(date)" | kcat -P -b node01:31000 -t System_Logs
   60  timeout 3 kcat -C -b node01:31000 -t System_Logs
   61  history
   62  while true; do random_number=$(( (RANDOM % 10) + 1 )); echo "This is my message at $random_number $(date)" | kcat -P -b node01:31000 -t System_Logs; sleep 3; done
   63  cd /opt/promtail
   64  vi promtail-local-config.yaml 
   65  cat  promtail-local-config.yaml 
   66  vi promtail-local-config.yaml 
   67  cat  promtail-local-config.yaml 
   68  systemctl restart promtail
   69  history
controlplane:/opt/promtail$ 







































========================






























Install and configure Grafana
Your team is going to be integrating an Apache Kafka message bus with existing infrastructure. You are setting up a new environment to facilitate the deployment.

Examine the proposed architecture and deploy these components for this lab.

kafka_infrastructure.png

Your team has determined they need to offload and monitor Linux logs in your environment. You know that Grafana can do that as a visualization tool, so you plan to deploy it on a server as a daemon.

Deploy Grafana and ensure that it is running on your server.


Solution
Solution
Refer to the Grafana Docs for latest installation instructions.

Install the required packages and Grafana GPG key.

apt install -y apt-transport-https
apt install -y software-properties-common wget
sudo wget -q -O /usr/share/keyrings/grafana.key https://apt.grafana.com/gpg.key
Add the Grafana repository.

echo "deb [signed-by=/usr/share/keyrings/grafana.key] https://apt.grafana.com stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list
Finally, we're ready to install Grafana:

apt update
# Install the latest Enterprise release:
apt install -y grafana-enterprise
Now that you've installed Grafana, let's make sure it's started.

systemctl daemon-reload
systemctl start grafana-server
systemctl status grafana-server --no-pager
Verify that the server is serving on port 3000 (the default port)

systemctl status grafana-server --no-pager
ss -ntulp | grep grafana
ss -ntulp | grep 3000
We can also check that the external Web UI is available and change the default password.

https://3b75194116e5-10-244-23-90-3000.saci.r.killercoda.com

Change the password. Default User: admin and Password: admin

Feel free to look around in the Web UI and then continue on to the next part of the lab.

























========================














Install and configure Loki
Your team has decided the log aggregator will be a tool called Loki. Your job is to get Loki up and running on your server.

Install Loki.

Verify Loki is running and exposing port 3100.


Solution
Solution
Create the directory where we will install Loki
mkdir /opt/loki
cd into that directory to set up the server

cd /opt/loki
Download and unpackage a current version of Loki

curl -O -L "https://github.com/grafana/loki/releases/download/v2.9.7/loki-linux-amd64.zip"
unzip "loki-linux-amd64.zip"
chmod a+x "loki-linux-amd64"

Copy over the loki config file from the /answers directory

cp /answers/loki-local-config.yaml /opt/loki
Copy over the loki.service file and restart the systemctl daemon so that Loki can run on your system.

cp /answers/loki.service /etc/systemd/system/loki.service
systemctl daemon-reload
Review the config file for Loki before starting the server.

cat /opt/loki/loki-local-config.yaml
Review the service file so that you are confident it is going to properly start Loki.

cat /etc/systemd/system/loki.service
Now that you've checked everything, start Loki daemon.

systemctl enable loki.service --now
Verify that Loki is running and exposing the proper port.

systemctl status loki.service --no-pager
ss -ntulp | grep 3100
























=============================

























Install and configure Promtail
In your reseach you find that the Promtail tool can push logs over to Loki in real time. Your tasks will be to deploy and configure Promtail to push logs into loki server.

Install Promtail.

Configure Promtail to push /var/log/auth.log and /var/log/syslog off the server to the Loki aggregator.

Ensure that Promtail is running correctly.


Solution
Solution
Create the directory where we will install Promtail.

mkdir /opt/promtail
Change to that directory and get ready to install promtail

cd /opt/promtail
Download and extract the executable

curl -O -L "https://github.com/grafana/loki/releases/download/v2.7.1/promtail-linux-amd64.zip"
unzip promtail-linux-amd64.zip 
Copy over the provided configuration and verify that it is pointing to the correct log files that you want to review.

cp /answers/promtail-local-config.yaml /opt/promtail
cat /opt/promtail/promtail-local-config.yaml
What do you notice about the configuration file? What are the scrape configs? What is the format that the file is in?

Setup the Promtail service configuration file for systemd to use to start the service

cp /answers/promtail.service /etc/systemd/system/promtail.service
cat /etc/systemd/system/promtail.service
Reload the systemd daemon and start the Promtail service

systemctl daemon-reload
systemctl enable promtail.service --now
Verify that the Promtail service is running on your system.

systemctl status promtail.service --no-pager
ps -ef | grep [p]romtail




























=============================













Configure Dashboard and view logs
You've setup all the pieces, now you have to create a dashboard in Grafana and verify that everything is working end to end.

Log into Grafana (and change the password if you didn't do it earlier)

Create the datasource for Loki in the the Datasource page. URL = http://127.0.0.1:3100

Create a dashboard (import 13639) that shows the log files for your server.


Solution
Solution
Connect to Grafana and log in https://3b75194116e5-10-244-23-90-3000.saci.r.killercoda.com

Create the datasource for Loki in the the Datasource page. URL = http://127.0.0.1:3100

Import the dashboard 13639 to view logs.

Verify the dashboard is working properly.























=============================












Setup Kafka and Zookeeper in Kubernetes
Your team is integrating Kafka with an existing Loki infrastructure for passing log messages. Your task is to stand up Kafka in a kubernetes cluster. For more information about the steps provided, view the kafka lab here


Tip
Answers file can be found at /answers

Solution
Create the namespace kafka

kubectl create ns kafka
Verify that your namespace is created

kubectl get all -n kafka
Create zookeeper deployment and services

kubectl create -f /answers/zookeeper.yaml
Verify that everything is working properly

kubectl get all -n kafka
Wait 60 seconds and run that command a few times to see that zookeeper is started. Descibe the services and pods to see their details.

kubectl describe -n kafka svc zookeeper-service
Next we deploy Kafka

Deploy the service and deployment.

kubectl create -f /answers/kafka.yaml
Wait 30 seconds and then verify that the service is pointed to the pod IP address as an endpoint.

kubectl describe svc kafka-service -n kafka
kubectl get pods -o wide -n kafka
The pod named kafka-broker-... should have the matching IP to the endpoint of the kafka-service

Install kafkacat tool

apt -y install kafkacat
For the communication to work, we have just one last thing to do, modify our /etc/hosts and make sure the port is forwarded from localhost to port 9092.

kubectl port-forward $(kubectl get pods -n kafka | grep kafka | awk '{print $1}') 9092 -n kafka &
echo "127.0.0.1 localhost kafka-broker" >> /etc/hosts
Hit enter after this command.

Send a message into kafka with kcat

echo "This is my message at $(date)" | kcat -P -b node01:31000 -t System_Logs
Now we consume that message from kafka.

timeout 3 kcat -C -b node01:31000 -t Syst














=============================




















Modify promtail configuration to consume from Kafka
Your team has set up Apache Kafka and tested basic functionality. Now you need to set promtail to read the messages going into the topic System_Logs and send them up into loki for storage and later use.


Solution
Run a loop that generates messages into Kafka

while true; do random_number=$(( (RANDOM % 10) + 1 )); echo "This is my message at $random_number $(date)" | kcat -P -b node01:31000 -t System_Logs; sleep 3; done
Open a new tab at the top of the terminal.

In the new tab, reconfigure promtail to read from Kafka and send messages down into Loki

cd /opt/promtail
vi promtail-local-config.yaml

vi promtail-local-config.yaml 
Modify the file to pull from kafka topic System_Logs

- job_name: kafka
  kafka:
    brokers:
    - node01:31000
    topics:
    - System_Logs
    labels:
      job: kafka
Save by using ":wq" or "Shift + ZZ"

Restart Promtail

systemctl restart promtail
Go back over to your Grafana Loki dashboard.

Refresh the page and verify that the app drop down has Kafka and watch Promtail pull your messages from Kafka and write into Loki.



























=============================































Modify promtail configuration to consume from Kafka
Your team has set up Apache Kafka and tested basic functionality. Now you need to set promtail to read the messages going into the topic System_Logs and send them up into loki for storage and later use.


Solution
Run a loop that generates messages into Kafka

while true; do random_number=$(( (RANDOM % 10) + 1 )); echo "This is my message at $random_number $(date)" | kcat -P -b node01:31000 -t System_Logs; sleep 3; done
Open a new tab at the top of the terminal.

In the new tab, reconfigure promtail to read from Kafka and send messages down into Loki

cd /opt/promtail
vi promtail-local-config.yaml

vi promtail-local-config.yaml 
Modify the file to pull from kafka topic System_Logs

- job_name: kafka
  kafka:
    brokers:
    - node01:31000
    topics:
    - System_Logs
    labels:
      job: kafka
Save by using ":wq" or "Shift + ZZ"

Restart Promtail

systemctl restart promtail
Go back over to your Grafana Loki dashboard.

Refresh the page and verify that the app drop down has Kafka and watch Promtail pull your messages from Kafka and write into Loki.















========================











influx db note
















ho "Installing scenario..."
while [ ! -f /tmp/finished ]; do sleep 1; done
echo DONE
controlplane:~$ echo "Installing scenario..."
Installing scenario...
controlplane:~$ while [ ! -f /tmp/finished ]; do sleep 1; done
apt install -y apt-transport-https
controlplane:~$ echo DONE
DONE
controlplane:~$ apt install -y apt-transport-https
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
apt-transport-https is already the newest version (2.7.14build2).
0 upgraded, 0 newly installed, 0 to remove and 150 not upgraded.
controlplane:~$ apt install -y software-properties-common wget
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
wget is already the newest version (1.21.4-1ubuntu4.1).
wget set to manually installed.
The following packages will be upgraded:
  python3-software-properties software-properties-common
2 upgraded, 0 newly installed, 0 to remove and 148 not upgraded.
Need to get 44.3 kB of archives.
After this operation, 1024 B of additional disk space will be used.
Get:1 http://archive.ubuntu.com/ubuntu noble-updates/main amd64 software-properties-common all 0.99.49.2 [14.4 kB]
Get:2 http://archive.ubuntu.com/ubuntu noble-updates/main amd64 python3-software-properties all 0.99.49.2 [29.8 kB]
Fetched 44.3 kB in 0s (279 kB/s)                  
(Reading database ... 140025 files and directories currently installed.)
Preparing to unpack .../software-properties-common_0.99.49.2_all.deb ...
Unpacking software-properties-common (0.99.49.2) over (0.99.49.1) ...
Preparing to unpack .../python3-software-properties_0.99.49.2_all.deb ...
Unpacking python3-software-properties (0.99.49.2) over (0.99.49.1) ...
Setting up python3-software-properties (0.99.49.2) ...
Setting up software-properties-common (0.99.49.2) ...
Processing triggers for man-db (2.12.0-4build2) ...
Processing triggers for dbus (1.14.10-4ubuntu4.1) ...
Scanning processes...                                                                                   
Scanning linux images...                                                                                

Running kernel seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
controlplane:~$ wget -q -O /usr/share/keyrings/grafana.key https://apt.grafana.com/gpg.key
controlplane:~$ echo "deb [signed-by=/usr/share/keyrings/grafana.key] https://apt.grafana.com stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list
deb [signed-by=/usr/share/keyrings/grafana.key] https://apt.grafana.com stable main
controlplane:~$ apt update
Hit:1 http://security.ubuntu.com/ubuntu noble-security InRelease
Get:2 https://apt.grafana.com stable InRelease [7660 B]                                                
Hit:3 http://archive.ubuntu.com/ubuntu noble InRelease                                                 
Hit:5 http://archive.ubuntu.com/ubuntu noble-updates InRelease                                         
Hit:6 http://archive.ubuntu.com/ubuntu noble-backports InRelease           
Hit:7 https://packages.mozilla.org/apt mozilla InRelease                   
Hit:4 https://prod-cdn.packages.k8s.io/repositories/isv:/kubernetes:/core:/stable:/v1.32/deb  InRelease
Get:8 https://apt.grafana.com stable/main amd64 Packages [391 kB]
Fetched 398 kB in 2s (179 kB/s)
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
148 packages can be upgraded. Run 'apt list --upgradable' to see them.
controlplane:~$ # Install the latest Enterprise release:
controlplane:~$ apt install -y grafana-enterprise
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following additional packages will be installed:
  musl
The following NEW packages will be installed:
  grafana-enterprise musl
0 upgraded, 2 newly installed, 0 to remove and 148 not upgraded.
Need to get 182 MB of archives.
After this operation, 673 MB of additional disk space will be used.
Get:1 https://apt.grafana.com stable/main amd64 grafana-enterprise amd64 12.0.0 [182 MB]
Get:2 http://archive.ubuntu.com/ubuntu noble/universe amd64 musl amd64 1.2.4-2 [416 kB]    
Fetched 182 MB in 9s (19.2 MB/s)                                                                       
Selecting previously unselected package musl:amd64.
(Reading database ... 140025 files and directories currently installed.)
Preparing to unpack .../musl_1.2.4-2_amd64.deb ...
Unpacking musl:amd64 (1.2.4-2) ...
Selecting previously unselected package grafana-enterprise.
Preparing to unpack .../grafana-enterprise_12.0.0_amd64.deb ...
Unpacking grafana-enterprise (12.0.0) ...
Setting up musl:amd64 (1.2.4-2) ...
Setting up grafana-enterprise (12.0.0) ...
info: Selecting UID from range 100 to 999 ...

info: Adding system user `grafana' (UID 120) ...
info: Adding new user `grafana' (UID 120) with group `grafana' ...
info: Not creating home directory `/usr/share/grafana'.
### NOT starting on installation, please execute the following statements to configure grafana to start automatically using systemd
 sudo /bin/systemctl daemon-reload
 sudo /bin/systemctl enable grafana-server
### You can start grafana-server by executing
 sudo /bin/systemctl start grafana-server
Processing triggers for man-db (2.12.0-4build2) ...
Scanning processes...                                                                                   
Scanning linux images...                                                                                

Running kernel seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
controlplane:~$ systemctl daemon-reload
controlplane:~$ systemctl start grafana-server
controlplane:~$ systemctl status grafana-server --no-pager
● grafana-server.service - Grafana instance
     Loaded: loaded (/usr/lib/systemd/system/grafana-server.service; disabled; preset: enabled)
     Active: active (running) since Thu 2025-05-08 02:16:56 UTC; 1s ago
       Docs: http://docs.grafana.org
   Main PID: 22893 (grafana)
      Tasks: 4 (limit: 2320)
     Memory: 149.1M (peak: 149.3M)
        CPU: 708ms
     CGroup: /system.slice/grafana-server.service
             └─22893 /usr/share/grafana/bin/grafana server --config=/etc/grafana/grafana.ini --pidfile=…

May 08 02:16:56 controlplane systemd[1]: Started grafana-server.service - Grafana instance.
controlplane:~$ systemctl status grafana-server --no-pager
● grafana-server.service - Grafana instance
     Loaded: loaded (/usr/lib/systemd/system/grafana-server.service; disabled; preset: enabled)
     Active: active (running) since Thu 2025-05-08 02:16:56 UTC; 4s ago
       Docs: http://docs.grafana.org
   Main PID: 22893 (grafana)
      Tasks: 6 (limit: 2320)
     Memory: 224.1M (peak: 224.7M)
        CPU: 1.425s
     CGroup: /system.slice/grafana-server.service
             └─22893 /usr/share/grafana/bin/grafana server --config=/etc/grafana/grafana.ini --pidfile=…

May 08 02:17:00 controlplane grafana[22893]: logger=migrator t=2025-05-08T02:17:00.738035544Z lev…2217ms
May 08 02:17:00 controlplane grafana[22893]: logger=migrator t=2025-05-08T02:17:00.742622728Z lev…to v2"
May 08 02:17:00 controlplane grafana[22893]: logger=migrator t=2025-05-08T02:17:00.744398801Z lev…7456ms
May 08 02:17:00 controlplane grafana[22893]: logger=migrator t=2025-05-08T02:17:00.749650185Z lev…ey_v1"
May 08 02:17:00 controlplane grafana[22893]: logger=migrator t=2025-05-08T02:17:00.753487451Z lev…2612ms
May 08 02:17:00 controlplane grafana[22893]: logger=migrator t=2025-05-08T02:17:00.757212382Z lev…arset"
May 08 02:17:00 controlplane grafana[22893]: logger=migrator t=2025-05-08T02:17:00.758284319Z lev…7574ms
May 08 02:17:00 controlplane grafana[22893]: logger=migrator t=2025-05-08T02:17:00.763121123Z lev…table"
May 08 02:17:00 controlplane grafana[22893]: logger=migrator t=2025-05-08T02:17:00.770758476Z lev…1766ms
May 08 02:17:00 controlplane grafana[22893]: logger=migrator t=2025-05-08T02:17:00.801353912Z lev…n key"
Hint: Some lines were ellipsized, use -l to show in full.
controlplane:~$ ss -ntulp | grep grafana
controlplane:~$ ss -ntulp | grep 3000
controlplane:~$ apt install -y apt-transport-https
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
apt-transport-https is already the newest version (2.7.14build2).
0 upgraded, 0 newly installed, 0 to remove and 148 not upgraded.
controlplane:~$ apt install -y software-properties-common wget
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
software-properties-common is already the newest version (0.99.49.2).
software-properties-common set to manually installed.
wget is already the newest version (1.21.4-1ubuntu4.1).
0 upgraded, 0 newly installed, 0 to remove and 148 not upgraded.
controlplane:~$ wget -q -O /usr/share/keyrings/grafana.key https://apt.grafana.com/gpg.key
controlplane:~$ echo "deb [signed-by=/usr/share/keyrings/grafana.key] https://apt.grafana.com stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list
deb [signed-by=/usr/share/keyrings/grafana.key] https://apt.grafana.com stable main
controlplane:~$ apt update
Hit:1 http://archive.ubuntu.com/ubuntu noble InRelease
Hit:2 http://security.ubuntu.com/ubuntu noble-security InRelease
Hit:3 http://archive.ubuntu.com/ubuntu noble-updates InRelease                                         
Hit:5 https://apt.grafana.com stable InRelease                                                         
Hit:6 http://archive.ubuntu.com/ubuntu noble-backports InRelease                                       
Hit:4 https://prod-cdn.packages.k8s.io/repositories/isv:/kubernetes:/core:/stable:/v1.32/deb  InRelease
Hit:7 https://packages.mozilla.org/apt mozilla InRelease                       
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
148 packages can be upgraded. Run 'apt list --upgradable' to see them.
W: Target Packages (main/binary-amd64/Packages) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target Packages (main/binary-all/Packages) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target Translations (main/i18n/Translation-en) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target DEP-11 (main/dep11/Components-amd64.yml) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target DEP-11 (main/dep11/Components-all.yml) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target CNF (main/cnf/Commands-amd64) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target CNF (main/cnf/Commands-all) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target Packages (main/binary-amd64/Packages) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target Packages (main/binary-all/Packages) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target Translations (main/i18n/Translation-en) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target DEP-11 (main/dep11/Components-amd64.yml) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target DEP-11 (main/dep11/Components-all.yml) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target CNF (main/cnf/Commands-amd64) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target CNF (main/cnf/Commands-all) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
controlplane:~$ # Install the latest Enterprise release:
controlplane:~$ apt install -y grafana-enterprise
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
grafana-enterprise is already the newest version (12.0.0).
0 upgraded, 0 newly installed, 0 to remove and 148 not upgraded.
controlplane:~$ systemctl daemon-reload
controlplane:~$ systemctl start grafana-server
controlplane:~$ systemctl status grafana-server --no-pager
● grafana-server.service - Grafana instance
     Loaded: loaded (/usr/lib/systemd/system/grafana-server.service; disabled; preset: enabled)
     Active: active (running) since Thu 2025-05-08 02:16:56 UTC; 1min 12s ago
       Docs: http://docs.grafana.org
   Main PID: 22893 (grafana)
      Tasks: 8 (limit: 2320)
     Memory: 241.0M (peak: 373.5M)
        CPU: 7.421s
     CGroup: /system.slice/grafana-server.service
             └─22893 /usr/share/grafana/bin/grafana server --config=/etc/grafana/grafana.ini --pidfile=…

May 08 02:17:12 controlplane grafana[22893]: logger=plugins.registration t=2025-05-08T02:17:12.33…re-app
May 08 02:17:12 controlplane grafana[22893]: logger=plugin.backgroundinstaller t=2025-05-08T02:17…9711ms
May 08 02:17:12 controlplane grafana[22893]: logger=plugin.backgroundinstaller t=2025-05-08T02:17…rsion=
May 08 02:17:12 controlplane grafana[22893]: logger=plugin.installer t=2025-05-08T02:17:12.561518…rsion=
May 08 02:17:12 controlplane grafana[22893]: logger=installer.fs t=2025-05-08T02:17:12.631263365Z…e-app"
May 08 02:17:12 controlplane grafana[22893]: logger=plugins.registration t=2025-05-08T02:17:12.79…pe-app
May 08 02:17:12 controlplane grafana[22893]: logger=plugin.backgroundinstaller t=2025-05-08T02:17…6248ms
May 08 02:17:14 controlplane grafana[22893]: logger=context userId=0 orgId=0 uname= t=2025-05-08T…server
May 08 02:17:36 controlplane grafana[22893]: logger=context userId=1 orgId=1 uname=admin t=2025-0…server
May 08 02:18:08 controlplane grafana[22893]: logger=infra.usagestats t=2025-05-08T02:18:08.385376…eport"
Hint: Some lines were ellipsized, use -l to show in full.
controlplane:~$ systemctl status grafana-server --no-pager
● grafana-server.service - Grafana instance
     Loaded: loaded (/usr/lib/systemd/system/grafana-server.service; disabled; preset: enabled)
     Active: active (running) since Thu 2025-05-08 02:16:56 UTC; 1min 15s ago
       Docs: http://docs.grafana.org
   Main PID: 22893 (grafana)
      Tasks: 8 (limit: 2320)
     Memory: 241.7M (peak: 373.5M)
        CPU: 7.435s
     CGroup: /system.slice/grafana-server.service
             └─22893 /usr/share/grafana/bin/grafana server --config=/etc/grafana/grafana.ini --pidfile=…

May 08 02:17:12 controlplane grafana[22893]: logger=plugins.registration t=2025-05-08T02:17:12.33…re-app
May 08 02:17:12 controlplane grafana[22893]: logger=plugin.backgroundinstaller t=2025-05-08T02:17…9711ms
May 08 02:17:12 controlplane grafana[22893]: logger=plugin.backgroundinstaller t=2025-05-08T02:17…rsion=
May 08 02:17:12 controlplane grafana[22893]: logger=plugin.installer t=2025-05-08T02:17:12.561518…rsion=
May 08 02:17:12 controlplane grafana[22893]: logger=installer.fs t=2025-05-08T02:17:12.631263365Z…e-app"
May 08 02:17:12 controlplane grafana[22893]: logger=plugins.registration t=2025-05-08T02:17:12.79…pe-app
May 08 02:17:12 controlplane grafana[22893]: logger=plugin.backgroundinstaller t=2025-05-08T02:17…6248ms
May 08 02:17:14 controlplane grafana[22893]: logger=context userId=0 orgId=0 uname= t=2025-05-08T…server
May 08 02:17:36 controlplane grafana[22893]: logger=context userId=1 orgId=1 uname=admin t=2025-0…server
May 08 02:18:08 controlplane grafana[22893]: logger=infra.usagestats t=2025-05-08T02:18:08.385376…eport"
Hint: Some lines were ellipsized, use -l to show in full.
controlplane:~$ ss -ntulp | grep grafana
tcp   LISTEN 0      4096                                    *:3000             *:*    users:(("grafana",pid=22893,fd=11))                   
controlplane:~$ ss -ntulp | grep 3000
tcp   LISTEN 0      4096                                    *:3000             *:*    users:(("grafana",pid=22893,fd=11))                   
controlplane:~$ wget -q https://repos.influxdata.com/influxdata-archive_compat.key
controlplane:~$ echo '393e8779c89ac8d958f81f942f9ad7fb82a25e133faddaf92e15b16e6ac9ce4c influxdata-archive_compat.key' | sha256sum -c && cat influxdata-archive_compat.key | gpg --dearmor | tee /etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg > /dev/null
influxdata-archive_compat.key: OK
controlplane:~$ echo 'deb [signed-by=/etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg] https://repos.influxdata.com/debian stable main' | tee /etc/apt/sources.list.d/influxdata.list
deb [signed-by=/etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg] https://repos.influxdata.com/debian stable main
controlplane:~$ apt-get update && apt-get -y install influxdb2
Hit:1 http://archive.ubuntu.com/ubuntu noble InRelease
Hit:2 https://apt.grafana.com stable InRelease                                                         
Get:3 https://repos.influxdata.com/debian stable InRelease [6907 B]                                    
Hit:5 http://archive.ubuntu.com/ubuntu noble-updates InRelease                                         
Hit:6 http://security.ubuntu.com/ubuntu noble-security InRelease                                       
Hit:7 http://archive.ubuntu.com/ubuntu noble-backports InRelease                                       
Hit:8 https://packages.mozilla.org/apt mozilla InRelease
Hit:4 https://prod-cdn.packages.k8s.io/repositories/isv:/kubernetes:/core:/stable:/v1.32/deb  InRelease
Get:9 https://repos.influxdata.com/debian stable/main amd64 Packages [15.7 kB]
Fetched 22.6 kB in 2s (13.6 kB/s)
Reading package lists... Done
W: Target Packages (main/binary-amd64/Packages) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target Packages (main/binary-all/Packages) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target Translations (main/i18n/Translation-en) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target DEP-11 (main/dep11/Components-amd64.yml) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target DEP-11 (main/dep11/Components-all.yml) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target CNF (main/cnf/Commands-amd64) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target CNF (main/cnf/Commands-all) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target Packages (main/binary-amd64/Packages) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target Packages (main/binary-all/Packages) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target Translations (main/i18n/Translation-en) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target DEP-11 (main/dep11/Components-amd64.yml) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target DEP-11 (main/dep11/Components-all.yml) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target CNF (main/cnf/Commands-amd64) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target CNF (main/cnf/Commands-all) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following additional packages will be installed:
  influxdb2-cli
The following NEW packages will be installed:
  influxdb2 influxdb2-cli
0 upgraded, 2 newly installed, 0 to remove and 148 not upgraded.
Need to get 61.3 MB of archives.
After this operation, 147 MB of additional disk space will be used.
Get:1 https://repos.influxdata.com/debian stable/main amd64 influxdb2 amd64 2.7.11-1 [49.6 MB]
Get:2 https://repos.influxdata.com/debian stable/main amd64 influxdb2-cli amd64 2.7.5-1 [11.7 MB]
Fetched 61.3 MB in 2s (37.0 MB/s)       
Selecting previously unselected package influxdb2.
(Reading database ... 151280 files and directories currently installed.)
Preparing to unpack .../influxdb2_2.7.11-1_amd64.deb ...
Unpacking influxdb2 (2.7.11-1) ...
Selecting previously unselected package influxdb2-cli.
Preparing to unpack .../influxdb2-cli_2.7.5-1_amd64.deb ...
Unpacking influxdb2-cli (2.7.5-1) ...
Setting up influxdb2 (2.7.11-1) ...
Created symlink /etc/systemd/system/influxd.service → /usr/lib/systemd/system/influxdb.service.
Created symlink /etc/systemd/system/multi-user.target.wants/influxdb.service → /usr/lib/systemd/system/influxdb.service.
Setting up influxdb2-cli (2.7.5-1) ...
Scanning processes...                                                                                   
Scanning linux images...                                                                                

Running kernel seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
controlplane:~$ systemctl start influxdb      
controlplane:~$ systemctl enable influxdb
controlplane:~$ ss -ntulp | grep 8086
tcp   LISTEN 0      4096                                    *:8086             *:*    users:(("influxd",pid=24976,fd=9))                    
controlplane:~$ lsof -i :8086
COMMAND   PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
influxd 24976 influxdb    9u  IPv6 151970      0t0  TCP *:8086 (LISTEN)
controlplane:~$ wget -q https://repos.influxdata.com/influxdata-archive_compat.key
controlplane:~$ echo '393e8779c89ac8d958f81f942f9ad7fb82a25e133faddaf92e15b16e6ac9ce4c influxdata-archive_compat.key' | sha256sum -c && cat influxdata-archive_compat.key | gpg --dearmor | tee /etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg > /dev/null
influxdata-archive_compat.key: OK
controlplane:~$ echo 'deb [signed-by=/etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg] https://repos.influxdata.com/debian stable main' | tee /etc/apt/sources.list.d/influxdata.list
deb [signed-by=/etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg] https://repos.influxdata.com/debian stable main
controlplane:~$ apt update && apt -y install telegraf
Hit:1 http://archive.ubuntu.com/ubuntu noble InRelease
Hit:2 http://archive.ubuntu.com/ubuntu noble-updates InRelease                                         
Hit:3 http://archive.ubuntu.com/ubuntu noble-backports InRelease                                       
Hit:4 http://security.ubuntu.com/ubuntu noble-security InRelease                                       
Hit:5 https://repos.influxdata.com/debian stable InRelease                                             
Hit:6 https://apt.grafana.com stable InRelease                                                         
Hit:8 https://packages.mozilla.org/apt mozilla InRelease                                               
Hit:7 https://prod-cdn.packages.k8s.io/repositories/isv:/kubernetes:/core:/stable:/v1.32/deb  InRelease
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
148 packages can be upgraded. Run 'apt list --upgradable' to see them.
W: Target Packages (main/binary-amd64/Packages) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target Packages (main/binary-all/Packages) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target Translations (main/i18n/Translation-en) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target DEP-11 (main/dep11/Components-amd64.yml) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target DEP-11 (main/dep11/Components-all.yml) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target CNF (main/cnf/Commands-amd64) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target CNF (main/cnf/Commands-all) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target Packages (main/binary-amd64/Packages) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target Packages (main/binary-all/Packages) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target Translations (main/i18n/Translation-en) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target DEP-11 (main/dep11/Components-amd64.yml) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target DEP-11 (main/dep11/Components-all.yml) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target CNF (main/cnf/Commands-amd64) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
W: Target CNF (main/cnf/Commands-all) is configured multiple times in /etc/apt/sources.list.d/grafana.list:1 and /etc/apt/sources.list.d/grafana.list:2
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following NEW packages will be installed:
  telegraf
0 upgraded, 1 newly installed, 0 to remove and 148 not upgraded.
Need to get 74.8 MB of archives.
After this operation, 288 MB of additional disk space will be used.
Get:1 https://repos.influxdata.com/debian stable/main amd64 telegraf amd64 1.34.3-1 [74.8 MB]
Fetched 74.8 MB in 3s (24.5 MB/s)   
Selecting previously unselected package telegraf.
(Reading database ... 151296 files and directories currently installed.)
Preparing to unpack .../telegraf_1.34.3-1_amd64.deb ...
Unpacking telegraf (1.34.3-1) ...
Setting up telegraf (1.34.3-1) ...
Created symlink /etc/systemd/system/multi-user.target.wants/telegraf.service → /usr/lib/systemd/system/telegraf.service.
Scanning processes...                                                                                   
Scanning linux images...                                                                                

Running kernel seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
controlplane:~$ vi /etc/telegraf/telegraf.conf
controlplane:~$ systemctl restart telegraf
controlplane:~$ systemctl status telegraf --no-pager -l
● telegraf.service - Telegraf
     Loaded: loaded (/usr/lib/systemd/system/telegraf.service; enabled; preset: enabled)
     Active: active (running) since Thu 2025-05-08 02:22:51 UTC; 25ms ago
       Docs: https://github.com/influxdata/telegraf
   Main PID: 27862 (telegraf)
      Tasks: 4 (limit: 2320)
     Memory: 114.6M (peak: 114.7M)
        CPU: 146ms
     CGroup: /system.slice/telegraf.service
             ├─27862 /usr/bin/telegraf -config /etc/telegraf/telegraf.conf -config-directory /etc/telegraf/telegraf.d
             └─27911 /usr/bin/dbus-daemon --syslog --fork --print-pid 4 --print-address 6 --session

May 08 02:22:50 controlplane systemd[1]: Starting telegraf.service - Telegraf...
May 08 02:22:50 controlplane (telegraf)[27862]: telegraf.service: Referenced but unset environment variable evaluates to an empty string: TELEGRAF_OPTS
May 08 02:22:51 controlplane dbus-daemon[27911]: [session uid=995 pid=27908] AppArmor D-Bus mediation is enabled
May 08 02:22:51 controlplane systemd[1]: Started telegraf.service - Telegraf.
controlplane:~$ history
    1  exit
    2  halt
    3  echo "Installing scenario..."
    4  while [ ! -f /tmp/finished ]; do sleep 1; done
    5  echo DONE
    6  apt install -y apt-transport-https
    7  apt install -y software-properties-common wget
    8  wget -q -O /usr/share/keyrings/grafana.key https://apt.grafana.com/gpg.key
    9  echo "deb [signed-by=/usr/share/keyrings/grafana.key] https://apt.grafana.com stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list
   10  apt update
   11  # Install the latest Enterprise release:
   12  apt install -y grafana-enterprise
   13  systemctl daemon-reload
   14  systemctl start grafana-server
   15  systemctl status grafana-server --no-pager
   16  ss -ntulp | grep grafana
   17  ss -ntulp | grep 3000
   18  apt install -y apt-transport-https
   19  apt install -y software-properties-common wget
   20  wget -q -O /usr/share/keyrings/grafana.key https://apt.grafana.com/gpg.key
   21  echo "deb [signed-by=/usr/share/keyrings/grafana.key] https://apt.grafana.com stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list
   22  apt update
   23  # Install the latest Enterprise release:
   24  apt install -y grafana-enterprise
   25  systemctl daemon-reload
   26  systemctl start grafana-server
   27  systemctl status grafana-server --no-pager
   28  ss -ntulp | grep grafana
   29  ss -ntulp | grep 3000
   30  wget -q https://repos.influxdata.com/influxdata-archive_compat.key
   31  echo '393e8779c89ac8d958f81f942f9ad7fb82a25e133faddaf92e15b16e6ac9ce4c influxdata-archive_compat.key' | sha256sum -c && cat influxdata-archive_compat.key | gpg --dearmor | tee /etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg > /dev/null
   32  echo 'deb [signed-by=/etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg] https://repos.influxdata.com/debian stable main' | tee /etc/apt/sources.list.d/influxdata.list
   33  apt-get update && apt-get -y install influxdb2
   34  systemctl start influxdb      
   35  systemctl enable influxdb
   36  ss -ntulp | grep 8086
   37  lsof -i :8086
   38  wget -q https://repos.influxdata.com/influxdata-archive_compat.key
   39  echo '393e8779c89ac8d958f81f942f9ad7fb82a25e133faddaf92e15b16e6ac9ce4c influxdata-archive_compat.key' | sha256sum -c && cat influxdata-archive_compat.key | gpg --dearmor | tee /etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg > /dev/null
   40  echo 'deb [signed-by=/etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg] https://repos.influxdata.com/debian stable main' | tee /etc/apt/sources.list.d/influxdata.list
   41  apt update && apt -y install telegraf
   42  vi /etc/telegraf/telegraf.conf
   43  systemctl restart telegraf
   44  systemctl status telegraf --no-pager -l
   45  history
controlplane:~$ 




















============================






Install and configure Grafana
Your team has determined they need to monitor telemetry in your environment. You know that Grafana can do that as a visualization tool, so you plan to deploy it on a server as a daemon.

Deploy Grafana and ensure that it is running on your server.


Solution
Solution
Refer to the Grafana Docs for latest installation instructions.

Install the required packages and Grafana GPG key.

apt install -y apt-transport-https
apt install -y software-properties-common wget
wget -q -O /usr/share/keyrings/grafana.key https://apt.grafana.com/gpg.key
Add the Grafana repository.

echo "deb [signed-by=/usr/share/keyrings/grafana.key] https://apt.grafana.com stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list
Finally, we're ready to install Grafana:

apt update
# Install the latest Enterprise release:
apt install -y grafana-enterprise
Now that you've installed Grafana, let's make sure it's started.

systemctl daemon-reload
systemctl start grafana-server
systemctl status grafana-server --no-pager
Verify that the server is serving on port 3000 (the default port)

systemctl status grafana-server --no-pager
ss -ntulp | grep grafana
ss -ntulp | grep 3000
We can also check that the external Web UI is available and change the default password.

https://da4a2ee71cfa-10-244-24-47-3000.saci.r.killercoda.com

Change the password. Default User: admin and Password: admin

Feel free to look around in the Web UI and then continue on to the next part of the lab.











========================













Install InfluxDB
Your team has decided that the data will be collected by Telegraf and sent for aggregation to influxdb version 2.7.

Install InfluxDB2.

Verify that InfluxDB2 is running on your system.

Setup an organization, bucket, and token. Collect and copy your data toke from the UI.


Solution
Solution
Install the InfluxDB2 repository.
wget -q https://repos.influxdata.com/influxdata-archive_compat.key
echo '393e8779c89ac8d958f81f942f9ad7fb82a25e133faddaf92e15b16e6ac9ce4c influxdata-archive_compat.key' | sha256sum -c && cat influxdata-archive_compat.key | gpg --dearmor | tee /etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg > /dev/null
echo 'deb [signed-by=/etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg] https://repos.influxdata.com/debian stable main' | tee /etc/apt/sources.list.d/influxdata.list
Install InfluxDB2

apt-get update && apt-get -y install influxdb2
Start InfluxDB2

systemctl start influxdb      
systemctl enable influxdb
Verify InfluxDB2 is listening on the correct port.

ss -ntulp | grep 8086
lsof -i :8086
Connect to InfluxDB, set up your organization, bucket, and token. Copy those pieces of information out to a notepad, you will need them shortly.

https://da4a2ee71cfa-10-244-24-47-8086.saci.r.killercoda.com

InfluxDB2.png

Once this is complete you have completed this section of the lab.


















========================













Install and configure Telegraf
In your reseach you find that Telegraf can write out to InfluxDB2. So you need to install and configure telegraf to write telemetry data into influxDB2.

Install Telegraf.

Configure Telegraf to push data into InfluxDB2.

Verify that telegraf is running and pushing data into InfluxDB2


Solution
Solution
Install the respository for telegraf.

wget -q https://repos.influxdata.com/influxdata-archive_compat.key
echo '393e8779c89ac8d958f81f942f9ad7fb82a25e133faddaf92e15b16e6ac9ce4c influxdata-archive_compat.key' | sha256sum -c && cat influxdata-archive_compat.key | gpg --dearmor | tee /etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg > /dev/null
echo 'deb [signed-by=/etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg] https://repos.influxdata.com/debian stable main' | tee /etc/apt/sources.list.d/influxdata.list
Install telegraf

apt update && apt -y install telegraf
Setup the telegraf configuration file to write to the output producer for influxdb2

vi /etc/telegraf/telegraf.conf
Set the information as follows: (Replace with your url, token, organization, and bucket)

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################


# # Configuration for sending metrics to InfluxDB 2.0
 [[outputs.influxdb_v2]]
#   ## The URLs of the InfluxDB cluster nodes.
#   ##
#   ## Multiple URLs can be specified for a single cluster, only ONE of the
#   ## urls will be written to each interval.
#   ##   ex: urls = ["https://us-west-2-1.aws.cloud2.influxdata.com"]
   urls = ["http://127.0.0.1:8086"]
#
#   ## Token for authentication.
   token = "mXA4HiqkssvKaNMtGmEyGPa7h8bpV7hwgjqRJKtBz79qpbQSbIzsaClRJgyuIhBxyw5Lb8qF2Jt1yy_-2qUTA=="
#
#   ## Organization is the name of the organization you wish to write to.
   organization = "influxtest"
#
#   ## Destination bucket to write into.
   bucket = "influxdata"
Restart Telegraf and verify it's writing to InfluxDB2

systemctl restart telegraf
systemctl status telegraf --no-pager -l
Look at the output above and verify that telegraf is properly writing out to InfluxDB2.








===============================




Configure Dashboard and view telemetry data
You've setup all the pieces, now you have to create a dashboard in Grafana and verify that everything is working end to end.

Log into Grafana (and change the password if you didn't do it earlier)

Create the datasource for InfluxDB2 in the the Datasource page. URL = http://127.0.0.1:8086 You also need to know all of your client token, organization, and bucket information.

Create a dashboard that shows the telemetry information for your server from InfluxDB2.


Solution
Solution
Connect to Grafana and log in https://da4a2ee71cfa-10-244-24-47-3000.saci.r.killercoda.com

Create the datasource for InfluxDB in the the Datasource page. Change the Query Language to Flux Set the URL = http://127.0.0.1:8086 Scroll all the way down and set: Organization, Bucket, and Token.

If you see "Datasource is working: 3 Buckets found" You know you connected properly.

Create a new Dashboard. Select a new Panel. Pick the data source InfluxDB. Choose the sample query of "Filter by Value".

Verify the dashboard is working properly.


















========================













Configure Dashboard and view telemetry data
You've setup all the pieces, now you have to create a dashboard in Grafana and verify that everything is working end to end.

Log into Grafana (and change the password if you didn't do it earlier)

Create the datasource for InfluxDB2 in the the Datasource page. URL = http://127.0.0.1:8086 You also need to know all of your client token, organization, and bucket information.

Create a dashboard that shows the telemetry information for your server from InfluxDB2.


Solution
Solution
Connect to Grafana and log in https://da4a2ee71cfa-10-244-24-47-3000.saci.r.killercoda.com

Create the datasource for InfluxDB in the the Datasource page. Change the Query Language to Flux Set the URL = http://127.0.0.1:8086 Scroll all the way down and set: Organization, Bucket, and Token.

If you see "Datasource is working: 3 Buckets found" You know you connected properly.

Create a new Dashboard. Select a new Panel. Pick the data source InfluxDB. Choose the sample query of "Filter by Value".

Verify the dashboard is working properly.














================================






























# rsyslog notes



Verify rsyslog is running. Set it to listen and forward logs
Your team has determined that they need to centralize logging in the environment. This is a Security Technical Implementation Guide (STIG) for government systems. But, in your case, it's just a good practice and your team has been losing remediation time by not being able to see logs on systems until after the systems are back up.

Your management has been coming around talking about MTTR and MTTD. You don't know what that means, but you know that getting logs to a central place will help make it better and management will leave you alone.

Verify that rsyslog is installed and running on both systems.

Configure rsyslog on controlplane to capture UDP on the default port 514.

Verify that rsyslog is listening on UDP port 514.

Configure rsyslog on node01 to send logs over UDP to controlplane

Verify that the logs are sending data from node01 to controlplane.


Solution
Solution
Verify that rsyslog is installed and running on both systems.
dpkg -l | grep -i rsyslog
ssh node01 'dpkg -l | grep -i rsyslog'
systemctl status rsyslog
ssh node01 'systemctl status rsyslog'
Configure rsyslog on controlplane to capture UDP on the default port 514.

vi /etc/rsyslog.conf
Uncomment the following two lines

module(load="imudp")
input(type="imudp" port="514")
Hit esc :wq to write and quit

You know that systems do not take configuration file changes without a restart of the service, so restart rsyslog

systemctl restart rsyslog
Verify that your system is listening on port 514 for UDP traffic.

ss -ntulp | grep 514
ssh to node01

ssh node01
Configure the rsyslog daemon on node01

vi /etc/rsyslog.conf
Add the following line at the bottom of the file.

*.* @controlplane:514
Restart the service

systemctl restart rsyslog
Exit back to controlplane node

exit
Verify that the node01 system logs are being pushed over to controlplane

tail -f /var/log/syslog
You are ready to head to the next part of the lab.















========================















Send logs to different files
So far you have enabled rsyslog collection on controlplane and sent logs to controlplane on UDP port 514 from node01.

Your team has decided that they would like to break up the logs into more manageable pieces.

Break the log collection up into a directory for each node. Use /var/log/hostname/messages.log

Verify that the logs are being written correctly for controlplane and node01.


Solution
Solution
Create a log filter on controlplane
vi /etc/rsyslog.d/30-remote.conf
Add the following lines to your new file.

$template RemoteLogs,"/var/log/%HOSTNAME%/messages.log"
if ($fromhost-ip != "127.0.0.1") then ?RemoteLogs
& stop
Restart the rsyslog service on controlplane

systemctl restart rsyslog
Verify that the logs from node01 are going to the correct place. Now that you've sent them to a new location.

tail -f /var/log/node01/messages.log
Hit ctrl + c to quit that tail of the file.

Verify that the controlplane logs are still going to the correct place.

tail -f /var/log/syslog
Hit ctrl + c to quit that tail of the file














============================













Look at you, learning Linux Security! You set up system logging and were able to see data flow from node01 into controlplane for centralized logging.

Check https://attack.mitre.org/techniques/T1070/ for more information about why we want to track logs in real time.

Check https://en.wikipedia.org/wiki/Mean_time_to_repair to figure out what management was talking about earlier.
























============================











02:46:59 - Completed rule  : Ubuntu 22.04 LTS must allow users to directly initiate a session lock for all connection types. [fail]
02:46:59 - Processing rule : (84 of 179) Ubuntu 22.04 LTS must automatically exit interactive command shell user sessions after 15 minutes of inactivity.
02:46:59 - Processing test : oval:mil.disa.stig.ind:tst:26055400
02:46:59 - Search Criteria: path set to /etc/profile.d with path_operation equals and file_name set to .* with filename_operation pattern match
02:46:59 - File scan complete
02:46:59 - Completed test  : oval:mil.disa.stig.ind:tst:26055400 [false]
02:46:59 - Completed rule  : Ubuntu 22.04 LTS must automatically exit interactive command shell user sessions after 15 minutes of inactivity. [fail]
02:46:59 - Processing rule : (85 of 179) Ubuntu 22.04 LTS default filesystem permissions must be defined in such a way that all authenticated users can read and modify only their own files.
02:46:59 - Processing test : oval:mil.disa.stig.ind:tst:23038300
02:46:59 - Created a total of 831 items so far.
02:46:59 - Completed test  : oval:mil.disa.stig.ind:tst:23038300 [false]
02:46:59 - Completed rule  : Ubuntu 22.04 LTS default filesystem permissions must be defined in such a way that all authenticated users can read and modify only their own files. [fail]
02:46:59 - Processing rule : (86 of 179) Ubuntu 22.04 LTS must have the "apparmor" package installed.
02:46:59 - Processing test : oval:mil.disa.stig.linux:tst:26055600
02:46:59 - Created a total of 832 items so far.
02:46:59 - Completed test  : oval:mil.disa.stig.linux:tst:26055600 [true]
02:46:59 - Completed rule  : Ubuntu 22.04 LTS must have the "apparmor" package installed. [pass]
02:46:59 - Processing rule : (87 of 179) Ubuntu 22.04 LTS must be configured to use AppArmor.
02:46:59 - Completed rule  : Ubuntu 22.04 LTS must be configured to use AppArmor. [notchecked]
02:46:59 - Processing rule : (88 of 179) Ubuntu 22.04 LTS must require users to reauthenticate for privilege escalation or when changing roles.
02:46:59 - Processing test : oval:mil.disa.stig.ind:tst:23820800
02:46:59 - Completed test  : oval:mil.disa.stig.ind:tst:23820800 [true]
02:46:59 - Processing test : oval:mil.disa.stig.ind:tst:23820801
02:46:59 - Completed test  : oval:mil.disa.stig.ind:tst:23820801 [true]
02:46:59 - Processing test : oval:mil.disa.stig.ind:tst:23820802
02:46:59 - Search Criteria: path set to /etc/sudoers.d with path_operation equals and file_name set to .* with filename_operation pattern match
02:46:59 - File scan complete
02:46:59 - Created a total of 833 items so far.
02:46:59 - Completed test  : oval:mil.disa.stig.ind:tst:23820802 [false]
02:46:59 - Processing test : oval:mil.disa.stig.ind:tst:23820803
02:46:59 - Completed test  : oval:mil.disa.stig.ind:tst:23820803 [true]
02:46:59 - Completed rule  : Ubuntu 22.04 LTS must require users to reauthenticate for privilege escalation or when changing roles. [fail]
02:46:59 - Processing rule : (89 of 179) Ubuntu 22.04 LTS must ensure only users who need access to security functions are part of sudo group.
02:46:59 - Completed rule  : Ubuntu 22.04 LTS must ensure only users who need access to security functions are part of sudo group. [notchecked]
02:46:59 - Processing rule : (90 of 179) Ubuntu 22.04 LTS must enforce password complexity by requiring at least one uppercase character be used.
02:46:59 - Processing test : oval:mil.disa.stig.ind:tst:23035700
02:47:00 - Search Criteria: path set to /etc/security/pwquality.conf.d with path_operation equals and file_name set to \.conf$ with filename_operation pattern match
02:47:00 - File scan complete
02:47:00 - Completed test  : oval:mil.disa.stig.ind:tst:23035700 [false]
02:47:00 - Completed rule  : Ubuntu 22.04 LTS must enforce password complexity by requiring at least one uppercase character be used. [fail]
02:47:00 - Processing rule : (91 of 179) Ubuntu 22.04 LTS must enforce password complexity by requiring at least one lowercase character be used.
02:47:00 - Processing test : oval:mil.disa.stig.ind:tst:23035800
02:47:00 - Completed test  : oval:mil.disa.stig.ind:tst:23035800 [false]
02:47:00 - Completed rule  : Ubuntu 22.04 LTS must enforce password complexity by requiring at least one lowercase character be used. [fail]
02:47:00 - Processing rule : (92 of 179) Ubuntu 22.04 LTS must enforce password complexity by requiring that at least one numeric character be used.
02:47:00 - Processing test : oval:mil.disa.stig.ind:tst:23035900
02:47:00 - Completed test  : oval:mil.disa.stig.ind:tst:23035900 [false]
02:47:00 - Completed rule  : Ubuntu 22.04 LTS must enforce password complexity by requiring that at least one numeric character be used. [fail]
02:47:00 - Processing rule : (93 of 179) Ubuntu 22.04 LTS must enforce password complexity by requiring that at least one special character be used.
02:47:00 - Processing test : oval:mil.disa.stig.ind:tst:23037500
02:47:00 - Completed test  : oval:mil.disa.stig.ind:tst:23037500 [false]
02:47:00 - Completed rule  : Ubuntu 22.04 LTS must enforce password complexity by requiring that at least one special character be used. [fail]
02:47:00 - Processing rule : (94 of 179) Ubuntu 22.04 LTS must prevent the use of dictionary words for passwords.
02:47:00 - Processing test : oval:mil.disa.stig.ind:tst:23037700
02:47:00 - Search Criteria: path set to /etc/security/pwquality.conf.d with path_operation equals and file_name set to \.conf$ with filename_operation pattern match
02:47:00 - File scan complete
02:47:00 - Completed test  : oval:mil.disa.stig.ind:tst:23037700 [false]
02:47:00 - Completed rule  : Ubuntu 22.04 LTS must prevent the use of dictionary words for passwords. [fail]
02:47:00 - Processing rule : (95 of 179) Ubuntu 22.04 LTS must enforce a minimum 15-character password length.
02:47:00 - Processing test : oval:mil.disa.stig.ind:tst:23036900
02:47:00 - Completed test  : oval:mil.disa.stig.ind:tst:23036900 [false]
02:47:00 - Completed rule  : Ubuntu 22.04 LTS must enforce a minimum 15-character password length. [fail]
02:47:00 - Processing rule : (96 of 179) Ubuntu 22.04 LTS must require the change of at least eight characters when passwords are changed.
02:47:00 - Processing test : oval:mil.disa.stig.ind:tst:23036300
02:47:00 - Completed test  : oval:mil.disa.stig.ind:tst:23036300 [false]
02:47:00 - Completed rule  : Ubuntu 22.04 LTS must require the change of at least eight characters when passwords are changed. [fail]
02:47:00 - Processing rule : (97 of 179) Ubuntu 22.04 LTS must be configured so that when passwords are changed or new passwords are established, pwquality must be used.
02:47:00 - Processing test : oval:mil.disa.stig.ind:tst:26056700
02:47:00 - Completed test  : oval:mil.disa.stig.ind:tst:26056700 [false]
02:47:00 - Processing test : oval:mil.disa.stig.ind:tst:26056701
02:47:00 - Completed test  : oval:mil.disa.stig.ind:tst:26056701 [false]
02:47:00 - Completed rule  : Ubuntu 22.04 LTS must be configured so that when passwords are changed or new passwords are established, pwquality must be used. [fail]
02:47:00 - Processing rule : (98 of 179) Ubuntu 22.04 LTS must store only encrypted representations of passwords.
02:47:00 - Processing test : oval:mil.disa.stig.ind:tst:26056900
02:47:00 - Completed test  : oval:mil.disa.stig.ind:tst:26056900 [false]
02:47:00 - Completed rule  : Ubuntu 22.04 LTS must store only encrypted representations of passwords. [fail]
02:47:00 - Processing rule : (99 of 179) Ubuntu 22.04 LTS must not allow accounts configured with blank or null passwords.
02:47:00 - Processing test : oval:mil.disa.stig.ind:tst:25150400
02:47:00 - Completed test  : oval:mil.disa.stig.ind:tst:25150400 [true]
02:47:00 - Processing test : oval:mil.disa.stig.ind:tst:25150401
02:47:00 - Created a total of 834 items so far.
02:47:00 - Completed test  : oval:mil.disa.stig.ind:tst:25150401 [false]
02:47:00 - Completed rule  : Ubuntu 22.04 LTS must not allow accounts configured with blank or null passwords. [fail]
02:47:00 - Processing rule : (100 of 179) Ubuntu 22.04 LTS must not have accounts configured with blank or null passwords.
02:47:00 - Processing test : oval:mil.disa.stig.ind:tst:25170600
02:47:00 - Completed test  : oval:mil.disa.stig.ind:tst:25170600 [true]
02:47:00 - Completed rule  : Ubuntu 22.04 LTS must not have accounts configured with blank or null passwords. [pass]
02:47:00 - Processing rule : (101 of 179) Ubuntu 22.04 LTS must encrypt all stored passwords with a FIPS 140-3-approved cryptographic hashing algorithm.
02:47:00 - Processing test : oval:mil.disa.stig.ind:tst:23023100
02:47:00 - Created a total of 835 items so far.
02:47:00 - Completed test  : oval:mil.disa.stig.ind:tst:23023100 [true]
02:47:00 - Completed rule  : Ubuntu 22.04 LTS must encrypt all stored passwords with a FIPS 140-3-approved cryptographic hashing algorithm. [pass]
02:47:00 - Processing rule : (102 of 179) Ubuntu 22.04 LTS must implement multifactor authentication for remote access to privileged accounts in such a way that one of the factors is provided by a device separate from the system gaining access.
02:47:00 - Processing test : oval:mil.disa.stig.linux:tst:23823000
02:47:00 - Completed test  : oval:mil.disa.stig.linux:tst:23823000 [false]
02:47:00 - Completed rule  : Ubuntu 22.04 LTS must implement multifactor authentication for remote access to privileged accounts in such a way that one of the factors is provided by a device separate from the system gaining access. [fail]
02:47:00 - Processing rule : (103 of 179) Ubuntu 22.04 LTS must accept personal identity verification (PIV) credentials.
02:47:00 - Processing test : oval:mil.disa.stig.linux:tst:23823100
02:47:00 - Completed test  : oval:mil.disa.stig.linux:tst:23823100 [false]
02:47:00 - Completed rule  : Ubuntu 22.04 LTS must accept personal identity verification (PIV) credentials. [fail]
02:47:00 - Processing rule : (104 of 179) Ubuntu 22.04 LTS must implement smart card logins for multifactor authentication for local and network access to privileged and nonprivileged accounts.
02:47:00 - Processing test : oval:mil.disa.stig.ind:tst:25798801
02:47:00 - Completed test  : oval:mil.disa.stig.ind:tst:25798801 [false]
02:47:00 - Processing test : oval:mil.disa.stig.ind:tst:25798300
02:47:00 - Completed test  : oval:mil.disa.stig.ind:tst:25798300 [false]
02:47:00 - Processing test : oval:mil.disa.stig.ind:tst:25798301
02:47:00 - Completed test  : oval:mil.disa.stig.ind:tst:25798301 [false]
02:47:00 - Processing test : oval:mil.disa.stig.ind:tst:26057501
02:47:00 - Completed test  : oval:mil.disa.stig.ind:tst:26057501 [false]
02:47:00 - Completed rule  : Ubuntu 22.04 LTS must implement smart card logins for multifactor authentication for local and network access to privileged and nonprivileged accounts. [fail]
02:47:01 - Processing rule : (105 of 179) Ubuntu 22.04 LTS must electronically verify personal identity verification (PIV) credentials.
02:47:01 - Processing test : oval:mil.disa.stig.ind:tst:20463300
02:47:01 - Completed test  : oval:mil.disa.stig.ind:tst:20463300 [false]
02:47:01 - Completed rule  : Ubuntu 22.04 LTS must electronically verify personal identity verification (PIV) credentials. [fail]
02:47:01 - Processing rule : (106 of 179) Ubuntu 22.04 LTS, for PKI-based authentication, must validate certificates by constructing a certification path (which includes status information) to an accepted trust anchor.
02:47:01 - Processing test : oval:mil.disa.stig.ind:tst:23822900
02:47:01 - Completed test  : oval:mil.disa.stig.ind:tst:23822900 [false]
02:47:01 - Completed rule  : Ubuntu 22.04 LTS, for PKI-based authentication, must validate certificates by constructing a certification path (which includes status information) to an accepted trust anchor. [fail]
02:47:01 - Processing rule : (107 of 179) Ubuntu 22.04 LTS for PKI-based authentication, must implement a local cache of revocation data in case of the inability to access revocation information via the network.
02:47:01 - Processing test : oval:mil.disa.stig.ind:tst:23823300
02:47:01 - Completed test  : oval:mil.disa.stig.ind:tst:23823300 [false]
02:47:01 - Completed rule  : Ubuntu 22.04 LTS for PKI-based authentication, must implement a local cache of revocation data in case of the inability to access revocation information via the network. [fail]
02:47:01 - Processing rule : (108 of 179) Ubuntu 22.04 LTS must map the authenticated identity to the user or group account for PKI-based authentication.
02:47:01 - Processing test : oval:mil.disa.stig.ind:tst:23820100
02:47:01 - Completed test  : oval:mil.disa.stig.ind:tst:23820100 [false]
02:47:01 - Processing test : oval:mil.disa.stig.ind:tst:23820101
02:47:01 - Completed test  : oval:mil.disa.stig.ind:tst:23820101 [false]
02:47:01 - Completed rule  : Ubuntu 22.04 LTS must map the authenticated identity to the user or group account for PKI-based authentication. [fail]
02:47:01 - Processing rule : (109 of 179) Ubuntu 22.04 LTS must use DOD PKI-established certificate authorities for verification of the establishment of protected sessions.
02:47:01 - Completed rule  : Ubuntu 22.04 LTS must use DOD PKI-established certificate authorities for verification of the establishment of protected sessions. [notchecked]
02:47:01 - Processing rule : (110 of 179) Ubuntu 22.04 LTS must be configured such that Pluggable Authentication Module (PAM) prohibits the use of cached authentications after one day.
02:47:01 - Processing test : oval:mil.disa.stig.ind:tst:23836200
02:47:01 - Search Criteria: path set to /etc/sssd/conf.d with path_operation equals and file_name set to ^.+\.conf$ with filename_operation pattern match
02:47:01 - File scan complete
02:47:01 - Completed test  : oval:mil.disa.stig.ind:tst:23836200 [false]
02:47:01 - Completed rule  : Ubuntu 22.04 LTS must be configured such that Pluggable Authentication Module (PAM) prohibits the use of cached authentications after one day. [fail]
02:47:01 - Processing rule : (111 of 179) Ubuntu 22.04 LTS must use a file integrity tool to verify correct operation of all security functions.
02:47:01 - Processing test : oval:mil.disa.stig.linux:tst:26058200
02:47:01 - Completed test  : oval:mil.disa.stig.linux:tst:26058200 [false]
02:47:01 - Completed rule  : Ubuntu 22.04 LTS must use a file integrity tool to verify correct operation of all security functions. [fail]
02:47:01 - Processing rule : (112 of 179) Ubuntu 22.04 LTS must configure AIDE to perform file integrity checking on the file system.
02:47:01 - Completed rule  : Ubuntu 22.04 LTS must configure AIDE to perform file integrity checking on the file system. [notchecked]
02:47:01 - Processing rule : (113 of 179) Ubuntu 22.04 LTS must notify designated personnel if baseline configurations are changed in an unauthorized manner. The file integrity tool must notify the system administrator when changes to the baseline configuration or anomalies in the operation of any security functions are discovered.
02:47:01 - Processing test : oval:mil.disa.stig.ind:tst:23835800
02:47:01 - Completed test  : oval:mil.disa.stig.ind:tst:23835800 [false]
02:47:01 - Completed rule  : Ubuntu 22.04 LTS must notify designated personnel if baseline configurations are changed in an unauthorized manner. The file integrity tool must notify the system administrator when changes to the baseline configuration or anomalies in the operation of any security functions are discovered. [fail]
02:47:01 - Processing rule : (114 of 179) Ubuntu 22.04 LTS must be configured so that the script that runs each 30 days or less to check file integrity is the default.
02:47:01 - Completed rule  : Ubuntu 22.04 LTS must be configured so that the script that runs each 30 days or less to check file integrity is the default. [notchecked]
02:47:01 - Processing rule : (115 of 179) Ubuntu 22.04 LTS must use cryptographic mechanisms to protect the integrity of audit tools.
02:47:01 - Processing test : oval:mil.disa.stig.ind:tst:23830300
02:47:01 - Completed test  : oval:mil.disa.stig.ind:tst:23830300 [false]
02:47:01 - Processing test : oval:mil.disa.stig.ind:tst:23830301
02:47:01 - Completed test  : oval:mil.disa.stig.ind:tst:23830301 [false]
02:47:01 - Processing test : oval:mil.disa.stig.ind:tst:23830302
02:47:01 - Completed test  : oval:mil.disa.stig.ind:tst:23830302 [false]
02:47:01 - Processing test : oval:mil.disa.stig.ind:tst:23830303
02:47:01 - Completed test  : oval:mil.disa.stig.ind:tst:23830303 [false]
02:47:01 - Processing test : oval:mil.disa.stig.ind:tst:23830304
02:47:01 - Completed test  : oval:mil.disa.stig.ind:tst:23830304 [false]
02:47:01 - Processing test : oval:mil.disa.stig.ind:tst:23830305
02:47:01 - Completed test  : oval:mil.disa.stig.ind:tst:23830305 [false]
02:47:01 - Completed rule  : Ubuntu 22.04 LTS must use cryptographic mechanisms to protect the integrity of audit tools. [fail]
02:47:01 - Processing rule : (116 of 179) Ubuntu 22.04 LTS must have a crontab script running weekly to offload audit events of standalone systems.
02:47:01 - Completed rule  : Ubuntu 22.04 LTS must have a crontab script running weekly to offload audit events of standalone systems. [notchecked]
02:47:01 - Processing rule : (117 of 179) Ubuntu 22.04 LTS must be configured to preserve log records from failure events.
02:47:01 - Completed rule  : Ubuntu 22.04 LTS must be configured to preserve log records from failure events. [pass]
02:47:01 - Processing rule : (118 of 179) Ubuntu 22.04 LTS must monitor remote access methods.
02:47:01 - Processing test : oval:mil.disa.stig.ind:tst:23022800
02:47:01 - Search Criteria: path set to /etc/rsyslog.d with path_operation equals and file_name set to ^.*\.conf$ with filename_operation pattern match
02:47:01 - File scan complete
02:47:01 - Completed test  : oval:mil.disa.stig.ind:tst:23022800 [false]
02:47:01 - Processing test : oval:mil.disa.stig.ind:tst:23022801
02:47:01 - Completed test  : oval:mil.disa.stig.ind:tst:23022801 [false]
02:47:01 - Processing test : oval:mil.disa.stig.ind:tst:23022802
02:47:01 - Completed test  : oval:mil.disa.stig.ind:tst:23022802 [false]
02:47:01 - Completed rule  : Ubuntu 22.04 LTS must monitor remote access methods. [fail]
02:47:01 - Processing rule : (119 of 179) Ubuntu 22.04 LTS must have the "auditd" package installed.
02:47:01 - Processing test : oval:mil.disa.stig.linux:tst:26059000
02:47:01 - Completed test  : oval:mil.disa.stig.linux:tst:26059000 [false]
02:47:01 - Completed rule  : Ubuntu 22.04 LTS must have the "auditd" package installed. [fail]
02:47:01 - Processing rule : (120 of 179) Ubuntu 22.04 LTS must produce audit records and reports containing information to establish when, where, what type, the source, and the outcome for all DOD-defined auditable events and actions in near real time.
02:47:01 - Processing test : oval:mil.disa.stig.linux:tst:25815200
02:47:09 - Created a total of 836 items so far.
02:47:09 - Completed test  : oval:mil.disa.stig.linux:tst:25815200 [false]
02:47:09 - Processing test : oval:mil.disa.stig.linux:tst:25815201
02:47:16 - Created a total of 837 items so far.
02:47:16 - Completed test  : oval:mil.disa.stig.linux:tst:25815201 [false]
02:47:16 - Completed rule  : Ubuntu 22.04 LTS must produce audit records and reports containing information to establish when, where, what type, the source, and the outcome for all DOD-defined auditable events and actions in near real time. [fail]
02:47:16 - Processing rule : (121 of 179) Ubuntu 22.04 LTS audit event multiplexor must be configured to offload audit logs onto a different system from the system being audited.
02:47:16 - Completed rule  : Ubuntu 22.04 LTS audit event multiplexor must be configured to offload audit logs onto a different system from the system being audited. [notchecked]
02:47:16 - Processing rule : (122 of 179) Ubuntu 22.04 LTS must alert the information system security officer (ISSO) and system administrator (SA) in the event of an audit processing failure.
02:47:16 - Completed rule  : Ubuntu 22.04 LTS must alert the information system security officer (ISSO) and system administrator (SA) in the event of an audit processing failure. [notchecked]
02:47:16 - Processing rule : (123 of 179) Ubuntu 22.04 LTS must shut down by default upon audit failure.
02:47:16 - Processing test : oval:mil.disa.stig.ind:tst:23039200
02:47:16 - Completed test  : oval:mil.disa.stig.ind:tst:23039200 [false]
02:47:16 - Completed rule  : Ubuntu 22.04 LTS must shut down by default upon audit failure. [fail]
02:47:16 - Processing rule : (124 of 179) Ubuntu 22.04 LTS must allocate audit record storage capacity to store at least one weeks' worth of audit records, when audit records are not immediately sent to a central audit record storage facility.
02:47:16 - Completed rule  : Ubuntu 22.04 LTS must allocate audit record storage capacity to store at least one weeks' worth of audit records, when audit records are not immediately sent to a central audit record storage facility. [notchecked]
02:47:16 - Processing rule : (125 of 179) Ubuntu 22.04 LTS must immediately notify the system administrator (SA) and information system security officer (ISSO) when the audit record storage volume reaches 25 percent remaining of the allocated capacity.
02:47:16 - Processing test : oval:mil.disa.stig.ind:tst:26059600
02:47:16 - Completed test  : oval:mil.disa.stig.ind:tst:26059600 [false]
02:47:16 - Processing test : oval:mil.disa.stig.ind:tst:24454300
02:47:16 - Completed test  : oval:mil.disa.stig.ind:tst:24454300 [false]
02:47:16 - Completed rule  : Ubuntu 22.04 LTS must immediately notify the system administrator (SA) and information system security officer (ISSO) when the audit record storage volume reaches 25 percent remaining of the allocated capacity. [fail]
02:47:16 - Processing rule : (126 of 179) Ubuntu 22.04 LTS must be configured so that audit log files are not read- or write-accessible by unauthorized users.
02:47:16 - Processing test : oval:mil.disa.stig.unix:tst:23039600
02:47:16 - Completed test  : oval:mil.disa.stig.unix:tst:23039600 [false]
02:47:16 - Completed rule  : Ubuntu 22.04 LTS must be configured so that audit log files are not read- or write-accessible by unauthorized users. [fail]
02:47:16 - Processing rule : (127 of 179) Ubuntu 22.04 LTS must be configured to permit only authorized users ownership of the audit log files.
02:47:16 - Processing test : oval:mil.disa.stig.unix:tst:23039700
02:47:17 - Completed test  : oval:mil.disa.stig.unix:tst:23039700 [false]
02:47:17 - Completed rule  : Ubuntu 22.04 LTS must be configured to permit only authorized users ownership of the audit log files. [fail]
02:47:17 - Processing rule : (128 of 179) Ubuntu 22.04 LTS must permit only authorized groups ownership of the audit log files.
02:47:17 - Processing test : oval:mil.disa.stig.ind:tst:26059900
02:47:17 - Completed test  : oval:mil.disa.stig.ind:tst:26059900 [false]
02:47:17 - Completed rule  : Ubuntu 22.04 LTS must permit only authorized groups ownership of the audit log files. [fail]
02:47:17 - Processing rule : (129 of 179) Ubuntu 22.04 LTS must be configured so that the audit log directory is not write-accessible by unauthorized users.
02:47:17 - Processing test : oval:mil.disa.stig.unix:tst:26060000
02:47:17 - Completed test  : oval:mil.disa.stig.unix:tst:26060000 [false]
02:47:17 - Completed rule  : Ubuntu 22.04 LTS must be configured so that the audit log directory is not write-accessible by unauthorized users. [fail]
02:47:17 - Processing rule : (130 of 179) Ubuntu 22.04 LTS must be configured so that audit configuration files are not write-accessible by unauthorized users.
02:47:17 - Processing test : oval:mil.disa.stig.unix:tst:23824900
02:47:17 - Completed test  : oval:mil.disa.stig.unix:tst:23824900 [false]
02:47:17 - Processing test : oval:mil.disa.stig.unix:tst:23824901
02:47:17 - Search Criteria: path set to /etc/audit/rules.d with path_operation equals and file_name set to .rules$ with filename_operation pattern match
02:47:17 - File scan complete
02:47:17 - Completed test  : oval:mil.disa.stig.unix:tst:23824901 [false]
02:47:17 - Processing test : oval:mil.disa.stig.unix:tst:23824902
02:47:17 - Completed test  : oval:mil.disa.stig.unix:tst:23824902 [false]
02:47:17 - Completed rule  : Ubuntu 22.04 LTS must be configured so that audit configuration files are not write-accessible by unauthorized users. [fail]
02:47:17 - Processing rule : (131 of 179) Ubuntu 22.04 LTS must permit only authorized accounts to own the audit configuration files.
02:47:17 - Processing test : oval:mil.disa.stig.unix:tst:23825000
02:47:17 - Completed test  : oval:mil.disa.stig.unix:tst:23825000 [false]
02:47:17 - Processing test : oval:mil.disa.stig.unix:tst:23825001
02:47:17 - Completed test  : oval:mil.disa.stig.unix:tst:23825001 [false]
02:47:17 - Processing test : oval:mil.disa.stig.unix:tst:23825002
02:47:17 - Completed test  : oval:mil.disa.stig.unix:tst:23825002 [false]
02:47:17 - Completed rule  : Ubuntu 22.04 LTS must permit only authorized accounts to own the audit configuration files. [fail]
02:47:17 - Processing rule : (132 of 179) Ubuntu 22.04 LTS must permit only authorized groups to own the audit configuration files.
02:47:17 - Processing test : oval:mil.disa.stig.unix:tst:23825100
02:47:17 - Completed test  : oval:mil.disa.stig.unix:tst:23825100 [false]
02:47:17 - Processing test : oval:mil.disa.stig.unix:tst:23825101
02:47:17 - Completed test  : oval:mil.disa.stig.unix:tst:23825101 [false]
02:47:17 - Processing test : oval:mil.disa.stig.unix:tst:23825102
02:47:17 - Completed test  : oval:mil.disa.stig.unix:tst:23825102 [false]
02:47:17 - Completed rule  : Ubuntu 22.04 LTS must permit only authorized groups to own the audit configuration files. [fail]
02:47:17 - Processing rule : (133 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the apparmor_parser command.
02:47:17 - Processing test : oval:mil.disa.stig.ind:tst:23828200
02:47:17 - Completed test  : oval:mil.disa.stig.ind:tst:23828200 [false]
02:47:17 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the apparmor_parser command. [fail]
02:47:17 - Processing rule : (134 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the chacl command.
02:47:17 - Processing test : oval:mil.disa.stig.ind:tst:26060500
02:47:17 - Completed test  : oval:mil.disa.stig.ind:tst:26060500 [false]
02:47:17 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the chacl command. [fail]
02:47:17 - Processing rule : (135 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the chage command.
02:47:17 - Processing test : oval:mil.disa.stig.ind:tst:26060600
02:47:17 - Completed test  : oval:mil.disa.stig.ind:tst:26060600 [false]
02:47:17 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the chage command. [fail]
02:47:17 - Processing rule : (136 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the chcon command.
02:47:17 - Processing test : oval:mil.disa.stig.ind:tst:26060700
02:47:17 - Completed test  : oval:mil.disa.stig.ind:tst:26060700 [false]
02:47:17 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the chcon command. [fail]
02:47:17 - Processing rule : (137 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the chfn command.
02:47:17 - Processing test : oval:mil.disa.stig.ind:tst:26060800
02:47:17 - Completed test  : oval:mil.disa.stig.ind:tst:26060800 [false]
02:47:17 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the chfn command. [fail]
02:47:17 - Processing rule : (138 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the chsh command.
02:47:17 - Processing test : oval:mil.disa.stig.ind:tst:23044800
02:47:17 - Completed test  : oval:mil.disa.stig.ind:tst:23044800 [false]
02:47:17 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the chsh command. [fail]
02:47:17 - Processing rule : (139 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the crontab command.
02:47:17 - Processing test : oval:mil.disa.stig.ind:tst:26061000
02:47:17 - Completed test  : oval:mil.disa.stig.ind:tst:26061000 [false]
02:47:17 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the crontab command. [fail]
02:47:17 - Processing rule : (140 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful attempts to use the fdisk command.
02:47:17 - Processing test : oval:mil.disa.stig.ind:tst:26061100
02:47:17 - Completed test  : oval:mil.disa.stig.ind:tst:26061100 [false]
02:47:17 - Processing test : oval:mil.disa.stig.ind:tst:26061101
02:47:17 - Completed test  : oval:mil.disa.stig.ind:tst:26061101 [false]
02:47:17 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful attempts to use the fdisk command. [fail]
02:47:17 - Processing rule : (141 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the gpasswd command.
02:47:17 - Processing test : oval:mil.disa.stig.ind:tst:26061200
02:47:17 - Completed test  : oval:mil.disa.stig.ind:tst:26061200 [false]
02:47:17 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the gpasswd command. [fail]
02:47:17 - Processing rule : (142 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful attempts to use the kmod command.
02:47:17 - Processing test : oval:mil.disa.stig.ind:tst:26061300
02:47:17 - Completed test  : oval:mil.disa.stig.ind:tst:26061300 [false]
02:47:17 - Processing test : oval:mil.disa.stig.ind:tst:26061301
02:47:17 - Completed test  : oval:mil.disa.stig.ind:tst:26061301 [false]
02:47:17 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful attempts to use the kmod command. [fail]
02:47:17 - Processing rule : (143 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful attempts to use modprobe command.
02:47:17 - Processing test : oval:mil.disa.stig.ind:tst:23831800
02:47:17 - Completed test  : oval:mil.disa.stig.ind:tst:23831800 [false]
02:47:17 - Processing test : oval:mil.disa.stig.ind:tst:23831801
02:47:17 - Completed test  : oval:mil.disa.stig.ind:tst:23831801 [false]
02:47:17 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful attempts to use modprobe command. [fail]
02:47:17 - Processing rule : (144 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the mount command.
02:47:17 - Processing test : oval:mil.disa.stig.ind:tst:26061500
02:47:17 - Completed test  : oval:mil.disa.stig.ind:tst:26061500 [false]
02:47:17 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the mount command. [fail]
02:47:17 - Processing rule : (145 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the newgrp command.
02:47:17 - Processing test : oval:mil.disa.stig.ind:tst:26061600
02:47:17 - Completed test  : oval:mil.disa.stig.ind:tst:26061600 [false]
02:47:17 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the newgrp command. [fail]
02:47:17 - Processing rule : (146 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the pam_timestamp_check command.
02:47:17 - Processing test : oval:mil.disa.stig.ind:tst:26061700
02:47:18 - Completed test  : oval:mil.disa.stig.ind:tst:26061700 [false]
02:47:18 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the pam_timestamp_check command. [fail]
02:47:18 - Processing rule : (147 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the passwd command.
02:47:18 - Processing test : oval:mil.disa.stig.ind:tst:26061800
02:47:18 - Completed test  : oval:mil.disa.stig.ind:tst:26061800 [false]
02:47:18 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the passwd command. [fail]
02:47:18 - Processing rule : (148 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the setfacl command.
02:47:18 - Processing test : oval:mil.disa.stig.ind:tst:23043500
02:47:18 - Completed test  : oval:mil.disa.stig.ind:tst:23043500 [false]
02:47:18 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the setfacl command. [fail]
02:47:18 - Processing rule : (149 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the ssh-agent command.
02:47:18 - Processing test : oval:mil.disa.stig.ind:tst:26062000
02:47:18 - Completed test  : oval:mil.disa.stig.ind:tst:26062000 [false]
02:47:18 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the ssh-agent command. [fail]
02:47:18 - Processing rule : (150 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the ssh-keysign command.
02:47:18 - Processing test : oval:mil.disa.stig.ind:tst:23825700
02:47:18 - Completed test  : oval:mil.disa.stig.ind:tst:23825700 [false]
02:47:18 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the ssh-keysign command. [fail]
02:47:18 - Processing rule : (151 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the su command.
02:47:18 - Processing test : oval:mil.disa.stig.ind:tst:26062200
02:47:18 - Completed test  : oval:mil.disa.stig.ind:tst:26062200 [false]
02:47:18 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the su command. [fail]
02:47:18 - Processing rule : (152 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the sudo command.
02:47:18 - Processing test : oval:mil.disa.stig.ind:tst:26062300
02:47:18 - Completed test  : oval:mil.disa.stig.ind:tst:26062300 [false]
02:47:18 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the sudo command. [fail]
02:47:18 - Processing rule : (153 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the sudoedit command.
02:47:18 - Processing test : oval:mil.disa.stig.ind:tst:23827800
02:47:18 - Completed test  : oval:mil.disa.stig.ind:tst:23827800 [false]
02:47:18 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the sudoedit command. [fail]
02:47:18 - Processing rule : (154 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the umount command.
02:47:18 - Processing test : oval:mil.disa.stig.ind:tst:26062500
02:47:18 - Completed test  : oval:mil.disa.stig.ind:tst:26062500 [false]
02:47:18 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the umount command. [fail]
02:47:18 - Processing rule : (155 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the unix_update command.
02:47:18 - Processing test : oval:mil.disa.stig.ind:tst:26062600
02:47:18 - Completed test  : oval:mil.disa.stig.ind:tst:26062600 [false]
02:47:18 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the unix_update command. [fail]
02:47:18 - Processing rule : (156 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the usermod command.
02:47:18 - Processing test : oval:mil.disa.stig.ind:tst:26062700
02:47:18 - Completed test  : oval:mil.disa.stig.ind:tst:26062700 [false]
02:47:18 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the usermod command. [fail]
02:47:18 - Processing rule : (157 of 179) Ubuntu 22.04 LTS must generate audit records for all account creations, modifications, disabling, and termination events that affect /etc/group.
02:47:18 - Processing test : oval:mil.disa.stig.ind:tst:26062800
02:47:18 - Completed test  : oval:mil.disa.stig.ind:tst:26062800 [false]
02:47:18 - Processing test : oval:mil.disa.stig.ind:tst:26062801
02:47:18 - Completed test  : oval:mil.disa.stig.ind:tst:26062801 [false]
02:47:18 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for all account creations, modifications, disabling, and termination events that affect /etc/group. [fail]
02:47:18 - Processing rule : (158 of 179) Ubuntu 22.04 LTS must generate audit records for all account creations, modifications, disabling, and termination events that affect /etc/gshadow.
02:47:18 - Processing test : oval:mil.disa.stig.ind:tst:23040700
02:47:18 - Completed test  : oval:mil.disa.stig.ind:tst:23040700 [false]
02:47:18 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for all account creations, modifications, disabling, and termination events that affect /etc/gshadow. [fail]
02:47:18 - Processing rule : (159 of 179) Ubuntu 22.04 LTS must generate audit records for all account creations, modifications, disabling, and termination events that affect /etc/opasswd.
02:47:18 - Processing test : oval:mil.disa.stig.ind:tst:23040500
02:47:18 - Completed test  : oval:mil.disa.stig.ind:tst:23040500 [false]
02:47:18 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for all account creations, modifications, disabling, and termination events that affect /etc/opasswd. [fail]
02:47:18 - Processing rule : (160 of 179) Ubuntu 22.04 LTS must generate audit records for all account creations, modifications, disabling, and termination events that affect /etc/passwd.
02:47:18 - Processing test : oval:mil.disa.stig.ind:tst:26063100
02:47:18 - Completed test  : oval:mil.disa.stig.ind:tst:26063100 [false]
02:47:18 - Processing test : oval:mil.disa.stig.ind:tst:26063101
02:47:18 - Completed test  : oval:mil.disa.stig.ind:tst:26063101 [false]
02:47:18 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for all account creations, modifications, disabling, and termination events that affect /etc/passwd. [fail]
02:47:18 - Processing rule : (161 of 179) Ubuntu 22.04 LTS must generate audit records for all account creations, modifications, disabling, and termination events that affect /etc/shadow.
02:47:18 - Processing test : oval:mil.disa.stig.ind:tst:26063200
02:47:18 - Completed test  : oval:mil.disa.stig.ind:tst:26063200 [false]
02:47:18 - Processing test : oval:mil.disa.stig.ind:tst:26063201
02:47:18 - Completed test  : oval:mil.disa.stig.ind:tst:26063201 [false]
02:47:18 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for all account creations, modifications, disabling, and termination events that affect /etc/shadow. [fail]
02:47:18 - Processing rule : (162 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the chmod, fchmod, and fchmodat system calls.
02:47:18 - Processing test : oval:mil.disa.stig.ind:tst:23045600
02:47:18 - Completed test  : oval:mil.disa.stig.ind:tst:23045600 [false]
02:47:18 - Processing test : oval:mil.disa.stig.ind:tst:23045601
02:47:18 - Completed test  : oval:mil.disa.stig.ind:tst:23045601 [false]
02:47:18 - Processing test : oval:mil.disa.stig.ind:tst:23045602
02:47:18 - Completed test  : oval:mil.disa.stig.ind:tst:23045602 [false]
02:47:18 - Processing test : oval:mil.disa.stig.ind:tst:23045603
02:47:18 - Completed test  : oval:mil.disa.stig.ind:tst:23045603 [false]
02:47:18 - Processing test : oval:mil.disa.stig.ind:tst:23045604
02:47:18 - Completed test  : oval:mil.disa.stig.ind:tst:23045604 [false]
02:47:18 - Processing test : oval:mil.disa.stig.ind:tst:23045605
02:47:18 - Completed test  : oval:mil.disa.stig.ind:tst:23045605 [false]
02:47:18 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the chmod, fchmod, and fchmodat system calls. [fail]
02:47:18 - Processing rule : (163 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the chown, fchown, fchownat, and lchown system calls.
02:47:18 - Processing test : oval:mil.disa.stig.ind:tst:23045500
02:47:18 - Completed test  : oval:mil.disa.stig.ind:tst:23045500 [false]
02:47:18 - Processing test : oval:mil.disa.stig.ind:tst:23045501
02:47:18 - Completed test  : oval:mil.disa.stig.ind:tst:23045501 [false]
02:47:18 - Processing test : oval:mil.disa.stig.ind:tst:23045502
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23045502 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23045503
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23045503 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23045504
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23045504 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23045505
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23045505 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23045506
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23045506 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23045507
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23045507 [false]
02:47:19 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the chown, fchown, fchownat, and lchown system calls. [fail]
02:47:19 - Processing rule : (164 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the creat, open, openat, open_by_handle_at, truncate, and ftruncate system calls.
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23044900
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23044900 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23044901
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23044901 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23044902
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23044902 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23044903
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23044903 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23044904
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23044904 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23044905
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23044905 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23044906
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23044906 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23044907
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23044907 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23044908
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23044908 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23044909
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23044909 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23044910
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23044910 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23044911
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23044911 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23044912
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23044912 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23044913
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23044913 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23044914
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23044914 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23044915
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23044915 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23044916
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23044916 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23044917
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23044917 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23044918
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23044918 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23044919
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23044919 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23044920
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23044920 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23044921
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23044921 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23044922
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23044922 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23044923
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23044923 [false]
02:47:19 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the creat, open, openat, open_by_handle_at, truncate, and ftruncate system calls. [fail]
02:47:19 - Processing rule : (165 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the delete_module system call.
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23044600
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23044600 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23044601
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23044601 [false]
02:47:19 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the delete_module system call. [fail]
02:47:19 - Processing rule : (166 of 179) Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the init_module and finit_module system calls.
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23043800
02:47:19 - Completed test  : oval:mil.disa.stig.ind:tst:23043800 [false]
02:47:19 - Processing test : oval:mil.disa.stig.ind:tst:23043801
02:47:20 - Completed test  : oval:mil.disa.stig.ind:tst:23043801 [false]
02:47:20 - Processing test : oval:mil.disa.stig.ind:tst:23043802
02:47:20 - Completed test  : oval:mil.disa.stig.ind:tst:23043802 [false]
02:47:20 - Processing test : oval:mil.disa.stig.ind:tst:23043803
02:47:20 - Completed test  : oval:mil.disa.stig.ind:tst:23043803 [false]
02:47:20 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for successful/unsuccessful uses of the init_module and finit_module system calls. [fail]
02:47:20 - Processing rule : (167 of 179) Ubuntu 22.04 LTS must generate audit records for any use of the setxattr, fsetxattr, lsetxattr, removexattr, fremovexattr, and lremovexattr system calls.
02:47:20 - Processing test : oval:mil.disa.stig.ind:tst:23041300
02:47:20 - Completed test  : oval:mil.disa.stig.ind:tst:23041300 [false]
02:47:20 - Processing test : oval:mil.disa.stig.ind:tst:23041301
02:47:20 - Completed test  : oval:mil.disa.stig.ind:tst:23041301 [false]
02:47:20 - Processing test : oval:mil.disa.stig.ind:tst:23041302
02:47:20 - Completed test  : oval:mil.disa.stig.ind:tst:23041302 [false]
02:47:20 - Processing test : oval:mil.disa.stig.ind:tst:23041303
02:47:20 - Completed test  : oval:mil.disa.stig.ind:tst:23041303 [false]
02:47:20 - Processing test : oval:mil.disa.stig.ind:tst:25303400
02:47:20 - Completed test  : oval:mil.disa.stig.ind:tst:25303400 [false]
02:47:20 - Processing test : oval:mil.disa.stig.ind:tst:25303401
02:47:20 - Completed test  : oval:mil.disa.stig.ind:tst:25303401 [false]
02:47:20 - Processing test : oval:mil.disa.stig.ind:tst:25303402
02:47:20 - Completed test  : oval:mil.disa.stig.ind:tst:25303402 [false]
02:47:20 - Processing test : oval:mil.disa.stig.ind:tst:25303403
02:47:20 - Completed test  : oval:mil.disa.stig.ind:tst:25303403 [false]
02:47:20 - Processing test : oval:mil.disa.stig.ind:tst:25303500
02:47:20 - Completed test  : oval:mil.disa.stig.ind:tst:25303500 [false]
02:47:20 - Processing test : oval:mil.disa.stig.ind:tst:25303501
02:47:20 - Completed test  : oval:mil.disa.stig.ind:tst:25303501 [false]
02:47:20 - Processing test : oval:mil.disa.stig.ind:tst:25303502
02:47:20 - Completed test  : oval:mil.disa.stig.ind:tst:25303502 [false]
02:47:20 - Processing test : oval:mil.disa.stig.ind:tst:25303503
02:47:20 - Completed test  : oval:mil.disa.stig.ind:tst:25303503 [false]
02:47:20 - Processing test : oval:mil.disa.stig.ind:tst:25303600
02:47:20 - Completed test  : oval:mil.disa.stig.ind:tst:25303600 [false]
02:47:20 - Processing test : oval:mil.disa.stig.ind:tst:25303601
02:47:20 - Completed test  : oval:mil.disa.stig.ind:tst:25303601 [false]
02:47:20 - Processing test : oval:mil.disa.stig.ind:tst:25303602
02:47:20 - Completed test  : oval:mil.disa.stig.ind:tst:25303602 [false]
02:47:20 - Processing test : oval:mil.disa.stig.ind:tst:25303603
02:47:20 - Completed test  : oval:mil.disa.stig.ind:tst:25303603 [false]
02:47:20 - Processing test : oval:mil.disa.stig.ind:tst:25303700
02:47:20 - Completed test  : oval:mil.disa.stig.ind:tst:25303700 [false]
02:47:20 - Processing test : oval:mil.disa.stig.ind:tst:25303701
02:47:20 - Completed test  : oval:mil.disa.stig.ind:tst:25303701 [false]
02:47:20 - Processing test : oval:mil.disa.stig.ind:tst:25303702
02:47:20 - Completed test  : oval:mil.disa.stig.ind:tst:25303702 [false]
02:47:20 - Processing test : oval:mil.disa.stig.ind:tst:25303703
02:47:20 - Completed test  : oval:mil.disa.stig.ind:tst:25303703 [false]
02:47:20 - Processing test : oval:mil.disa.stig.ind:tst:25303800
02:47:20 - Completed test  : oval:mil.disa.stig.ind:tst:25303800 [false]
02:47:20 - Processing test : oval:mil.disa.stig.ind:tst:25303801
02:47:20 - Completed test  : oval:mil.disa.stig.ind:tst:25303801 [false]
02:47:20 - Processing test : oval:mil.disa.stig.ind:tst:25303802
02:47:20 - Completed test  : oval:mil.disa.stig.ind:tst:25303802 [false]
02:47:20 - Processing test : oval:mil.disa.stig.ind:tst:25303803
02:47:21 - Completed test  : oval:mil.disa.stig.ind:tst:25303803 [false]
02:47:21 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for any use of the setxattr, fsetxattr, lsetxattr, removexattr, fremovexattr, and lremovexattr system calls. [fail]
02:47:21 - Processing rule : (168 of 179) Ubuntu 22.04 LTS must generate audit records for any successful/unsuccessful use of unlink, unlinkat, rename, renameat, and rmdir system calls.
02:47:21 - Processing test : oval:mil.disa.stig.ind:tst:25299700
02:47:21 - Completed test  : oval:mil.disa.stig.ind:tst:25299700 [false]
02:47:21 - Processing test : oval:mil.disa.stig.ind:tst:25299701
02:47:21 - Completed test  : oval:mil.disa.stig.ind:tst:25299701 [false]
02:47:21 - Processing test : oval:mil.disa.stig.ind:tst:25299800
02:47:21 - Completed test  : oval:mil.disa.stig.ind:tst:25299800 [false]
02:47:21 - Processing test : oval:mil.disa.stig.ind:tst:25299801
02:47:21 - Completed test  : oval:mil.disa.stig.ind:tst:25299801 [false]
02:47:21 - Processing test : oval:mil.disa.stig.ind:tst:25299900
02:47:21 - Completed test  : oval:mil.disa.stig.ind:tst:25299900 [false]
02:47:21 - Processing test : oval:mil.disa.stig.ind:tst:25299901
02:47:21 - Completed test  : oval:mil.disa.stig.ind:tst:25299901 [false]
02:47:21 - Processing test : oval:mil.disa.stig.ind:tst:25300000
02:47:21 - Completed test  : oval:mil.disa.stig.ind:tst:25300000 [false]
02:47:21 - Processing test : oval:mil.disa.stig.ind:tst:25300001
02:47:21 - Completed test  : oval:mil.disa.stig.ind:tst:25300001 [false]
02:47:21 - Processing test : oval:mil.disa.stig.ind:tst:25300100
02:47:21 - Completed test  : oval:mil.disa.stig.ind:tst:25300100 [false]
02:47:21 - Processing test : oval:mil.disa.stig.ind:tst:25300101
02:47:21 - Completed test  : oval:mil.disa.stig.ind:tst:25300101 [false]
02:47:21 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for any successful/unsuccessful use of unlink, unlinkat, rename, renameat, and rmdir system calls. [fail]
02:47:21 - Processing rule : (169 of 179) Ubuntu 22.04 LTS must generate audit records for all events that affect the systemd journal files.
02:47:21 - Processing test : oval:mil.disa.stig.ind:tst:26064000
02:47:21 - Completed test  : oval:mil.disa.stig.ind:tst:26064000 [false]
02:47:21 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for all events that affect the systemd journal files. [fail]
02:47:21 - Processing rule : (170 of 179) Ubuntu 22.04 LTS must generate audit records for the /var/log/btmp file.
02:47:21 - Processing test : oval:mil.disa.stig.ind:tst:23831700
02:47:21 - Completed test  : oval:mil.disa.stig.ind:tst:23831700 [false]
02:47:21 - Processing test : oval:mil.disa.stig.ind:tst:23831701
02:47:21 - Completed test  : oval:mil.disa.stig.ind:tst:23831701 [false]
02:47:21 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for the /var/log/btmp file. [fail]
02:47:21 - Processing rule : (171 of 179) Ubuntu 22.04 LTS must generate audit records for the /var/log/wtmp file.
02:47:21 - Processing test : oval:mil.disa.stig.ind:tst:23831500
02:47:21 - Completed test  : oval:mil.disa.stig.ind:tst:23831500 [false]
02:47:21 - Processing test : oval:mil.disa.stig.ind:tst:23831501
02:47:21 - Completed test  : oval:mil.disa.stig.ind:tst:23831501 [false]
02:47:21 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for the /var/log/wtmp file. [fail]
02:47:21 - Processing rule : (172 of 179) Ubuntu 22.04 LTS must generate audit records for the /var/run/utmp file.
02:47:21 - Processing test : oval:mil.disa.stig.ind:tst:23831600
02:47:21 - Completed test  : oval:mil.disa.stig.ind:tst:23831600 [false]
02:47:21 - Processing test : oval:mil.disa.stig.ind:tst:23831601
02:47:21 - Completed test  : oval:mil.disa.stig.ind:tst:23831601 [false]
02:47:21 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for the /var/run/utmp file. [fail]
02:47:21 - Processing rule : (173 of 179) Ubuntu 22.04 LTS must generate audit records for the use and modification of faillog file.
02:47:21 - Processing test : oval:mil.disa.stig.ind:tst:23828600
02:47:21 - Completed test  : oval:mil.disa.stig.ind:tst:23828600 [false]
02:47:21 - Processing test : oval:mil.disa.stig.ind:tst:23828601
02:47:21 - Completed test  : oval:mil.disa.stig.ind:tst:23828601 [false]
02:47:21 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for the use and modification of faillog file. [fail]
02:47:21 - Processing rule : (174 of 179) Ubuntu 22.04 LTS must generate audit records for the use and modification of the lastlog file.
02:47:21 - Processing test : oval:mil.disa.stig.ind:tst:23046700
02:47:21 - Completed test  : oval:mil.disa.stig.ind:tst:23046700 [false]
02:47:21 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for the use and modification of the lastlog file. [fail]
02:47:21 - Processing rule : (175 of 179) Ubuntu 22.04 LTS must generate audit records when successful/unsuccessful attempts to modify the /etc/sudoers file occur.
02:47:21 - Processing test : oval:mil.disa.stig.ind:tst:23040900
02:47:21 - Completed test  : oval:mil.disa.stig.ind:tst:23040900 [false]
02:47:21 - Completed rule  : Ubuntu 22.04 LTS must generate audit records when successful/unsuccessful attempts to modify the /etc/sudoers file occur. [fail]
02:47:21 - Processing rule : (176 of 179) Ubuntu 22.04 LTS must generate audit records when successful/unsuccessful attempts to modify the /etc/sudoers.d directory occur.
02:47:21 - Processing test : oval:mil.disa.stig.ind:tst:23041000
02:47:21 - Completed test  : oval:mil.disa.stig.ind:tst:23041000 [false]
02:47:21 - Completed rule  : Ubuntu 22.04 LTS must generate audit records when successful/unsuccessful attempts to modify the /etc/sudoers.d directory occur. [fail]
02:47:21 - Processing rule : (177 of 179) Ubuntu 22.04 LTS must prevent all software from executing at higher privilege levels than users executing the software and the audit system must be configured to audit the execution of privileged functions.
02:47:21 - Processing test : oval:mil.disa.stig.ind:tst:23038600
02:47:21 - Completed test  : oval:mil.disa.stig.ind:tst:23038600 [false]
02:47:21 - Processing test : oval:mil.disa.stig.ind:tst:23038601
02:47:21 - Completed test  : oval:mil.disa.stig.ind:tst:23038601 [false]
02:47:21 - Processing test : oval:mil.disa.stig.ind:tst:23038602
02:47:21 - Completed test  : oval:mil.disa.stig.ind:tst:23038602 [false]
02:47:21 - Processing test : oval:mil.disa.stig.ind:tst:23038603
02:47:22 - Completed test  : oval:mil.disa.stig.ind:tst:23038603 [false]
02:47:22 - Completed rule  : Ubuntu 22.04 LTS must prevent all software from executing at higher privilege levels than users executing the software and the audit system must be configured to audit the execution of privileged functions. [fail]
02:47:22 - Processing rule : (178 of 179) Ubuntu 22.04 LTS must generate audit records for privileged activities, nonlocal maintenance, diagnostic sessions and other system-level access.
02:47:22 - Processing test : oval:mil.disa.stig.ind:tst:23830900
02:47:22 - Completed test  : oval:mil.disa.stig.ind:tst:23830900 [false]
02:47:22 - Completed rule  : Ubuntu 22.04 LTS must generate audit records for privileged activities, nonlocal maintenance, diagnostic sessions and other system-level access. [fail]
02:47:22 - Processing rule : (179 of 179) Ubuntu 22.04 LTS must implement NIST FIPS-validated cryptography to protect classified information and for the following: To provision digital signatures, to generate cryptographic hashes, and to protect unclassified information requiring confidentiality and cryptographic protection in accordance with applicable federal laws, Executive Orders, directives, policies, regulations, and standards.
02:47:22 - Processing test : oval:mil.disa.stig.ind:tst:23022300
02:47:22 - Completed test  : oval:mil.disa.stig.ind:tst:23022300 [false]
02:47:22 - Completed rule  : Ubuntu 22.04 LTS must implement NIST FIPS-validated cryptography to protect classified information and for the following: To provision digital signatures, to generate cryptographic hashes, and to protect unclassified information requiring confidentiality and cryptographic protection in accordance with applicable federal laws, Executive Orders, directives, policies, regulations, and standards. [fail]
02:47:22 - SCC processed 179 of 179 rules (0 were disabled.)
02:47:22 - Calculating scores
02:47:22 - Adding Detailed OVAL/OCIL Findings as XCCDF result messages
02:47:22 - Saved results from 50 of 179 XCCDF rules
02:47:22 - Saved results from 100 of 179 XCCDF rules
02:47:22 - Saved results from 150 of 179 XCCDF rules
02:47:23 - Saving OVAL Results XML file/root/SCC/Sessions/2025-05-08_024324/Results/SCAP/XML/UBUNTU_SCC-5.10.2_2025-05-08_024324_OVAL-Results_CAN_Ubuntu_22-04_LTS_STIG-2.1.1.xml
02:47:25 - Saving OVAL Variables XML file/root/SCC/Sessions/2025-05-08_024324/Results/SCAP/XML/UBUNTU_SCC-5.10.2_2025-05-08_024324_OVAL-Variables_CAN_Ubuntu_22-04_LTS_STIG-2.1.1.xml
02:47:25 - Saving OCIL Results XML file/root/SCC/Sessions/2025-05-08_024324/Results/SCAP/XML/UBUNTU_SCC-5.10.2_2025-05-08_024324_OCIL-Results_CAN_Ubuntu_22-04_LTS_STIG-2.1.1.xml
02:47:25 - Saving XCCDF Results XML file/root/SCC/Sessions/2025-05-08_024324/Results/SCAP/XML/UBUNTU_SCC-5.10.2_2025-05-08_024324_XCCDF-Results_CAN_Ubuntu_22-04_LTS_STIG-2.1.1.xml
02:47:26 - Generating DISA Checklist (CKL) file from XCCDF Results: /root/SCC/Sessions/2025-05-08_024324/Results/SCAP/XML/UBUNTU_SCC-5.10.2_2025-05-08_024324_XCCDF-Results_CAN_Ubuntu_22-04_LTS_STIG-2.1.1.xml
02:47:26 - XML schema validation successful for: /root/SCC/Sessions/2025-05-08_024324/Results/SCAP/Checklists/UBUNTU_SCC-5.10.2_2025-05-08_024324_Checklist_CAN_Ubuntu_22-04_LTS_STIG-2.1.1.ckl.
02:47:26 - Generating report /root/SCC/Sessions/2025-05-08_024324/Results/SCAP/UBUNTU_SCC-5.10.2_2025-05-08_024324_All-Settings_CAN_Ubuntu_22-04_LTS_STIG-2.1.1.html
02:47:27 - Saved results from 50 of 179 XCCDF rules
02:47:27 - Saved results from 100 of 179 XCCDF rules
02:47:28 - Saved results from 150 of 179 XCCDF rules
02:47:29 - Generating report /root/SCC/Sessions/2025-05-08_024324/Results/SCAP/UBUNTU_SCC-5.10.2_2025-05-08_024324_Non-Compliance_CAN_Ubuntu_22-04_LTS_STIG-2.1.1.html
02:47:30 - Saved results from 50 of 179 XCCDF rules
02:47:30 - Saved results from 100 of 179 XCCDF rules
02:47:30 - Saved results from 150 of 179 XCCDF rules


Manual Question Auto-Answer file for CAN_Ubuntu_22-04_LTS_STIG, version: 2.1.1 was not found in:
/opt/scc/Resources/Content/Manual_Questions/Completed_Files/

        All manual checks will be marked as 'Not Reviewed'.

        * For CSCC Command Line Usage: Manual Question Auto-Answer templates for DISA STIG manual
        checks can be found in:/opt/scc/Resources/Content/Manual_Questions/Templates/
* For SCC GUI Usage:  Manual Question Auto-Answer results for DISA STIG manual checks can
        be created by clicking on the 'Manual Questions' button in 'Content Details'

02:47:31 - Adjusted Score - 24.36% [RED]
02:47:31 - Original Score - 24.36% [RED]

Scan session completed : 2025-05-08_024324
Analyzing Scan Session
Reading session data for 1 computers

Creating Summary Viewer
Summary Viewer created at /root/SCC/Sessions/2025-05-08_024324/SCC_Summary_Viewer_2025-05-08_024324.html

Total Errors: 0
Total Warnings: 1

Manual Question AutoAnswer file(s) were not found for: 1 SCAP Benchmarks, please review the scan session error log for more information

Review complete.
Session Results (XML, HTML, Text), if any, are located in the following directory:
/root/SCC/Sessions/2025-05-08_024324/Results/

Session Logs (Debug, Screen, Error), if any, are located in the following directory:
/root/SCC/Sessions/2025-05-08_024324/Logs/

Application Logs (Debug, Screen, Error), if any, are located in the following directory:
/root/SCC/ApplicationLogs/

SCC Scan and Report Creation Complete
ubuntu:/opt/scc$ apt -y install apache2
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following package was automatically installed and is no longer required:
  squashfs-tools
Use 'apt autoremove' to remove it.
The following additional packages will be installed:
  apache2-bin apache2-data apache2-utils libapr1t64 libaprutil1-dbd-sqlite3 libaprutil1-ldap
  libaprutil1t64 liblua5.4-0 ssl-cert
Suggested packages:
  apache2-doc apache2-suexec-pristine | apache2-suexec-custom www-browser
The following NEW packages will be installed:
  apache2 apache2-bin apache2-data apache2-utils libapr1t64 libaprutil1-dbd-sqlite3 libaprutil1-ldap
  libaprutil1t64 liblua5.4-0 ssl-cert
0 upgraded, 10 newly installed, 0 to remove and 152 not upgraded.
Need to get 2084 kB of archives.
After this operation, 8094 kB of additional disk space will be used.
Get:1 http://archive.ubuntu.com/ubuntu noble-updates/main amd64 libapr1t64 amd64 1.7.2-3.1ubuntu0.1 [108 kB]
Get:2 http://archive.ubuntu.com/ubuntu noble/main amd64 libaprutil1t64 amd64 1.6.3-1.1ubuntu7 [91.9 kB]
Get:3 http://archive.ubuntu.com/ubuntu noble/main amd64 libaprutil1-dbd-sqlite3 amd64 1.6.3-1.1ubuntu7 [11.2 kB]
Get:4 http://archive.ubuntu.com/ubuntu noble/main amd64 libaprutil1-ldap amd64 1.6.3-1.1ubuntu7 [9116 B]
Get:5 http://archive.ubuntu.com/ubuntu noble/main amd64 liblua5.4-0 amd64 5.4.6-3build2 [166 kB]
Get:6 http://archive.ubuntu.com/ubuntu noble-updates/main amd64 apache2-bin amd64 2.4.58-1ubuntu8.6 [1330 kB]
Get:7 http://archive.ubuntu.com/ubuntu noble-updates/main amd64 apache2-data all 2.4.58-1ubuntu8.6 [163 kB]
Get:8 http://archive.ubuntu.com/ubuntu noble-updates/main amd64 apache2-utils amd64 2.4.58-1ubuntu8.6 [97.2 kB]
Get:9 http://archive.ubuntu.com/ubuntu noble-updates/main amd64 apache2 amd64 2.4.58-1ubuntu8.6 [90.2 kB]
Get:10 http://archive.ubuntu.com/ubuntu noble/main amd64 ssl-cert all 1.1.2ubuntu1 [17.8 kB]
Fetched 2084 kB in 1s (2263 kB/s)   
Preconfiguring packages ...
Selecting previously unselected package libapr1t64:amd64.
(Reading database ... 84058 files and directories currently installed.)
Preparing to unpack .../0-libapr1t64_1.7.2-3.1ubuntu0.1_amd64.deb ...
Unpacking libapr1t64:amd64 (1.7.2-3.1ubuntu0.1) ...
Selecting previously unselected package libaprutil1t64:amd64.
Preparing to unpack .../1-libaprutil1t64_1.6.3-1.1ubuntu7_amd64.deb ...
Unpacking libaprutil1t64:amd64 (1.6.3-1.1ubuntu7) ...
Selecting previously unselected package libaprutil1-dbd-sqlite3:amd64.
Preparing to unpack .../2-libaprutil1-dbd-sqlite3_1.6.3-1.1ubuntu7_amd64.deb ...
Unpacking libaprutil1-dbd-sqlite3:amd64 (1.6.3-1.1ubuntu7) ...
Selecting previously unselected package libaprutil1-ldap:amd64.
Preparing to unpack .../3-libaprutil1-ldap_1.6.3-1.1ubuntu7_amd64.deb ...
Unpacking libaprutil1-ldap:amd64 (1.6.3-1.1ubuntu7) ...
Selecting previously unselected package liblua5.4-0:amd64.
Preparing to unpack .../4-liblua5.4-0_5.4.6-3build2_amd64.deb ...
Unpacking liblua5.4-0:amd64 (5.4.6-3build2) ...
Selecting previously unselected package apache2-bin.
Preparing to unpack .../5-apache2-bin_2.4.58-1ubuntu8.6_amd64.deb ...
Unpacking apache2-bin (2.4.58-1ubuntu8.6) ...
Selecting previously unselected package apache2-data.
Preparing to unpack .../6-apache2-data_2.4.58-1ubuntu8.6_all.deb ...
Unpacking apache2-data (2.4.58-1ubuntu8.6) ...
Selecting previously unselected package apache2-utils.
Preparing to unpack .../7-apache2-utils_2.4.58-1ubuntu8.6_amd64.deb ...
Unpacking apache2-utils (2.4.58-1ubuntu8.6) ...
Selecting previously unselected package apache2.
Preparing to unpack .../8-apache2_2.4.58-1ubuntu8.6_amd64.deb ...
Unpacking apache2 (2.4.58-1ubuntu8.6) ...
Selecting previously unselected package ssl-cert.
Preparing to unpack .../9-ssl-cert_1.1.2ubuntu1_all.deb ...
Unpacking ssl-cert (1.1.2ubuntu1) ...
Setting up ssl-cert (1.1.2ubuntu1) ...
Created symlink /etc/systemd/system/multi-user.target.wants/ssl-cert.service → /usr/lib/systemd/system/ssl-cert.service.
Setting up libapr1t64:amd64 (1.7.2-3.1ubuntu0.1) ...
Setting up liblua5.4-0:amd64 (5.4.6-3build2) ...
Setting up apache2-data (2.4.58-1ubuntu8.6) ...
Setting up libaprutil1t64:amd64 (1.6.3-1.1ubuntu7) ...
Setting up libaprutil1-ldap:amd64 (1.6.3-1.1ubuntu7) ...
Setting up libaprutil1-dbd-sqlite3:amd64 (1.6.3-1.1ubuntu7) ...
Setting up apache2-utils (2.4.58-1ubuntu8.6) ...
Setting up apache2-bin (2.4.58-1ubuntu8.6) ...
Setting up apache2 (2.4.58-1ubuntu8.6) ...
Enabling module mpm_event.
Enabling module authz_core.
Enabling module authz_host.
Enabling module authn_core.
Enabling module auth_basic.
Enabling module access_compat.
Enabling module authn_file.
Enabling module authz_user.
Enabling module alias.
Enabling module dir.
Enabling module autoindex.
Enabling module env.
Enabling module mime.
Enabling module negotiation.
Enabling module setenvif.
Enabling module filter.
Enabling module deflate.
Enabling module status.
Enabling module reqtimeout.
Enabling conf charset.
Enabling conf localized-error-pages.
Enabling conf other-vhosts-access-log.
Enabling conf security.
Enabling conf serve-cgi-bin.
Enabling site 000-default.
Created symlink /etc/systemd/system/multi-user.target.wants/apache2.service → /usr/lib/systemd/system/apache2.service.
Created symlink /etc/systemd/system/multi-user.target.wants/apache-htcacheclean.service → /usr/lib/systemd/system/apache-htcacheclean.service.
Processing triggers for ufw (0.36.2-6) ...
Processing triggers for man-db (2.12.0-4build2) ...
Processing triggers for libc-bin (2.39-0ubuntu8.3) ...
Scanning processes...                                                                                   
Scanning linux images...                                                                                

Running kernel seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
ubuntu:/opt/scc$ cd /root/SCC/Sessions/*/Results/SCAP
ubuntu:~/SCC/Sessions/2025-05-08_024324/Results/SCAP$ cp *All* /var/www/html/index.html
ubuntu:~/SCC/Sessions/2025-05-08_024324/Results/SCAP$ 
ubuntu:~/SCC/Sessions/2025-05-08_024324/Results/SCAP$ 
ubuntu:~/SCC/Sessions/2025-05-08_024324/Results/SCAP$ 
ubuntu:~/SCC/Sessions/2025-05-08_024324/Results/SCAP$ 
ubuntu:~/SCC/Sessions/2025-05-08_024324/Results/SCAP$ history
    1  exit
    2  halt
    3  echo "Installing scenario..."
    4  while [ ! -f /tmp/finished ]; do sleep 1; done
    5  echo DONE
    6  mkdir /root/scc
    7  cd /root/scc
    8  wget https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/scc-5.10.2_ubuntu18_ubuntu20_amd64_bundle.zip -O scc-5.10.2_ubuntu18_ubuntu20_amd64_bundle.zip
    9  unzip scc-5.10.2_ubuntu18_ubuntu20_amd64_bundle.zip
   10  cd /root/scc/scc-5.10.2_ubuntu18_amd64/
   11  dpkg -i scc-5.10.2.ubuntu.18_amd64.deb
   12  cd /opt/scc
   13  /opt/scc/cscc --config
   14  apt -y install apache2
   15  cd /root/SCC/Sessions/*/Results/SCAP
   16  cp *All* /var/www/html/index.html
   17  history




























========================
























Download and run the SCC tool for STIG Compliance
Your team has to integrate with a U.S. Government system. There is a security requirement that you need to STIG (Security Technical Implementation Guide) your servers to a certain score. You have decided to use the SCC tool to scan your servers to see where they are currently at before any remediation.

Download and install the SCC tool.

Configure and Run the SCC tool for your OS.

Verify the output and see where the results are stored on your system.


Solution
Solution
Create a directory to facilitate your work.
mkdir /root/scc
cd /root/scc
Download the SCC tool from the Govenment site.

wget https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/scc-5.10.2_ubuntu18_ubuntu20_amd64_bundle.zip -O scc-5.10.2_ubuntu18_ubuntu20_amd64_bundle.zip
Unzip the scc tool.

unzip scc-5.10.2_ubuntu18_ubuntu20_amd64_bundle.zip
Change to the correct unzipped directory.

cd /root/scc/scc-5.10.2_ubuntu18_amd64/
Install the package with the dpkg installer.

dpkg -i scc-5.10.2.ubuntu.18_amd64.deb
Watch installer. Where does it say that the package has been installed?

Change directories to where the SCC tool is intalled.

cd /opt/scc
Configure and run the SCC command line scanner tool (cscc)

/opt/scc/cscc --config
Look at the menu and Acknowledge the change log by hitting Enter key.

Select Option 1: Configure SCAP content.

Use the numbers to deselect 1 and 3, so you only have "Canonical_Ubuntu_20-04_LTS_STI" selected.

Hit 0 and Enter to return to the main menu.

Hit 6 to enter Configuration Options.

Hit 1 to enter Scanning Options

Turn on option 1, "Run all SCAP content regardless of applicability"

Hit 0 and Enter to return to the previous.

Hit 0 and Enter to return to the main menu.

Hit 9 to scan and exit the tool

This may take up to 5 minutes

Watch the scan to see what it is doing.
When the scan completes, what is the score that you have?

What is the output directory of the Reports?

You are ready to head to the next part of the lab.






















=============================














Review your STIG Score from a webpage.
Setup the system so that you can use a web browser to view the STIG report at a high level.

Install Apache2 web server.

Copy the appropriate results .html file to the web root.

View the report to verify your findings.


Solution
Solution
Install the Apache2 server.
apt -y install apache2
Find the correct report. (This command assumes you've only run the scanner one time.)

cd /root/SCC/Sessions/*/Results/SCAP
Copy over the ALL .html file to the /var/www/html direcotry

cp *All* /var/www/html/index.html
Click on this link to access your score.

https://71d409d4c9df-10-244-21-105-80.saci.r.killercoda.com

View your STIG Score and see what remediations you have for CAT I, CAT II, and CAT III findings.





========================















Download and run the SCC tool for STIG Compliance
Your team has to integrate with a U.S. Government system. There is a security requirement that you need to STIG (Security Technical Implemenation Guide) your Firefox Browsers to a certain score. Your first task is to identify what your score is. Then, you can use that to plan a course of action to remediate your findings.

Download and install the SCC tool.

Install Firefox Browser.

Configure and Run the SCC tool for Firefox.

Verify the output and see where the results are stored on your system.


Solution
Solution
Create a directory to facilitate your work.
mkdir /root/scc
cd /root/scc
Download the SCC tool from the Govenment site.

wget https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/scc-5.10.2_ubuntu18_ubuntu20_amd64_bundle.zip -O scc-5.10.2_ubuntu18_ubuntu20_amd64_bundle.zip
Unzip the scc tool.

unzip scc-5.10.2_ubuntu18_ubuntu20_amd64_bundle.zip
Change to the correct unzipped directory.

cd /root/scc/scc-5.10.2_ubuntu18_amd64/
Install the package with the dpkg installer.

dpkg -i scc-5.10.2.ubuntu.18_amd64.deb
Watch installer. Where does it say that the package has been installed?

Install Firefox Browser.

apt -y install firefox
Now you are ready to set up the scan against Firefox

Change directories to where the SCC tool is intalled.

cd /opt/scc
Configure and run the SCC command line scanner tool (cscc)

/opt/scc/cscc --config
Look at the menu and Acknowledge the change log by hitting Enter key.

Select Option 1: Configure SCAP content.

Use the numbers to deselect 1, 2, and 3, so you only have "MOZ_Firefox_Linux" selected.

Hit 0 and Enter to return to the main menu.

Hit 6 to enter Configuration Options.

Hit 1 to enter Scanning Options

Turn on option 1, "Run all SCAP content regardless of applicability"

Hit 0 and Enter to return to the previous.

Hit 0 and Enter to return to the main menu.




Hit 9 to scan and exit the tool

This may take up to 5 minutes

Watch the scan to see what it is doing.
When the scan completes, what is the score that you have?

What is the output directory of the Reports?

You are ready to head to the next part of the lab.














========================



















Review your STIG Score from a webpage.
Setup the system so that you can use a web browser to view the Firefox STIG report at a high level.

Install Apache2 web server.

Copy the appropriate results .html file to the web root.

View the report to verify your findings.


Solution
Solution
Install the Apache2 server.
apt -y install apache2
Find the correct report. (This command assumes you've only run the scanner one time.)

cd /root/SCC/Sessions/*/Results/SCAP
Copy over the ALL .html file to the /var/www/html direcotry

cp *All* /var/www/html/index.html
Click on this link to access your score.

https://e8817e9684f3-10-244-20-114-80.saci.r.killercoda.com

View your Firefox STIG Score and see what remediations you have for CAT I, CAT II, and CAT III findings.



























============================
































SCC 5.10.2 configuration menu.  Configuration profile: default
/opt/scc/options.xml

  1. Configure SCAP content
  2. Configure SCAP profiles
  3. Delete SCAP content
  4. Configure OVAL content
  5. Delete OVAL content
  6. Configure Options
  7. Exit and save changes
  8. Exit without saving changes
  9. Exit, save changes, and perform scan of local computer

1 of 4 SCAP streams are enabled

0 of 0 OVAL streams are enabled
Invalid selection!


Enter menu selection: 9
Exiting, saving changes, and initiating scan.
Scan session started : 2025-05-08_025621
02:56:22 - Gathering system information for: LOCALHOST
02:56:22 - Domain: .
Preparing to scan UBUNTU...


Target: UBUNTU
Stream: scap_navy.navwar.niwcatlantic.scc_datastream_U_MOZ_Firefox_Linux_V6R4_STIG_SCAP_1-2_Benchmark-enhancedV4
Stream Version: 6.4.4
XCCDF: scap_mil.disa.stig.fso_comp_U_MOZ_Firefox_Linux_V6R4_STIG_SCAP_1-2_Benchmark-enhancedV4-xccdf.xml
Profile: xccdf_mil.disa.stig_profile_MAC-1_Classified
Time: 2025-05-08_025621
02:56:22 - Attempting to validate digital signature: U_MOZ_Firefox_Linux_V6R4_STIG_SCAP_1-3_Benchmark-enhancedV4.xml
02:56:22 - No Signature element found in scap_navy.navwar.niwcatlantic.scc_datastream_U_MOZ_Firefox_Linux_V6R4_STIG_SCAP_1-2_Benchmark-enhancedV4 A Signature element must be present for digital signature verification
02:56:22 - Loading SCAP 1.2 component 'scap_navy.navwar.niwcatlantic.scc_comp_U_MOZ_Firefox_Linux_V6R4_STIG_SCAP_1-2_Benchmark-enhancedV4-ocil.xml' from file '/opt/scc/Resources/Content/SCAP12_Content/U_MOZ_Firefox_Linux_V6R4_STIG_SCAP_1-3_Benchmark-enhancedV4.xml'
02:56:22 - Loading SCAP 1.2 component 'scap_mil.disa.stig.fso_comp_U_MOZ_Firefox_Linux_V6R4_STIG_SCAP_1-2_Benchmark-enhancedV4-cpe-oval.xml' from file '/opt/scc/Resources/Content/SCAP12_Content/U_MOZ_Firefox_Linux_V6R4_STIG_SCAP_1-3_Benchmark-enhancedV4.xml'
02:56:22 - CPE-OVAL Schema Version: 5.10
02:56:22 - Processing test : oval:mil.disa.stig.firefox.linux:tst:100
02:56:22 - Probe RpmInfo - unable to find the 'rpm' command on this system.  Setting oval:mil.disa.stig.firefox.linux:obj:100 as not applicable.
02:56:22 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:100 [not applicable]
02:56:22 - Processing test : oval:mil.disa.stig.firefox.linux:tst:101
02:56:22 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:101 [true]
02:56:22 - Loading SCAP 1.2 component 'scap_mil.disa.stig.fso_comp_U_MOZ_Firefox_Linux_V6R4_STIG_SCAP_1-2_Benchmark-enhancedV4-cpe-dictionary.xml' from file '/opt/scc/Resources/Content/SCAP12_Content/U_MOZ_Firefox_Linux_V6R4_STIG_SCAP_1-3_Benchmark-enhancedV4.xml'
02:56:22 - Determining if content has hybrid variables: /opt/scc/Resources/Content/SCAP12_Content/U_MOZ_Firefox_Linux_V6R4_STIG_SCAP_1-3_Benchmark-enhancedV4.xml
[WARN]02:56:22 - 
Manual Question Auto-Answer file for MOZ_Firefox_Linux, version: 6.4.4 was not found in:
/opt/scc/Resources/Content/Manual_Questions/Completed_Files/

        All manual checks will be marked as 'Not Reviewed'.

        * For CSCC Command Line Usage: Manual Question Auto-Answer templates for DISA STIG manual
        checks can be found in:/opt/scc/Resources/Content/Manual_Questions/Templates/
* For SCC GUI Usage:  Manual Question Auto-Answer results for DISA STIG manual checks can
        be created by clicking on the 'Manual Questions' button in 'Content Details'

           Target System  :     UBUNTU
           Stream Name :        MOZ_Firefox_Linux
           SCAP Stream:         MOZ_Firefox_Linux
           Profile ID:          xccdf_mil.disa.stig_profile_MAC-1_Classified
           Definition ID:       oval:mil.disa.stig.firefox.linux:def:1
           Test ID:             oval:mil.disa.stig.firefox.linux:tst:101
           Object ID:           oval:mil.disa.stig.firefox.linux:obj:101

02:56:22 - Loading SCAP 1.2 component 'scap_mil.disa.stig.fso_comp_U_MOZ_Firefox_Linux_V6R4_STIG_SCAP_1-2_Benchmark-enhancedV4-xccdf.xml' from file '/opt/scc/Resources/Content/SCAP12_Content/U_MOZ_Firefox_Linux_V6R4_STIG_SCAP_1-3_Benchmark-enhancedV4.xml'
02:56:23 - Loading default-thresholds.xml
02:56:23 - Processing rule : (1 of 34) The installed version of Firefox must be supported.
02:56:23 - Completed rule  : The installed version of Firefox must be supported. [notchecked]
02:56:23 - Processing rule : (2 of 34) Firefox must be configured to allow only TLS 1.2 or above.
02:56:23 - Loading SCAP 1.2 component 'scap_mil.disa.stig.fso_comp_U_MOZ_Firefox_Linux_V6R4_STIG_SCAP_1-2_Benchmark-enhancedV4-oval.xml' into the OVAL Engine from file '/opt/scc/Resources/Content/SCAP12_Content/U_MOZ_Firefox_Linux_V6R4_STIG_SCAP_1-3_Benchmark-enhancedV4.xml'
02:56:23 - Processing test : oval:mil.disa.stig.firefox.linux:tst:10100
02:56:23 - Search Criteria: path set to /usr with path_operation equals and file_name set to ^firefox.sh$|^firefox-bin$ with filename_operation pattern match
02:56:26 - Scanned a total of 8625 files and 1376 directories
02:56:38 - Scanned a total of 16089 files and 3912 directories
02:56:45 - Scanned a total of 25974 files and 4027 directories
02:56:54 - Scanned a total of 34581 files and 5420 directories
02:57:05 - Scanned a total of 43059 files and 6942 directories
02:57:15 - Scanned a total of 51746 files and 8255 directories
02:57:25 - Scanned a total of 60631 files and 9370 directories
02:57:28 - Scanned a total of 69927 files and 10074 directories
02:57:40 - Scanned a total of 77807 files and 12194 directories
02:57:49 - Scanned a total of 86804 files and 13197 directories
02:57:58 - Scanned a total of 95060 files and 14941 directories
02:58:07 - Scanned a total of 102099 files and 17902 directories
02:58:16 - Scanned a total of 110899 files and 19102 directories
02:58:22 - Scanned a total of 118998 files and 21003 directories
02:58:27 - File scan complete
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:10100 [false]
02:58:28 - Completed rule  : Firefox must be configured to allow only TLS 1.2 or above. [fail]
02:58:28 - Processing rule : (3 of 34) Firefox must be configured to ask which certificate to present to a website when a certificate is required.
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:10200
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:10200 [false]
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:10201
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:10201 [false]
02:58:28 - Completed rule  : Firefox must be configured to ask which certificate to present to a website when a certificate is required. [fail]
02:58:28 - Processing rule : (4 of 34) Firefox must be configured to not automatically check for updated versions of installed search plugins.
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:10300
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:10300 [false]
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:10301
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:10301 [false]
02:58:28 - Completed rule  : Firefox must be configured to not automatically check for updated versions of installed search plugins. [fail]
02:58:28 - Processing rule : (5 of 34) Firefox must be configured to not automatically update installed add-ons and plugins.
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:10400
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:10400 [false]
02:58:28 - Completed rule  : Firefox must be configured to not automatically update installed add-ons and plugins. [fail]
02:58:28 - Processing rule : (6 of 34) Firefox must be configured to not automatically execute or download MIME types that are not authorized for auto-download.
02:58:28 - Completed rule  : Firefox must be configured to not automatically execute or download MIME types that are not authorized for auto-download. [notchecked]
02:58:28 - Processing rule : (7 of 34) Firefox must be configured to disable form fill assistance.
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:10600
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:10600 [false]
02:58:28 - Completed rule  : Firefox must be configured to disable form fill assistance. [fail]
02:58:28 - Processing rule : (8 of 34) Firefox must be configured to not use a password store with or without a master password.
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:10700
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:10700 [false]
02:58:28 - Completed rule  : Firefox must be configured to not use a password store with or without a master password. [fail]
02:58:28 - Processing rule : (9 of 34) Firefox must be configured to block pop-up windows.
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:10800
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:10800 [false]
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:10801
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:10801 [false]
02:58:28 - Completed rule  : Firefox must be configured to block pop-up windows. [fail]
02:58:28 - Processing rule : (10 of 34) Firefox must be configured to prevent JavaScript from moving or resizing windows.
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:10900
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:10900 [false]
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:10901
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:10901 [false]
02:58:28 - Completed rule  : Firefox must be configured to prevent JavaScript from moving or resizing windows. [fail]
02:58:28 - Processing rule : (11 of 34) Firefox must be configured to prevent JavaScript from raising or lowering windows.
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:11000
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:11000 [false]
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:11001
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:11001 [false]
02:58:28 - Completed rule  : Firefox must be configured to prevent JavaScript from raising or lowering windows. [fail]
02:58:28 - Processing rule : (12 of 34) Firefox must be configured to disable the installation of extensions.
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:11200
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:11200 [false]
02:58:28 - Completed rule  : Firefox must be configured to disable the installation of extensions. [fail]
02:58:28 - Processing rule : (13 of 34) Background submission of information to Mozilla must be disabled.
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:11300
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:11300 [false]
02:58:28 - Completed rule  : Background submission of information to Mozilla must be disabled. [fail]
02:58:28 - Processing rule : (14 of 34) Firefox development tools must be disabled.
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:11400
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:11400 [false]
02:58:28 - Completed rule  : Firefox development tools must be disabled. [fail]
02:58:28 - Processing rule : (15 of 34) Firefox must have the DOD root certificates installed.
02:58:28 - Completed rule  : Firefox must have the DOD root certificates installed. [notchecked]
02:58:28 - Processing rule : (16 of 34) Firefox must prevent the user from quickly deleting data.
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:11700
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:11700 [false]
02:58:28 - Completed rule  : Firefox must prevent the user from quickly deleting data. [fail]
02:58:28 - Processing rule : (17 of 34) Firefox private browsing must be disabled.
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:11800
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:11800 [false]
02:58:28 - Completed rule  : Firefox private browsing must be disabled. [fail]
02:58:28 - Processing rule : (18 of 34) Firefox search suggestions must be disabled.
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:11900
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:11900 [false]
02:58:28 - Completed rule  : Firefox search suggestions must be disabled. [fail]
02:58:28 - Processing rule : (19 of 34) Firefox autoplay must be disabled.
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:12000
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:12000 [false]
02:58:28 - Completed rule  : Firefox autoplay must be disabled. [fail]
02:58:28 - Processing rule : (20 of 34) Firefox network prediction must be disabled.
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:12100
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:12100 [false]
02:58:28 - Completed rule  : Firefox network prediction must be disabled. [fail]
02:58:28 - Processing rule : (21 of 34) Firefox fingerprinting protection must be enabled.
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:12200
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:12200 [false]
02:58:28 - Completed rule  : Firefox fingerprinting protection must be enabled. [fail]
02:58:28 - Processing rule : (22 of 34) Firefox cryptomining protection must be enabled.
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:12300
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:12300 [false]
02:58:28 - Completed rule  : Firefox cryptomining protection must be enabled. [fail]
02:58:28 - Processing rule : (23 of 34) Firefox Enhanced Tracking Protection must be enabled.
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:12400
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:12400 [false]
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:12401
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:12401 [false]
02:58:28 - Completed rule  : Firefox Enhanced Tracking Protection must be enabled. [fail]
02:58:28 - Processing rule : (24 of 34) Firefox extension recommendations must be disabled.
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:12500
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:12500 [false]
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:12501
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:12501 [false]
02:58:28 - Completed rule  : Firefox extension recommendations must be disabled. [fail]
02:58:28 - Processing rule : (25 of 34) Firefox deprecated ciphers must be disabled.
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:12600
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:12600 [false]
02:58:28 - Completed rule  : Firefox deprecated ciphers must be disabled. [fail]
02:58:28 - Processing rule : (26 of 34) Firefox must not recommend extensions as the user is using the browser.
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:12700
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:12700 [false]
02:58:28 - Completed rule  : Firefox must not recommend extensions as the user is using the browser. [fail]
02:58:28 - Processing rule : (27 of 34) The Firefox New Tab page must not show Top Sites, Sponsored Top Sites, Pocket Recommendations, Sponsored Pocket Stories, Searches, Highlights, or Snippets.
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:12800
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:12800 [false]
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:12801
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:12801 [false]
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:12802
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:12802 [false]
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:12803
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:12803 [false]
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:12804
02:58:28 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:12804 [false]
02:58:28 - Processing test : oval:mil.disa.stig.firefox.linux:tst:12805
02:58:29 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:12805 [false]
02:58:29 - Processing test : oval:mil.disa.stig.firefox.linux:tst:12806
02:58:29 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:12806 [false]
02:58:29 - Processing test : oval:mil.disa.stig.firefox.linux:tst:12807
02:58:29 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:12807 [false]
02:58:29 - Completed rule  : The Firefox New Tab page must not show Top Sites, Sponsored Top Sites, Pocket Recommendations, Sponsored Pocket Stories, Searches, Highlights, or Snippets. [fail]
02:58:29 - Processing rule : (28 of 34) Firefox must be configured so that DNS over HTTPS is disabled.
02:58:29 - Processing test : oval:mil.disa.stig.firefox.linux:tst:13200
02:58:29 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:13200 [false]
02:58:29 - Completed rule  : Firefox must be configured so that DNS over HTTPS is disabled. [fail]
02:58:29 - Processing rule : (29 of 34) Firefox accounts must be disabled.
02:58:29 - Processing test : oval:mil.disa.stig.firefox.linux:tst:13300
02:58:29 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:13300 [false]
02:58:29 - Completed rule  : Firefox accounts must be disabled. [fail]
02:58:29 - Processing rule : (30 of 34) Firefox feedback reporting must be disabled.
02:58:29 - Processing test : oval:mil.disa.stig.firefox.linux:tst:13500
02:58:29 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:13500 [false]
02:58:29 - Completed rule  : Firefox feedback reporting must be disabled. [fail]
02:58:29 - Processing rule : (31 of 34) Firefox encrypted media extensions must be disabled.
02:58:29 - Processing test : oval:mil.disa.stig.firefox.linux:tst:13600
02:58:29 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:13600 [false]
02:58:29 - Processing test : oval:mil.disa.stig.firefox.linux:tst:13601
02:58:29 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:13601 [false]
02:58:29 - Completed rule  : Firefox encrypted media extensions must be disabled. [fail]
02:58:29 - Processing rule : (32 of 34) Firefox must be configured to not delete data upon shutdown.
02:58:29 - Processing test : oval:mil.disa.stig.firefox.linux:tst:11600
02:58:29 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:11600 [false]
02:58:29 - Processing test : oval:mil.disa.stig.firefox.linux:tst:11601
02:58:29 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:11601 [false]
02:58:29 - Processing test : oval:mil.disa.stig.firefox.linux:tst:11602
02:58:29 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:11602 [false]
02:58:29 - Processing test : oval:mil.disa.stig.firefox.linux:tst:11603
02:58:29 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:11603 [false]
02:58:29 - Processing test : oval:mil.disa.stig.firefox.linux:tst:11604
02:58:29 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:11604 [false]
02:58:29 - Processing test : oval:mil.disa.stig.firefox.linux:tst:11605
02:58:29 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:11605 [false]
02:58:29 - Processing test : oval:mil.disa.stig.firefox.linux:tst:11606
02:58:29 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:11606 [false]
02:58:29 - Processing test : oval:mil.disa.stig.firefox.linux:tst:11607
02:58:29 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:11607 [false]
02:58:29 - Processing test : oval:mil.disa.stig.firefox.linux:tst:11608
02:58:29 - Completed test  : oval:mil.disa.stig.firefox.linux:tst:11608 [false]
02:58:29 - Completed rule  : Firefox must be configured to not delete data upon shutdown. [fail]
02:58:29 - Processing rule : (33 of 34) Pocket must be disabled.
02:58:29 - Completed rule  : Pocket must be disabled. [notchecked]
02:58:29 - Processing rule : (34 of 34) Firefox Studies must be disabled.
02:58:29 - Completed rule  : Firefox Studies must be disabled. [notchecked]
02:58:29 - SCC processed 34 of 34 rules (0 were disabled.)
02:58:29 - Calculating scores
02:58:29 - Adding Detailed OVAL/OCIL Findings as XCCDF result messages
02:58:29 - Saving OVAL Results XML file/root/SCC/Sessions/2025-05-08_025621/Results/SCAP/XML/UBUNTU_SCC-5.10.2_2025-05-08_025621_OVAL-Results_MOZ_Firefox_Linux-6.4.4.xml
02:58:29 - Saving OVAL Variables XML file/root/SCC/Sessions/2025-05-08_025621/Results/SCAP/XML/UBUNTU_SCC-5.10.2_2025-05-08_025621_OVAL-Variables_MOZ_Firefox_Linux-6.4.4.xml
02:58:29 - Saving OCIL Results XML file/root/SCC/Sessions/2025-05-08_025621/Results/SCAP/XML/UBUNTU_SCC-5.10.2_2025-05-08_025621_OCIL-Results_MOZ_Firefox_Linux-6.4.4.xml
02:58:29 - Saving XCCDF Results XML file/root/SCC/Sessions/2025-05-08_025621/Results/SCAP/XML/UBUNTU_SCC-5.10.2_2025-05-08_025621_XCCDF-Results_MOZ_Firefox_Linux-6.4.4.xml
02:58:29 - Generating DISA Checklist (CKL) file from XCCDF Results: /root/SCC/Sessions/2025-05-08_025621/Results/SCAP/XML/UBUNTU_SCC-5.10.2_2025-05-08_025621_XCCDF-Results_MOZ_Firefox_Linux-6.4.4.xml
02:58:29 - XML schema validation successful for: /root/SCC/Sessions/2025-05-08_025621/Results/SCAP/Checklists/UBUNTU_SCC-5.10.2_2025-05-08_025621_Checklist_MOZ_Firefox_Linux-6.4.4.ckl.
02:58:29 - Generating report /root/SCC/Sessions/2025-05-08_025621/Results/SCAP/UBUNTU_SCC-5.10.2_2025-05-08_025621_All-Settings_MOZ_Firefox_Linux-6.4.4.html
02:58:30 - Generating report /root/SCC/Sessions/2025-05-08_025621/Results/SCAP/UBUNTU_SCC-5.10.2_2025-05-08_025621_Non-Compliance_MOZ_Firefox_Linux-6.4.4.html


Manual Question Auto-Answer file for MOZ_Firefox_Linux, version: 6.4.4 was not found in:
/opt/scc/Resources/Content/Manual_Questions/Completed_Files/

        All manual checks will be marked as 'Not Reviewed'.

        * For CSCC Command Line Usage: Manual Question Auto-Answer templates for DISA STIG manual
        checks can be found in:/opt/scc/Resources/Content/Manual_Questions/Templates/
* For SCC GUI Usage:  Manual Question Auto-Answer results for DISA STIG manual checks can
        be created by clicking on the 'Manual Questions' button in 'Content Details'

02:58:30 - Adjusted Score - 0% [RED]
02:58:30 - Original Score - 0% [RED]

Scan session completed : 2025-05-08_025621
Analyzing Scan Session
Reading session data for 1 computers

Creating Summary Viewer
Summary Viewer created at /root/SCC/Sessions/2025-05-08_025621/SCC_Summary_Viewer_2025-05-08_025621.html

Total Errors: 0
Total Warnings: 1

Manual Question AutoAnswer file(s) were not found for: 1 SCAP Benchmarks, please review the scan session error log for more information

Review complete.
Session Results (XML, HTML, Text), if any, are located in the following directory:
/root/SCC/Sessions/2025-05-08_025621/Results/

Session Logs (Debug, Screen, Error), if any, are located in the following directory:
/root/SCC/Sessions/2025-05-08_025621/Logs/

Application Logs (Debug, Screen, Error), if any, are located in the following directory:
/root/SCC/ApplicationLogs/

SCC Scan and Report Creation Complete
ubuntu:/opt/scc$ apt -y install apache2
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following additional packages will be installed:
  apache2-bin apache2-data apache2-utils libapr1t64 libaprutil1-dbd-sqlite3 libaprutil1-ldap
  libaprutil1t64 liblua5.4-0 ssl-cert
Suggested packages:
  apache2-doc apache2-suexec-pristine | apache2-suexec-custom
The following NEW packages will be installed:
  apache2 apache2-bin apache2-data apache2-utils libapr1t64 libaprutil1-dbd-sqlite3 libaprutil1-ldap
  libaprutil1t64 liblua5.4-0 ssl-cert
0 upgraded, 10 newly installed, 0 to remove and 152 not upgraded.
Need to get 2084 kB of archives.
After this operation, 8094 kB of additional disk space will be used.
Get:1 http://archive.ubuntu.com/ubuntu noble-updates/main amd64 libapr1t64 amd64 1.7.2-3.1ubuntu0.1 [108 kB]
Get:2 http://archive.ubuntu.com/ubuntu noble/main amd64 libaprutil1t64 amd64 1.6.3-1.1ubuntu7 [91.9 kB]
Get:3 http://archive.ubuntu.com/ubuntu noble/main amd64 libaprutil1-dbd-sqlite3 amd64 1.6.3-1.1ubuntu7 [11.2 kB]
Get:4 http://archive.ubuntu.com/ubuntu noble/main amd64 libaprutil1-ldap amd64 1.6.3-1.1ubuntu7 [9116 B]
Get:5 http://archive.ubuntu.com/ubuntu noble/main amd64 liblua5.4-0 amd64 5.4.6-3build2 [166 kB]
Get:6 http://archive.ubuntu.com/ubuntu noble-updates/main amd64 apache2-bin amd64 2.4.58-1ubuntu8.6 [1330 kB]
Get:7 http://archive.ubuntu.com/ubuntu noble-updates/main amd64 apache2-data all 2.4.58-1ubuntu8.6 [163 kB]
Get:8 http://archive.ubuntu.com/ubuntu noble-updates/main amd64 apache2-utils amd64 2.4.58-1ubuntu8.6 [97.2 kB]
Get:9 http://archive.ubuntu.com/ubuntu noble-updates/main amd64 apache2 amd64 2.4.58-1ubuntu8.6 [90.2 kB]
Get:10 http://archive.ubuntu.com/ubuntu noble/main amd64 ssl-cert all 1.1.2ubuntu1 [17.8 kB]
Fetched 2084 kB in 0s (8821 kB/s)
Preconfiguring packages ...
Selecting previously unselected package libapr1t64:amd64.
(Reading database ... 84176 files and directories currently installed.)
Preparing to unpack .../0-libapr1t64_1.7.2-3.1ubuntu0.1_amd64.deb ...
Unpacking libapr1t64:amd64 (1.7.2-3.1ubuntu0.1) ...
Selecting previously unselected package libaprutil1t64:amd64.
Preparing to unpack .../1-libaprutil1t64_1.6.3-1.1ubuntu7_amd64.deb ...
Unpacking libaprutil1t64:amd64 (1.6.3-1.1ubuntu7) ...
Selecting previously unselected package libaprutil1-dbd-sqlite3:amd64.
Preparing to unpack .../2-libaprutil1-dbd-sqlite3_1.6.3-1.1ubuntu7_amd64.deb ...
Unpacking libaprutil1-dbd-sqlite3:amd64 (1.6.3-1.1ubuntu7) ...
Selecting previously unselected package libaprutil1-ldap:amd64.
Preparing to unpack .../3-libaprutil1-ldap_1.6.3-1.1ubuntu7_amd64.deb ...
Unpacking libaprutil1-ldap:amd64 (1.6.3-1.1ubuntu7) ...
Selecting previously unselected package liblua5.4-0:amd64.
Preparing to unpack .../4-liblua5.4-0_5.4.6-3build2_amd64.deb ...
Unpacking liblua5.4-0:amd64 (5.4.6-3build2) ...
Selecting previously unselected package apache2-bin.
Preparing to unpack .../5-apache2-bin_2.4.58-1ubuntu8.6_amd64.deb ...
Unpacking apache2-bin (2.4.58-1ubuntu8.6) ...
Selecting previously unselected package apache2-data.
Preparing to unpack .../6-apache2-data_2.4.58-1ubuntu8.6_all.deb ...
Unpacking apache2-data (2.4.58-1ubuntu8.6) ...
Selecting previously unselected package apache2-utils.
Preparing to unpack .../7-apache2-utils_2.4.58-1ubuntu8.6_amd64.deb ...
Unpacking apache2-utils (2.4.58-1ubuntu8.6) ...
Selecting previously unselected package apache2.
Preparing to unpack .../8-apache2_2.4.58-1ubuntu8.6_amd64.deb ...
Unpacking apache2 (2.4.58-1ubuntu8.6) ...
Selecting previously unselected package ssl-cert.
Preparing to unpack .../9-ssl-cert_1.1.2ubuntu1_all.deb ...
Unpacking ssl-cert (1.1.2ubuntu1) ...
Setting up ssl-cert (1.1.2ubuntu1) ...
Created symlink /etc/systemd/system/multi-user.target.wants/ssl-cert.service → /usr/lib/systemd/system/ssl-cert.service.
Setting up libapr1t64:amd64 (1.7.2-3.1ubuntu0.1) ...
Setting up liblua5.4-0:amd64 (5.4.6-3build2) ...
Setting up apache2-data (2.4.58-1ubuntu8.6) ...
Setting up libaprutil1t64:amd64 (1.6.3-1.1ubuntu7) ...
Setting up libaprutil1-ldap:amd64 (1.6.3-1.1ubuntu7) ...
Setting up libaprutil1-dbd-sqlite3:amd64 (1.6.3-1.1ubuntu7) ...
Setting up apache2-utils (2.4.58-1ubuntu8.6) ...
Setting up apache2-bin (2.4.58-1ubuntu8.6) ...
Setting up apache2 (2.4.58-1ubuntu8.6) ...
Enabling module mpm_event.
Enabling module authz_core.
Enabling module authz_host.
Enabling module authn_core.
Enabling module auth_basic.
Enabling module access_compat.
Enabling module authn_file.
Enabling module authz_user.
Enabling module alias.
Enabling module dir.
Enabling module autoindex.
Enabling module env.
Enabling module mime.
Enabling module negotiation.
Enabling module setenvif.
Enabling module filter.
Enabling module deflate.
Enabling module status.
Enabling module reqtimeout.
Enabling conf charset.
Enabling conf localized-error-pages.
Enabling conf other-vhosts-access-log.
Enabling conf security.
Enabling conf serve-cgi-bin.
Enabling site 000-default.
Created symlink /etc/systemd/system/multi-user.target.wants/apache2.service → /usr/lib/systemd/system/apache2.service.
Created symlink /etc/systemd/system/multi-user.target.wants/apache-htcacheclean.service → /usr/lib/systemd/system/apache-htcacheclean.service.
Processing triggers for ufw (0.36.2-6) ...
Processing triggers for man-db (2.12.0-4build2) ...
Processing triggers for libc-bin (2.39-0ubuntu8.3) ...
Scanning processes...                                                                                   
Scanning linux images...                                                                                

Running kernel seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
ubuntu:/opt/scc$ cd /root/SCC/Sessions/*/Results/SCAP
ubuntu:~/SCC/Sessions/2025-05-08_025621/Results/SCAP$ cp *All* /var/www/html/index.html
ubuntu:~/SCC/Sessions/2025-05-08_025621/Results/SCAP$ history
    1  exit
    2  halt
    3  echo "Installing scenario..."
    4  while [ ! -f /tmp/finished ]; do sleep 1; done
    5  echo DONE
    6  mkdir /root/scc
    7  cd /root/scc
    8  wget https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/scc-5.10.2_ubuntu18_ubuntu20_amd64_bundle.zip -O scc-5.10.2_ubuntu18_ubuntu20_amd64_bundle.zip
    9  unzip scc-5.10.2_ubuntu18_ubuntu20_amd64_bundle.zip
   10  cd /root/scc/scc-5.10.2_ubuntu18_amd64/
   11  dpkg -i scc-5.10.2.ubuntu.18_amd64.deb
   12  apt -y install firefox
   13  cd /opt/scc
   14  /opt/scc/cscc --config
   15  apt -y install apache2
   16  cd /root/SCC/Sessions/*/Results/SCAP
   17  cp *All* /var/www/html/index.html
   18  history
ubuntu:~/SCC/Sessions/2025-05-08_025621/Results/SCAP$ 




































